"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunksuperset"] = globalThis["webpackChunksuperset"] || []).push([["plugins_plugin-chart-pivot-table_src_PivotTableChart_tsx"],{

/***/ "./node_modules/@ant-design/icons/es/icons/MinusSquareOutlined.js":
/*!************************************************************************!*\
  !*** ./node_modules/@ant-design/icons/es/icons/MinusSquareOutlined.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _ant_design_icons_svg_es_asn_MinusSquareOutlined__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ant-design/icons-svg/es/asn/MinusSquareOutlined */ \"./node_modules/@ant-design/icons-svg/es/asn/MinusSquareOutlined.js\");\n/* harmony import */ var _components_AntdIcon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/AntdIcon */ \"./node_modules/@ant-design/icons/es/components/AntdIcon.js\");\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\n\n\nvar MinusSquareOutlined = function MinusSquareOutlined(props, ref) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_AntdIcon__WEBPACK_IMPORTED_MODULE_1__[\"default\"], (0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, props), {}, {\n    ref: ref,\n    icon: _ant_design_icons_svg_es_asn_MinusSquareOutlined__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n  }));\n};\nMinusSquareOutlined.displayName = 'MinusSquareOutlined';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(MinusSquareOutlined));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFudC1kZXNpZ24vaWNvbnMvZXMvaWNvbnMvTWludXNTcXVhcmVPdXRsaW5lZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL0BhbnQtZGVzaWduL2ljb25zL2VzL2ljb25zL01pbnVzU3F1YXJlT3V0bGluZWQuanM/ODE0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMlwiO1xuLy8gR0VORVJBVEUgQlkgLi9zY3JpcHRzL2dlbmVyYXRlLnRzXG4vLyBET04gTk9UIEVESVQgSVQgTUFOVUFMTFlcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBNaW51c1NxdWFyZU91dGxpbmVkU3ZnIGZyb20gXCJAYW50LWRlc2lnbi9pY29ucy1zdmcvZXMvYXNuL01pbnVzU3F1YXJlT3V0bGluZWRcIjtcbmltcG9ydCBBbnRkSWNvbiBmcm9tICcuLi9jb21wb25lbnRzL0FudGRJY29uJztcbnZhciBNaW51c1NxdWFyZU91dGxpbmVkID0gZnVuY3Rpb24gTWludXNTcXVhcmVPdXRsaW5lZChwcm9wcywgcmVmKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChBbnRkSWNvbiwgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBwcm9wcyksIHt9LCB7XG4gICAgcmVmOiByZWYsXG4gICAgaWNvbjogTWludXNTcXVhcmVPdXRsaW5lZFN2Z1xuICB9KSk7XG59O1xuTWludXNTcXVhcmVPdXRsaW5lZC5kaXNwbGF5TmFtZSA9ICdNaW51c1NxdWFyZU91dGxpbmVkJztcbmV4cG9ydCBkZWZhdWx0IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKE1pbnVzU3F1YXJlT3V0bGluZWQpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@ant-design/icons/es/icons/MinusSquareOutlined.js\n");

/***/ }),

/***/ "./node_modules/@ant-design/icons/es/icons/PlusSquareOutlined.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ant-design/icons/es/icons/PlusSquareOutlined.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _ant_design_icons_svg_es_asn_PlusSquareOutlined__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ant-design/icons-svg/es/asn/PlusSquareOutlined */ \"./node_modules/@ant-design/icons-svg/es/asn/PlusSquareOutlined.js\");\n/* harmony import */ var _components_AntdIcon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/AntdIcon */ \"./node_modules/@ant-design/icons/es/components/AntdIcon.js\");\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\n\n\nvar PlusSquareOutlined = function PlusSquareOutlined(props, ref) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_AntdIcon__WEBPACK_IMPORTED_MODULE_1__[\"default\"], (0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, props), {}, {\n    ref: ref,\n    icon: _ant_design_icons_svg_es_asn_PlusSquareOutlined__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n  }));\n};\nPlusSquareOutlined.displayName = 'PlusSquareOutlined';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(PlusSquareOutlined));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGFudC1kZXNpZ24vaWNvbnMvZXMvaWNvbnMvUGx1c1NxdWFyZU91dGxpbmVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvQGFudC1kZXNpZ24vaWNvbnMvZXMvaWNvbnMvUGx1c1NxdWFyZU91dGxpbmVkLmpzP2M0NjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDJcIjtcbi8vIEdFTkVSQVRFIEJZIC4vc2NyaXB0cy9nZW5lcmF0ZS50c1xuLy8gRE9OIE5PVCBFRElUIElUIE1BTlVBTExZXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUGx1c1NxdWFyZU91dGxpbmVkU3ZnIGZyb20gXCJAYW50LWRlc2lnbi9pY29ucy1zdmcvZXMvYXNuL1BsdXNTcXVhcmVPdXRsaW5lZFwiO1xuaW1wb3J0IEFudGRJY29uIGZyb20gJy4uL2NvbXBvbmVudHMvQW50ZEljb24nO1xudmFyIFBsdXNTcXVhcmVPdXRsaW5lZCA9IGZ1bmN0aW9uIFBsdXNTcXVhcmVPdXRsaW5lZChwcm9wcywgcmVmKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChBbnRkSWNvbiwgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBwcm9wcyksIHt9LCB7XG4gICAgcmVmOiByZWYsXG4gICAgaWNvbjogUGx1c1NxdWFyZU91dGxpbmVkU3ZnXG4gIH0pKTtcbn07XG5QbHVzU3F1YXJlT3V0bGluZWQuZGlzcGxheU5hbWUgPSAnUGx1c1NxdWFyZU91dGxpbmVkJztcbmV4cG9ydCBkZWZhdWx0IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKFBsdXNTcXVhcmVPdXRsaW5lZCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@ant-design/icons/es/icons/PlusSquareOutlined.js\n");

/***/ }),

/***/ "./plugins/plugin-chart-pivot-table/src/react-pivottable/PivotTable.jsx":
/*!******************************************************************************!*\
  !*** ./plugins/plugin-chart-pivot-table/src/react-pivottable/PivotTable.jsx ***!
  \******************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _TableRenderers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TableRenderers */ \"./plugins/plugin-chart-pivot-table/src/react-pivottable/TableRenderers.jsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\nclass PivotTable extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n  render() {\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(_TableRenderers__WEBPACK_IMPORTED_MODULE_2__.TableRenderer, this.props);\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nPivotTable.propTypes = _TableRenderers__WEBPACK_IMPORTED_MODULE_2__.TableRenderer.propTypes;\nPivotTable.defaultProps = _TableRenderers__WEBPACK_IMPORTED_MODULE_2__.TableRenderer.defaultProps;const _default =\n\nPivotTable;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PivotTable, \"PivotTable\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/PivotTable.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/PivotTable.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL3BsdWdpbi1jaGFydC1waXZvdC10YWJsZS9zcmMvcmVhY3QtcGl2b3R0YWJsZS9QaXZvdFRhYmxlLmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBR0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vcGx1Z2lucy9wbHVnaW4tY2hhcnQtcGl2b3QtdGFibGUvc3JjL3JlYWN0LXBpdm90dGFibGUvUGl2b3RUYWJsZS5qc3g/OWY4NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBUYWJsZVJlbmRlcmVyIH0gZnJvbSAnLi9UYWJsZVJlbmRlcmVycyc7XG5cbmNsYXNzIFBpdm90VGFibGUgZXh0ZW5kcyBSZWFjdC5QdXJlQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiA8VGFibGVSZW5kZXJlciB7Li4udGhpcy5wcm9wc30gLz47XG4gIH1cbn1cblxuUGl2b3RUYWJsZS5wcm9wVHlwZXMgPSBUYWJsZVJlbmRlcmVyLnByb3BUeXBlcztcblBpdm90VGFibGUuZGVmYXVsdFByb3BzID0gVGFibGVSZW5kZXJlci5kZWZhdWx0UHJvcHM7XG5cbmV4cG9ydCBkZWZhdWx0IFBpdm90VGFibGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./plugins/plugin-chart-pivot-table/src/react-pivottable/PivotTable.jsx\n");

/***/ }),

/***/ "./plugins/plugin-chart-pivot-table/src/react-pivottable/Styles.js":
/*!*************************************************************************!*\
  !*** ./plugins/plugin-chart-pivot-table/src/react-pivottable/Styles.js ***!
  \*************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Styles: () => (/* binding */ Styles)\n/* harmony export */ });\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @superset-ui/core */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\nconst Styles = _superset_ui_core__WEBPACK_IMPORTED_MODULE_0__.styled.div`\n  ${(_ref) => {let { theme, isDashboardEditMode } = _ref;return (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_1__.css)`\n    table.pvtTable {\n      position: ${isDashboardEditMode ? 'inherit' : 'relative'};\n      width: calc(100% - ${theme.gridUnit}px);\n      font-size: ${theme.typography.sizes.s}px;\n      text-align: left;\n      margin: ${theme.gridUnit}px;\n      border-collapse: separate;\n      font-family: ${theme.typography.families.sansSerif};\n      line-height: 1.4;\n    }\n\n    table thead {\n      position: ${isDashboardEditMode ? 'inherit' : 'sticky'};\n      top: 0;\n    }\n\n    table tbody tr {\n      font-feature-settings: 'tnum' 1;\n    }\n\n    table.pvtTable thead tr th,\n    table.pvtTable tbody tr th {\n      background-color: ${theme.colors.grayscale.light5};\n      border-top: 1px solid ${theme.colors.grayscale.light2};\n      border-left: 1px solid ${theme.colors.grayscale.light2};\n      font-size: ${theme.typography.sizes.s}px;\n      padding: ${theme.gridUnit}px;\n      font-weight: ${theme.typography.weights.normal};\n    }\n\n    table.pvtTable tbody tr.pvtRowTotals {\n      position: ${isDashboardEditMode ? 'inherit' : 'sticky'};\n      bottom: 0;\n    }\n\n    table.pvtTable thead tr:last-of-type th,\n    table.pvtTable thead tr:first-of-type th.pvtTotalLabel,\n    table.pvtTable thead tr:nth-last-of-type(2) th.pvtColLabel,\n    table.pvtTable thead th.pvtSubtotalLabel,\n    table.pvtTable tbody tr:last-of-type th,\n    table.pvtTable tbody tr:last-of-type td {\n      border-bottom: 1px solid ${theme.colors.grayscale.light2};\n    }\n\n    table.pvtTable\n      thead\n      tr:last-of-type:not(:only-child)\n      th.pvtAxisLabel\n      ~ th.pvtColLabel,\n    table.pvtTable tbody tr:first-of-type th,\n    table.pvtTable tbody tr:first-of-type td {\n      border-top: none;\n    }\n\n    table.pvtTable tbody tr td:last-of-type,\n    table.pvtTable thead tr th:last-of-type:not(.pvtSubtotalLabel) {\n      border-right: 1px solid ${theme.colors.grayscale.light2};\n    }\n\n    table.pvtTable\n      thead\n      tr:last-of-type:not(:only-child)\n      th.pvtAxisLabel\n      + .pvtTotalLabel {\n      border-right: none;\n    }\n\n    table.pvtTable tr th.active {\n      background-color: ${theme.colors.primary.light3};\n    }\n\n    table.pvtTable .pvtTotalLabel {\n      text-align: right;\n      font-weight: ${theme.typography.weights.bold};\n    }\n\n    table.pvtTable .pvtSubtotalLabel {\n      font-weight: ${theme.typography.weights.bold};\n    }\n\n    table.pvtTable tbody tr td {\n      color: ${theme.colors.primary.dark2};\n      padding: ${theme.gridUnit}px;\n      background-color: ${theme.colors.grayscale.light5};\n      border-top: 1px solid ${theme.colors.grayscale.light2};\n      border-left: 1px solid ${theme.colors.grayscale.light2};\n      vertical-align: top;\n      text-align: right;\n    }\n\n    table.pvtTable tbody tr th.pvtRowLabel {\n      vertical-align: baseline;\n    }\n\n    .pvtTotal,\n    .pvtGrandTotal {\n      font-weight: ${theme.typography.weights.bold};\n    }\n\n    table.pvtTable tbody tr td.pvtRowTotal {\n      vertical-align: middle;\n    }\n\n    .toggle-wrapper {\n      white-space: nowrap;\n    }\n\n    .toggle-wrapper > .toggle-val {\n      white-space: normal;\n    }\n\n    .toggle {\n      padding-right: ${theme.gridUnit}px;\n      cursor: pointer;\n    }\n\n    .hoverable:hover {\n      background-color: ${theme.colors.primary.light4};\n      cursor: pointer;\n    }\n  `;}}\n`;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Styles, \"Styles\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/Styles.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wbHVnaW5zL3BsdWdpbi1jaGFydC1waXZvdC10YWJsZS9zcmMvcmVhY3QtcGl2b3R0YWJsZS9TdHlsZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9wbHVnaW5zL3BsdWdpbi1jaGFydC1waXZvdC10YWJsZS9zcmMvcmVhY3QtcGl2b3R0YWJsZS9TdHlsZXMuanM/MDhhYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IGNzcywgc3R5bGVkIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuXG5leHBvcnQgY29uc3QgU3R5bGVzID0gc3R5bGVkLmRpdmBcbiAgJHsoeyB0aGVtZSwgaXNEYXNoYm9hcmRFZGl0TW9kZSB9KSA9PiBjc3NgXG4gICAgdGFibGUucHZ0VGFibGUge1xuICAgICAgcG9zaXRpb246ICR7aXNEYXNoYm9hcmRFZGl0TW9kZSA/ICdpbmhlcml0JyA6ICdyZWxhdGl2ZSd9O1xuICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtICR7dGhlbWUuZ3JpZFVuaXR9cHgpO1xuICAgICAgZm9udC1zaXplOiAke3RoZW1lLnR5cG9ncmFwaHkuc2l6ZXMuc31weDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBtYXJnaW46ICR7dGhlbWUuZ3JpZFVuaXR9cHg7XG4gICAgICBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlO1xuICAgICAgZm9udC1mYW1pbHk6ICR7dGhlbWUudHlwb2dyYXBoeS5mYW1pbGllcy5zYW5zU2VyaWZ9O1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgICB9XG5cbiAgICB0YWJsZSB0aGVhZCB7XG4gICAgICBwb3NpdGlvbjogJHtpc0Rhc2hib2FyZEVkaXRNb2RlID8gJ2luaGVyaXQnIDogJ3N0aWNreSd9O1xuICAgICAgdG9wOiAwO1xuICAgIH1cblxuICAgIHRhYmxlIHRib2R5IHRyIHtcbiAgICAgIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogJ3RudW0nIDE7XG4gICAgfVxuXG4gICAgdGFibGUucHZ0VGFibGUgdGhlYWQgdHIgdGgsXG4gICAgdGFibGUucHZ0VGFibGUgdGJvZHkgdHIgdGgge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmxpZ2h0NX07XG4gICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJHt0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmxpZ2h0Mn07XG4gICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICR7dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5saWdodDJ9O1xuICAgICAgZm9udC1zaXplOiAke3RoZW1lLnR5cG9ncmFwaHkuc2l6ZXMuc31weDtcbiAgICAgIHBhZGRpbmc6ICR7dGhlbWUuZ3JpZFVuaXR9cHg7XG4gICAgICBmb250LXdlaWdodDogJHt0aGVtZS50eXBvZ3JhcGh5LndlaWdodHMubm9ybWFsfTtcbiAgICB9XG5cbiAgICB0YWJsZS5wdnRUYWJsZSB0Ym9keSB0ci5wdnRSb3dUb3RhbHMge1xuICAgICAgcG9zaXRpb246ICR7aXNEYXNoYm9hcmRFZGl0TW9kZSA/ICdpbmhlcml0JyA6ICdzdGlja3knfTtcbiAgICAgIGJvdHRvbTogMDtcbiAgICB9XG5cbiAgICB0YWJsZS5wdnRUYWJsZSB0aGVhZCB0cjpsYXN0LW9mLXR5cGUgdGgsXG4gICAgdGFibGUucHZ0VGFibGUgdGhlYWQgdHI6Zmlyc3Qtb2YtdHlwZSB0aC5wdnRUb3RhbExhYmVsLFxuICAgIHRhYmxlLnB2dFRhYmxlIHRoZWFkIHRyOm50aC1sYXN0LW9mLXR5cGUoMikgdGgucHZ0Q29sTGFiZWwsXG4gICAgdGFibGUucHZ0VGFibGUgdGhlYWQgdGgucHZ0U3VidG90YWxMYWJlbCxcbiAgICB0YWJsZS5wdnRUYWJsZSB0Ym9keSB0cjpsYXN0LW9mLXR5cGUgdGgsXG4gICAgdGFibGUucHZ0VGFibGUgdGJvZHkgdHI6bGFzdC1vZi10eXBlIHRkIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUubGlnaHQyfTtcbiAgICB9XG5cbiAgICB0YWJsZS5wdnRUYWJsZVxuICAgICAgdGhlYWRcbiAgICAgIHRyOmxhc3Qtb2YtdHlwZTpub3QoOm9ubHktY2hpbGQpXG4gICAgICB0aC5wdnRBeGlzTGFiZWxcbiAgICAgIH4gdGgucHZ0Q29sTGFiZWwsXG4gICAgdGFibGUucHZ0VGFibGUgdGJvZHkgdHI6Zmlyc3Qtb2YtdHlwZSB0aCxcbiAgICB0YWJsZS5wdnRUYWJsZSB0Ym9keSB0cjpmaXJzdC1vZi10eXBlIHRkIHtcbiAgICAgIGJvcmRlci10b3A6IG5vbmU7XG4gICAgfVxuXG4gICAgdGFibGUucHZ0VGFibGUgdGJvZHkgdHIgdGQ6bGFzdC1vZi10eXBlLFxuICAgIHRhYmxlLnB2dFRhYmxlIHRoZWFkIHRyIHRoOmxhc3Qtb2YtdHlwZTpub3QoLnB2dFN1YnRvdGFsTGFiZWwpIHtcbiAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICR7dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5saWdodDJ9O1xuICAgIH1cblxuICAgIHRhYmxlLnB2dFRhYmxlXG4gICAgICB0aGVhZFxuICAgICAgdHI6bGFzdC1vZi10eXBlOm5vdCg6b25seS1jaGlsZClcbiAgICAgIHRoLnB2dEF4aXNMYWJlbFxuICAgICAgKyAucHZ0VG90YWxMYWJlbCB7XG4gICAgICBib3JkZXItcmlnaHQ6IG5vbmU7XG4gICAgfVxuXG4gICAgdGFibGUucHZ0VGFibGUgdHIgdGguYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLnByaW1hcnkubGlnaHQzfTtcbiAgICB9XG5cbiAgICB0YWJsZS5wdnRUYWJsZSAucHZ0VG90YWxMYWJlbCB7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgIGZvbnQtd2VpZ2h0OiAke3RoZW1lLnR5cG9ncmFwaHkud2VpZ2h0cy5ib2xkfTtcbiAgICB9XG5cbiAgICB0YWJsZS5wdnRUYWJsZSAucHZ0U3VidG90YWxMYWJlbCB7XG4gICAgICBmb250LXdlaWdodDogJHt0aGVtZS50eXBvZ3JhcGh5LndlaWdodHMuYm9sZH07XG4gICAgfVxuXG4gICAgdGFibGUucHZ0VGFibGUgdGJvZHkgdHIgdGQge1xuICAgICAgY29sb3I6ICR7dGhlbWUuY29sb3JzLnByaW1hcnkuZGFyazJ9O1xuICAgICAgcGFkZGluZzogJHt0aGVtZS5ncmlkVW5pdH1weDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5saWdodDV9O1xuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICR7dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5saWdodDJ9O1xuICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUubGlnaHQyfTtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICB9XG5cbiAgICB0YWJsZS5wdnRUYWJsZSB0Ym9keSB0ciB0aC5wdnRSb3dMYWJlbCB7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gICAgfVxuXG4gICAgLnB2dFRvdGFsLFxuICAgIC5wdnRHcmFuZFRvdGFsIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiAke3RoZW1lLnR5cG9ncmFwaHkud2VpZ2h0cy5ib2xkfTtcbiAgICB9XG5cbiAgICB0YWJsZS5wdnRUYWJsZSB0Ym9keSB0ciB0ZC5wdnRSb3dUb3RhbCB7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIH1cblxuICAgIC50b2dnbGUtd3JhcHBlciB7XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIH1cblxuICAgIC50b2dnbGUtd3JhcHBlciA+IC50b2dnbGUtdmFsIHtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gICAgfVxuXG4gICAgLnRvZ2dsZSB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAke3RoZW1lLmdyaWRVbml0fXB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cblxuICAgIC5ob3ZlcmFibGU6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGVtZS5jb2xvcnMucHJpbWFyeS5saWdodDR9O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgYH1cbmA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./plugins/plugin-chart-pivot-table/src/react-pivottable/Styles.js\n");

/***/ }),

/***/ "./plugins/plugin-chart-pivot-table/src/react-pivottable/TableRenderers.jsx":
/*!**********************************************************************************!*\
  !*** ./plugins/plugin-chart-pivot-table/src/react-pivottable/TableRenderers.jsx ***!
  \**********************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TableRenderer: () => (/* binding */ TableRenderer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utilities */ \"./plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");\n/* harmony import */ var _Styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Styles */ \"./plugins/plugin-chart-pivot-table/src/react-pivottable/Styles.js\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\n\nconst parseLabel = (value) => {\n  if (typeof value === 'number' || typeof value === 'string') {\n    return value;\n  }\n  return String(value);\n};\n\nfunction displayHeaderCell(\nneedToggle,\nArrowIcon,\nonArrowClick,\nvalue,\nnamesMapping)\n{\n  const name = namesMapping[value] || value;\n  return needToggle ?\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", { className: \"toggle-wrapper\" },\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {\n    role: \"button\",\n    tabIndex: \"0\",\n    className: \"toggle\",\n    onClick: onArrowClick },\n\n  ArrowIcon\n  ),\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", { className: \"toggle-val\" }, parseLabel(name))\n  ) :\n\n  parseLabel(name);\n\n}\n\nclass TableRenderer extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n\n    // We need state to record which entries are collapsed and which aren't.\n    // This is an object with flat-keys indicating if the corresponding rows\n    // should be collapsed.\n    this.state = { collapsedRows: {}, collapsedCols: {} };\n\n    this.clickHeaderHandler = this.clickHeaderHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  getBasePivotSettings() {\n    // One-time extraction of pivot settings that we'll use throughout the render.\n\n    const { props } = this;\n    const colAttrs = props.cols;\n    const rowAttrs = props.rows;\n\n    const tableOptions = {\n      rowTotals: true,\n      colTotals: true,\n      ...props.tableOptions\n    };\n    const rowTotals = tableOptions.rowTotals || colAttrs.length === 0;\n    const colTotals = tableOptions.colTotals || rowAttrs.length === 0;\n\n    const namesMapping = props.namesMapping || {};\n    const subtotalOptions = {\n      arrowCollapsed: '\\u25B2',\n      arrowExpanded: '\\u25BC',\n      ...props.subtotalOptions\n    };\n\n    const colSubtotalDisplay = {\n      displayOnTop: false,\n      enabled: rowTotals,\n      hideOnExpand: false,\n      ...subtotalOptions.colSubtotalDisplay\n    };\n\n    const rowSubtotalDisplay = {\n      displayOnTop: false,\n      enabled: colTotals,\n      hideOnExpand: false,\n      ...subtotalOptions.rowSubtotalDisplay\n    };\n\n    const pivotData = new _utilities__WEBPACK_IMPORTED_MODULE_2__.PivotData(props, {\n      rowEnabled: rowSubtotalDisplay.enabled,\n      colEnabled: colSubtotalDisplay.enabled,\n      rowPartialOnTop: rowSubtotalDisplay.displayOnTop,\n      colPartialOnTop: colSubtotalDisplay.displayOnTop\n    });\n    const rowKeys = pivotData.getRowKeys();\n    const colKeys = pivotData.getColKeys();\n\n    // Also pre-calculate all the callbacks for cells, etc... This is nice to have to\n    // avoid re-calculations of the call-backs on cell expansions, etc...\n    const cellCallbacks = {};\n    const rowTotalCallbacks = {};\n    const colTotalCallbacks = {};\n    let grandTotalCallback = null;\n    if (tableOptions.clickCallback) {\n      rowKeys.forEach((rowKey) => {\n        const flatRowKey = (0,_utilities__WEBPACK_IMPORTED_MODULE_2__.flatKey)(rowKey);\n        if (!(flatRowKey in cellCallbacks)) {\n          cellCallbacks[flatRowKey] = {};\n        }\n        colKeys.forEach((colKey) => {\n          cellCallbacks[flatRowKey][(0,_utilities__WEBPACK_IMPORTED_MODULE_2__.flatKey)(colKey)] = this.clickHandler(\n            pivotData,\n            rowKey,\n            colKey\n          );\n        });\n      });\n\n      // Add in totals as well.\n      if (rowTotals) {\n        rowKeys.forEach((rowKey) => {\n          rowTotalCallbacks[(0,_utilities__WEBPACK_IMPORTED_MODULE_2__.flatKey)(rowKey)] = this.clickHandler(\n            pivotData,\n            rowKey,\n            []\n          );\n        });\n      }\n      if (colTotals) {\n        colKeys.forEach((colKey) => {\n          colTotalCallbacks[(0,_utilities__WEBPACK_IMPORTED_MODULE_2__.flatKey)(colKey)] = this.clickHandler(\n            pivotData,\n            [],\n            colKey\n          );\n        });\n      }\n      if (rowTotals && colTotals) {\n        grandTotalCallback = this.clickHandler(pivotData, [], []);\n      }\n    }\n\n    return {\n      pivotData,\n      colAttrs,\n      rowAttrs,\n      colKeys,\n      rowKeys,\n      rowTotals,\n      colTotals,\n      arrowCollapsed: subtotalOptions.arrowCollapsed,\n      arrowExpanded: subtotalOptions.arrowExpanded,\n      colSubtotalDisplay,\n      rowSubtotalDisplay,\n      cellCallbacks,\n      rowTotalCallbacks,\n      colTotalCallbacks,\n      grandTotalCallback,\n      namesMapping\n    };\n  }\n\n  clickHandler(pivotData, rowValues, colValues) {\n    const colAttrs = this.props.cols;\n    const rowAttrs = this.props.rows;\n    const value = pivotData.getAggregator(rowValues, colValues).value();\n    const filters = {};\n    const colLimit = Math.min(colAttrs.length, colValues.length);\n    for (let i = 0; i < colLimit; i += 1) {\n      const attr = colAttrs[i];\n      if (colValues[i] !== null) {\n        filters[attr] = colValues[i];\n      }\n    }\n    const rowLimit = Math.min(rowAttrs.length, rowValues.length);\n    for (let i = 0; i < rowLimit; i += 1) {\n      const attr = rowAttrs[i];\n      if (rowValues[i] !== null) {\n        filters[attr] = rowValues[i];\n      }\n    }\n    return (e) =>\n    this.props.tableOptions.clickCallback(e, value, filters, pivotData);\n  }\n\n  clickHeaderHandler(\n  pivotData,\n  values,\n  attrs,\n  attrIdx,\n  callback,\n  isSubtotal,\n  isGrandTotal)\n  {if (isSubtotal === void 0) {isSubtotal = false;}if (isGrandTotal === void 0) {isGrandTotal = false;}\n    const filters = {};\n    for (let i = 0; i <= attrIdx; i += 1) {\n      const attr = attrs[i];\n      filters[attr] = values[i];\n    }\n    return (e) =>\n    callback(\n      e,\n      values[attrIdx],\n      filters,\n      pivotData,\n      isSubtotal,\n      isGrandTotal\n    );\n  }\n\n  collapseAttr(rowOrCol, attrIdx, allKeys) {\n    return (e) => {\n      // Collapse an entire attribute.\n      e.stopPropagation();\n      const keyLen = attrIdx + 1;\n      const collapsed = allKeys.filter((k) => k.length === keyLen).map(_utilities__WEBPACK_IMPORTED_MODULE_2__.flatKey);\n\n      const updates = {};\n      collapsed.forEach((k) => {\n        updates[k] = true;\n      });\n\n      if (rowOrCol) {\n        this.setState((state) => ({\n          collapsedRows: { ...state.collapsedRows, ...updates }\n        }));\n      } else {\n        this.setState((state) => ({\n          collapsedCols: { ...state.collapsedCols, ...updates }\n        }));\n      }\n    };\n  }\n\n  expandAttr(rowOrCol, attrIdx, allKeys) {\n    return (e) => {\n      // Expand an entire attribute. This implicitly implies expanding all of the\n      // parents as well. It's a bit inefficient but ah well...\n      e.stopPropagation();\n      const updates = {};\n      allKeys.forEach((k) => {\n        for (let i = 0; i <= attrIdx; i += 1) {\n          updates[(0,_utilities__WEBPACK_IMPORTED_MODULE_2__.flatKey)(k.slice(0, i + 1))] = false;\n        }\n      });\n\n      if (rowOrCol) {\n        this.setState((state) => ({\n          collapsedRows: { ...state.collapsedRows, ...updates }\n        }));\n      } else {\n        this.setState((state) => ({\n          collapsedCols: { ...state.collapsedCols, ...updates }\n        }));\n      }\n    };\n  }\n\n  toggleRowKey(flatRowKey) {\n    return (e) => {\n      e.stopPropagation();\n      this.setState((state) => ({\n        collapsedRows: {\n          ...state.collapsedRows,\n          [flatRowKey]: !state.collapsedRows[flatRowKey]\n        }\n      }));\n    };\n  }\n\n  toggleColKey(flatColKey) {\n    return (e) => {\n      e.stopPropagation();\n      this.setState((state) => ({\n        collapsedCols: {\n          ...state.collapsedCols,\n          [flatColKey]: !state.collapsedCols[flatColKey]\n        }\n      }));\n    };\n  }\n\n  calcAttrSpans(attrArr, numAttrs) {\n    // Given an array of attribute values (i.e. each element is another array with\n    // the value at every level), compute the spans for every attribute value at\n    // every level. The return value is a nested array of the same shape. It has\n    // -1's for repeated values and the span number otherwise.\n\n    const spans = [];\n    // Index of the last new value\n    const li = Array(numAttrs).map(() => 0);\n    let lv = Array(numAttrs).map(() => null);\n    for (let i = 0; i < attrArr.length; i += 1) {\n      // Keep increasing span values as long as the last keys are the same. For\n      // the rest, record spans of 1. Update the indices too.\n      const cv = attrArr[i];\n      const ent = [];\n      let depth = 0;\n      const limit = Math.min(lv.length, cv.length);\n      while (depth < limit && lv[depth] === cv[depth]) {\n        ent.push(-1);\n        spans[li[depth]][depth] += 1;\n        depth += 1;\n      }\n      while (depth < cv.length) {\n        li[depth] = i;\n        ent.push(1);\n        depth += 1;\n      }\n      spans.push(ent);\n      lv = cv;\n    }\n    return spans;\n  }\n\n  renderColHeaderRow(attrName, attrIdx, pivotSettings) {\n    // Render a single row in the column header at the top of the pivot table.\n\n    const {\n      rowAttrs,\n      colAttrs,\n      colKeys,\n      visibleColKeys,\n      colAttrSpans,\n      rowTotals,\n      arrowExpanded,\n      arrowCollapsed,\n      colSubtotalDisplay,\n      maxColVisible,\n      pivotData,\n      namesMapping\n    } = pivotSettings;\n    const {\n      highlightHeaderCellsOnHover,\n      omittedHighlightHeaderGroups = [],\n      highlightedHeaderCells,\n      dateFormatters\n    } = this.props.tableOptions;\n\n    const spaceCell =\n    attrIdx === 0 && rowAttrs.length !== 0 ?\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", {\n      key: \"padding\",\n      colSpan: rowAttrs.length,\n      rowSpan: colAttrs.length,\n      \"aria-hidden\": \"true\" }\n    ) :\n    null;\n\n    const needToggle =\n    colSubtotalDisplay.enabled && attrIdx !== colAttrs.length - 1;\n    let arrowClickHandle = null;\n    let subArrow = null;\n    if (needToggle) {\n      arrowClickHandle =\n      attrIdx + 1 < maxColVisible ?\n      this.collapseAttr(false, attrIdx, colKeys) :\n      this.expandAttr(false, attrIdx, colKeys);\n      subArrow = attrIdx + 1 < maxColVisible ? arrowExpanded : arrowCollapsed;\n    }\n    const attrNameCell =\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", { key: \"label\", className: \"pvtAxisLabel\" },\n    displayHeaderCell(\n      needToggle,\n      subArrow,\n      arrowClickHandle,\n      attrName,\n      namesMapping\n    )\n    );\n\n\n    const attrValueCells = [];\n    const rowIncrSpan = rowAttrs.length !== 0 ? 1 : 0;\n    // Iterate through columns. Jump over duplicate values.\n    let i = 0;\n    while (i < visibleColKeys.length) {\n      let handleContextMenu;\n      const colKey = visibleColKeys[i];\n      const colSpan = attrIdx < colKey.length ? colAttrSpans[i][attrIdx] : 1;\n      let colLabelClass = 'pvtColLabel';\n      if (attrIdx < colKey.length) {\n        if (!omittedHighlightHeaderGroups.includes(colAttrs[attrIdx])) {\n          if (highlightHeaderCellsOnHover) {\n            colLabelClass += ' hoverable';\n          }\n          handleContextMenu = (e) =>\n          this.props.onContextMenu(e, colKey, undefined, {\n            [attrName]: colKey[attrIdx]\n          });\n        }\n        if (\n        highlightedHeaderCells &&\n        Array.isArray(highlightedHeaderCells[colAttrs[attrIdx]]) &&\n        highlightedHeaderCells[colAttrs[attrIdx]].includes(colKey[attrIdx]))\n        {\n          colLabelClass += ' active';\n        }\n\n        const rowSpan = 1 + (attrIdx === colAttrs.length - 1 ? rowIncrSpan : 0);\n        const flatColKey = (0,_utilities__WEBPACK_IMPORTED_MODULE_2__.flatKey)(colKey.slice(0, attrIdx + 1));\n        const onArrowClick = needToggle ? this.toggleColKey(flatColKey) : null;\n\n        const headerCellFormattedValue =\n        dateFormatters &&\n        dateFormatters[attrName] &&\n        typeof dateFormatters[attrName] === 'function' ?\n        dateFormatters[attrName](colKey[attrIdx]) :\n        colKey[attrIdx];\n        attrValueCells.push(\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", {\n            className: colLabelClass,\n            key: `colKey-${flatColKey}`,\n            colSpan: colSpan,\n            rowSpan: rowSpan,\n            onClick: this.clickHeaderHandler(\n              pivotData,\n              colKey,\n              this.props.cols,\n              attrIdx,\n              this.props.tableOptions.clickColumnHeaderCallback\n            ),\n            onContextMenu: handleContextMenu },\n\n          displayHeaderCell(\n            needToggle,\n            this.state.collapsedCols[flatColKey] ?\n            arrowCollapsed :\n            arrowExpanded,\n            onArrowClick,\n            headerCellFormattedValue,\n            namesMapping\n          )\n          )\n        );\n      } else if (attrIdx === colKey.length) {\n        const rowSpan = colAttrs.length - colKey.length + rowIncrSpan;\n        attrValueCells.push(\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", {\n            className: `${colLabelClass} pvtSubtotalLabel`,\n            key: `colKeyBuffer-${(0,_utilities__WEBPACK_IMPORTED_MODULE_2__.flatKey)(colKey)}`,\n            colSpan: colSpan,\n            rowSpan: rowSpan,\n            onClick: this.clickHeaderHandler(\n              pivotData,\n              colKey,\n              this.props.cols,\n              attrIdx,\n              this.props.tableOptions.clickColumnHeaderCallback,\n              true\n            ) },\n\n          (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.t)('Subtotal')\n          )\n        );\n      }\n      // The next colSpan columns will have the same value anyway...\n      i += colSpan;\n    }\n\n    const totalCell =\n    attrIdx === 0 && rowTotals ?\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", {\n      key: \"total\",\n      className: \"pvtTotalLabel\",\n      rowSpan: colAttrs.length + Math.min(rowAttrs.length, 1),\n      onClick: this.clickHeaderHandler(\n        pivotData,\n        [],\n        this.props.cols,\n        attrIdx,\n        this.props.tableOptions.clickColumnHeaderCallback,\n        false,\n        true\n      ) },\n\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.t)('Total (%(aggregatorName)s)', {\n      aggregatorName: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.t)(this.props.aggregatorName)\n    })\n    ) :\n    null;\n\n    const cells = [spaceCell, attrNameCell, ...attrValueCells, totalCell];\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"tr\", { key: `colAttr-${attrIdx}` }, cells);\n  }\n\n  renderRowHeaderRow(pivotSettings) {\n    // Render just the attribute names of the rows (the actual attribute values\n    // will show up in the individual rows).\n\n    const {\n      rowAttrs,\n      colAttrs,\n      rowKeys,\n      arrowCollapsed,\n      arrowExpanded,\n      rowSubtotalDisplay,\n      maxRowVisible,\n      pivotData,\n      namesMapping\n    } = pivotSettings;\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"tr\", { key: \"rowHdr\" },\n      rowAttrs.map((r, i) => {\n        const needLabelToggle =\n        rowSubtotalDisplay.enabled && i !== rowAttrs.length - 1;\n        let arrowClickHandle = null;\n        let subArrow = null;\n        if (needLabelToggle) {\n          arrowClickHandle =\n          i + 1 < maxRowVisible ?\n          this.collapseAttr(true, i, rowKeys) :\n          this.expandAttr(true, i, rowKeys);\n          subArrow = i + 1 < maxRowVisible ? arrowExpanded : arrowCollapsed;\n        }\n        return (\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", { className: \"pvtAxisLabel\", key: `rowAttr-${i}` },\n          displayHeaderCell(\n            needLabelToggle,\n            subArrow,\n            arrowClickHandle,\n            r,\n            namesMapping\n          )\n          ));\n\n      }),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", {\n        className: \"pvtTotalLabel\",\n        key: \"padding\",\n        onClick: this.clickHeaderHandler(\n          pivotData,\n          [],\n          this.props.rows,\n          0,\n          this.props.tableOptions.clickRowHeaderCallback,\n          false,\n          true\n        ) },\n\n      colAttrs.length === 0 ?\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.t)('Total (%(aggregatorName)s)', {\n        aggregatorName: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.t)(this.props.aggregatorName)\n      }) :\n      null\n      )\n      ));\n\n  }\n\n  renderTableRow(rowKey, rowIdx, pivotSettings) {\n    // Render a single row in the pivot table.\n\n    const {\n      rowAttrs,\n      colAttrs,\n      rowAttrSpans,\n      visibleColKeys,\n      pivotData,\n      rowTotals,\n      rowSubtotalDisplay,\n      arrowExpanded,\n      arrowCollapsed,\n      cellCallbacks,\n      rowTotalCallbacks,\n      namesMapping\n    } = pivotSettings;\n\n    const {\n      highlightHeaderCellsOnHover,\n      omittedHighlightHeaderGroups = [],\n      highlightedHeaderCells,\n      cellColorFormatters,\n      dateFormatters\n    } = this.props.tableOptions;\n    const flatRowKey = (0,_utilities__WEBPACK_IMPORTED_MODULE_2__.flatKey)(rowKey);\n\n    const colIncrSpan = colAttrs.length !== 0 ? 1 : 0;\n    const attrValueCells = rowKey.map((r, i) => {\n      let handleContextMenu;\n      let valueCellClassName = 'pvtRowLabel';\n      if (!omittedHighlightHeaderGroups.includes(rowAttrs[i])) {\n        if (highlightHeaderCellsOnHover) {\n          valueCellClassName += ' hoverable';\n        }\n        handleContextMenu = (e) =>\n        this.props.onContextMenu(e, undefined, rowKey, {\n          [rowAttrs[i]]: r\n        });\n      }\n      if (\n      highlightedHeaderCells &&\n      Array.isArray(highlightedHeaderCells[rowAttrs[i]]) &&\n      highlightedHeaderCells[rowAttrs[i]].includes(r))\n      {\n        valueCellClassName += ' active';\n      }\n      const rowSpan = rowAttrSpans[rowIdx][i];\n      if (rowSpan > 0) {\n        const flatRowKey = (0,_utilities__WEBPACK_IMPORTED_MODULE_2__.flatKey)(rowKey.slice(0, i + 1));\n        const colSpan = 1 + (i === rowAttrs.length - 1 ? colIncrSpan : 0);\n        const needRowToggle =\n        rowSubtotalDisplay.enabled && i !== rowAttrs.length - 1;\n        const onArrowClick = needRowToggle ?\n        this.toggleRowKey(flatRowKey) :\n        null;\n\n        const headerCellFormattedValue =\n        dateFormatters && dateFormatters[rowAttrs[i]] ?\n        dateFormatters[rowAttrs[i]](r) :\n        r;\n        return (\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", {\n            key: `rowKeyLabel-${i}`,\n            className: valueCellClassName,\n            rowSpan: rowSpan,\n            colSpan: colSpan,\n            onClick: this.clickHeaderHandler(\n              pivotData,\n              rowKey,\n              this.props.rows,\n              i,\n              this.props.tableOptions.clickRowHeaderCallback\n            ),\n            onContextMenu: handleContextMenu },\n\n          displayHeaderCell(\n            needRowToggle,\n            this.state.collapsedRows[flatRowKey] ?\n            arrowCollapsed :\n            arrowExpanded,\n            onArrowClick,\n            headerCellFormattedValue,\n            namesMapping\n          )\n          ));\n\n      }\n      return null;\n    });\n\n    const attrValuePaddingCell =\n    rowKey.length < rowAttrs.length ?\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", {\n      className: \"pvtRowLabel pvtSubtotalLabel\",\n      key: \"rowKeyBuffer\",\n      colSpan: rowAttrs.length - rowKey.length + colIncrSpan,\n      rowSpan: 1,\n      onClick: this.clickHeaderHandler(\n        pivotData,\n        rowKey,\n        this.props.rows,\n        rowKey.length,\n        this.props.tableOptions.clickRowHeaderCallback,\n        true\n      ) },\n\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.t)('Subtotal')\n    ) :\n    null;\n\n    const rowClickHandlers = cellCallbacks[flatRowKey] || {};\n    const valueCells = visibleColKeys.map((colKey) => {\n      const flatColKey = (0,_utilities__WEBPACK_IMPORTED_MODULE_2__.flatKey)(colKey);\n      const agg = pivotData.getAggregator(rowKey, colKey);\n      const aggValue = agg.value();\n\n      const keys = [...rowKey, ...colKey];\n      let backgroundColor;\n      if (cellColorFormatters) {\n        Object.values(cellColorFormatters).forEach((cellColorFormatter) => {\n          if (Array.isArray(cellColorFormatter)) {\n            keys.forEach((key) => {\n              if (backgroundColor) {\n                return;\n              }\n              cellColorFormatter.\n              filter((formatter) => formatter.column === key).\n              forEach((formatter) => {\n                const formatterResult = formatter.getColorFromValue(aggValue);\n                if (formatterResult) {\n                  backgroundColor = formatterResult;\n                }\n              });\n            });\n          }\n        });\n      }\n\n      const style = agg.isSubtotal ?\n      { fontWeight: 'bold' } :\n      { backgroundColor };\n\n      return (\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          role: \"gridcell\",\n          className: \"pvtVal\",\n          key: `pvtVal-${flatColKey}`,\n          onClick: rowClickHandlers[flatColKey],\n          onContextMenu: (e) => this.props.onContextMenu(e, colKey, rowKey),\n          style: style },\n\n        agg.format(aggValue)\n        ));\n\n    });\n\n    let totalCell = null;\n    if (rowTotals) {\n      const agg = pivotData.getAggregator(rowKey, []);\n      const aggValue = agg.value();\n      totalCell =\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n        role: \"gridcell\",\n        key: \"total\",\n        className: \"pvtTotal\",\n        onClick: rowTotalCallbacks[flatRowKey],\n        onContextMenu: (e) => this.props.onContextMenu(e, undefined, rowKey) },\n\n      agg.format(aggValue)\n      );\n\n    }\n\n    const rowCells = [\n    ...attrValueCells,\n    attrValuePaddingCell,\n    ...valueCells,\n    totalCell];\n\n\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"tr\", { key: `keyRow-${flatRowKey}` }, rowCells);\n  }\n\n  renderTotalsRow(pivotSettings) {\n    // Render the final totals rows that has the totals for all the columns.\n\n    const {\n      rowAttrs,\n      colAttrs,\n      visibleColKeys,\n      rowTotals,\n      pivotData,\n      colTotalCallbacks,\n      grandTotalCallback\n    } = pivotSettings;\n\n    const totalLabelCell =\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", {\n      key: \"label\",\n      className: \"pvtTotalLabel pvtRowTotalLabel\",\n      colSpan: rowAttrs.length + Math.min(colAttrs.length, 1),\n      onClick: this.clickHeaderHandler(\n        pivotData,\n        [],\n        this.props.rows,\n        0,\n        this.props.tableOptions.clickRowHeaderCallback,\n        false,\n        true\n      ) },\n\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.t)('Total (%(aggregatorName)s)', {\n      aggregatorName: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.t)(this.props.aggregatorName)\n    })\n    );\n\n\n    const totalValueCells = visibleColKeys.map((colKey) => {\n      const flatColKey = (0,_utilities__WEBPACK_IMPORTED_MODULE_2__.flatKey)(colKey);\n      const agg = pivotData.getAggregator([], colKey);\n      const aggValue = agg.value();\n\n      return (\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n          role: \"gridcell\",\n          className: \"pvtTotal pvtRowTotal\",\n          key: `total-${flatColKey}`,\n          onClick: colTotalCallbacks[flatColKey],\n          onContextMenu: (e) => this.props.onContextMenu(e, colKey, undefined),\n          style: { padding: '5px' } },\n\n        agg.format(aggValue)\n        ));\n\n    });\n\n    let grandTotalCell = null;\n    if (rowTotals) {\n      const agg = pivotData.getAggregator([], []);\n      const aggValue = agg.value();\n      grandTotalCell =\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", {\n        role: \"gridcell\",\n        key: \"total\",\n        className: \"pvtGrandTotal pvtRowTotal\",\n        onClick: grandTotalCallback,\n        onContextMenu: (e) => this.props.onContextMenu(e, undefined, undefined) },\n\n      agg.format(aggValue)\n      );\n\n    }\n\n    const totalCells = [totalLabelCell, ...totalValueCells, grandTotalCell];\n\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"tr\", { key: \"total\", className: \"pvtRowTotals\" },\n      totalCells\n      ));\n\n  }\n\n  visibleKeys(keys, collapsed, numAttrs, subtotalDisplay) {\n    return keys.filter(\n      (key) =>\n      // Is the key hidden by one of its parents?\n      !key.some((k, j) => collapsed[(0,_utilities__WEBPACK_IMPORTED_MODULE_2__.flatKey)(key.slice(0, j))]) && (\n      // Leaf key.\n      key.length === numAttrs ||\n      // Children hidden. Must show total.\n      (0,_utilities__WEBPACK_IMPORTED_MODULE_2__.flatKey)(key) in collapsed ||\n      // Don't hide totals.\n      !subtotalDisplay.hideOnExpand)\n    );\n  }\n\n  isDashboardEditMode() {\n    return document.contains(document.querySelector('.dashboard--editing'));\n  }\n\n  render() {\n    if (this.cachedProps !== this.props) {\n      this.cachedProps = this.props;\n      this.cachedBasePivotSettings = this.getBasePivotSettings();\n    }\n    const {\n      colAttrs,\n      rowAttrs,\n      rowKeys,\n      colKeys,\n      colTotals,\n      rowSubtotalDisplay,\n      colSubtotalDisplay\n    } = this.cachedBasePivotSettings;\n\n    // Need to account for exclusions to compute the effective row\n    // and column keys.\n    const visibleRowKeys = this.visibleKeys(\n      rowKeys,\n      this.state.collapsedRows,\n      rowAttrs.length,\n      rowSubtotalDisplay\n    );\n    const visibleColKeys = this.visibleKeys(\n      colKeys,\n      this.state.collapsedCols,\n      colAttrs.length,\n      colSubtotalDisplay\n    );\n\n    const pivotSettings = {\n      visibleRowKeys,\n      maxRowVisible: Math.max(...visibleRowKeys.map((k) => k.length)),\n      visibleColKeys,\n      maxColVisible: Math.max(...visibleColKeys.map((k) => k.length)),\n      rowAttrSpans: this.calcAttrSpans(visibleRowKeys, rowAttrs.length),\n      colAttrSpans: this.calcAttrSpans(visibleColKeys, colAttrs.length),\n      ...this.cachedBasePivotSettings\n    };\n\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(_Styles__WEBPACK_IMPORTED_MODULE_4__.Styles, { isDashboardEditMode: this.isDashboardEditMode() },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"table\", { className: \"pvtTable\", role: \"grid\" },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"thead\", null,\n      colAttrs.map((c, j) =>\n      this.renderColHeaderRow(c, j, pivotSettings)\n      ),\n      rowAttrs.length !== 0 && this.renderRowHeaderRow(pivotSettings)\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"tbody\", null,\n      visibleRowKeys.map((r, i) =>\n      this.renderTableRow(r, i, pivotSettings)\n      ),\n      colTotals && this.renderTotalsRow(pivotSettings)\n      )\n      )\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nTableRenderer.propTypes = {\n  ..._utilities__WEBPACK_IMPORTED_MODULE_2__.PivotData.propTypes,\n  tableOptions: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().object),\n  onContextMenu: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().func)\n};\nTableRenderer.defaultProps = { ..._utilities__WEBPACK_IMPORTED_MODULE_2__.PivotData.defaultProps, tableOptions: {} };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(parseLabel, \"parseLabel\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/TableRenderers.jsx\");reactHotLoader.register(displayHeaderCell, \"displayHeaderCell\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/TableRenderers.jsx\");reactHotLoader.register(TableRenderer, \"TableRenderer\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/TableRenderers.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./plugins/plugin-chart-pivot-table/src/react-pivottable/TableRenderers.jsx\n");

/***/ }),

/***/ "./plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js":
/*!****************************************************************************!*\
  !*** ./plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js ***!
  \****************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PivotData: () => (/* binding */ PivotData),\n/* harmony export */   aggregatorTemplates: () => (/* binding */ aggregatorTemplates),\n/* harmony export */   flatKey: () => (/* binding */ flatKey),\n/* harmony export */   sortAs: () => (/* binding */ sortAs)\n/* harmony export */ });\n/* unused harmony exports aggregators, derivers, locales, naturalSort, numberFormat, getSort */\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\nconst addSeparators = function (nStr, thousandsSep, decimalSep) {\n  const x = String(nStr).split('.');\n  let x1 = x[0];\n  const x2 = x.length > 1 ? decimalSep + x[1] : '';\n  const rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, `$1${thousandsSep}$2`);\n  }\n  return x1 + x2;\n};\n\nconst numberFormat = function (optsIn) {\n  const defaults = {\n    digitsAfterDecimal: 2,\n    scaler: 1,\n    thousandsSep: ',',\n    decimalSep: '.',\n    prefix: '',\n    suffix: ''\n  };\n  const opts = { ...defaults, ...optsIn };\n  return function (x) {\n    if (Number.isNaN(x) || !Number.isFinite(x)) {\n      return '';\n    }\n    const result = addSeparators(\n      (opts.scaler * x).toFixed(opts.digitsAfterDecimal),\n      opts.thousandsSep,\n      opts.decimalSep\n    );\n    return `${opts.prefix}${result}${opts.suffix}`;\n  };\n};\n\nconst rx = /(\\d+)|(\\D+)/g;\nconst rd = /\\d/;\nconst rz = /^0/;\nconst naturalSort = (as, bs) => {\n  // nulls first\n  if (bs !== null && as === null) {\n    return -1;\n  }\n  if (as !== null && bs === null) {\n    return 1;\n  }\n\n  // then raw NaNs\n  if (typeof as === 'number' && Number.isNaN(as)) {\n    return -1;\n  }\n  if (typeof bs === 'number' && Number.isNaN(bs)) {\n    return 1;\n  }\n\n  // numbers and numbery strings group together\n  const nas = Number(as);\n  const nbs = Number(bs);\n  if (nas < nbs) {\n    return -1;\n  }\n  if (nas > nbs) {\n    return 1;\n  }\n\n  // within that, true numbers before numbery strings\n  if (typeof as === 'number' && typeof bs !== 'number') {\n    return -1;\n  }\n  if (typeof bs === 'number' && typeof as !== 'number') {\n    return 1;\n  }\n  if (typeof as === 'number' && typeof bs === 'number') {\n    return 0;\n  }\n\n  // 'Infinity' is a textual number, so less than 'A'\n  if (Number.isNaN(nbs) && !Number.isNaN(nas)) {\n    return -1;\n  }\n  if (Number.isNaN(nas) && !Number.isNaN(nbs)) {\n    return 1;\n  }\n\n  // finally, \"smart\" string sorting per http://stackoverflow.com/a/4373421/112871\n  let a = String(as);\n  let b = String(bs);\n  if (a === b) {\n    return 0;\n  }\n  if (!rd.test(a) || !rd.test(b)) {\n    return a > b ? 1 : -1;\n  }\n\n  // special treatment for strings containing digits\n  a = a.match(rx);\n  b = b.match(rx);\n  while (a.length && b.length) {\n    const a1 = a.shift();\n    const b1 = b.shift();\n    if (a1 !== b1) {\n      if (rd.test(a1) && rd.test(b1)) {\n        return a1.replace(rz, '.0') - b1.replace(rz, '.0');\n      }\n      return a1 > b1 ? 1 : -1;\n    }\n  }\n  return a.length - b.length;\n};\n\nconst sortAs = function (order) {\n  const mapping = {};\n\n  // sort lowercased keys similarly\n  const lMapping = {};\n  order.forEach((element, i) => {\n    mapping[element] = i;\n    if (typeof element === 'string') {\n      lMapping[element.toLowerCase()] = i;\n    }\n  });\n  return function (a, b) {\n    if (a in mapping && b in mapping) {\n      return mapping[a] - mapping[b];\n    }\n    if (a in mapping) {\n      return -1;\n    }\n    if (b in mapping) {\n      return 1;\n    }\n    if (a in lMapping && b in lMapping) {\n      return lMapping[a] - lMapping[b];\n    }\n    if (a in lMapping) {\n      return -1;\n    }\n    if (b in lMapping) {\n      return 1;\n    }\n    return naturalSort(a, b);\n  };\n};\n\nconst getSort = function (sorters, attr) {\n  if (sorters) {\n    if (typeof sorters === 'function') {\n      const sort = sorters(attr);\n      if (typeof sort === 'function') {\n        return sort;\n      }\n    } else if (attr in sorters) {\n      return sorters[attr];\n    }\n  }\n  return naturalSort;\n};\n\n// aggregator templates default to US number formatting but this is overridable\nconst usFmt = numberFormat();\nconst usFmtInt = numberFormat({ digitsAfterDecimal: 0 });\nconst usFmtPct = numberFormat({\n  digitsAfterDecimal: 1,\n  scaler: 100,\n  suffix: '%'\n});\n\nconst fmtNonString = (formatter) => (x) => typeof x === 'string' ? x : formatter(x);\n\nconst baseAggregatorTemplates = {\n  count(formatter) {if (formatter === void 0) {formatter = usFmtInt;}\n    return () =>\n    function () {\n      return {\n        count: 0,\n        push() {\n          this.count += 1;\n        },\n        value() {\n          return this.count;\n        },\n        format: formatter\n      };\n    };\n  },\n\n  uniques(fn, formatter) {if (formatter === void 0) {formatter = usFmtInt;}\n    return function (_ref) {let [attr] = _ref;\n      return function () {\n        return {\n          uniq: [],\n          push(record) {\n            if (!Array.from(this.uniq).includes(record[attr])) {\n              this.uniq.push(record[attr]);\n            }\n          },\n          value() {\n            return fn(this.uniq);\n          },\n          format: fmtNonString(formatter),\n          numInputs: typeof attr !== 'undefined' ? 0 : 1\n        };\n      };\n    };\n  },\n\n  sum(formatter) {if (formatter === void 0) {formatter = usFmt;}\n    return function (_ref2) {let [attr] = _ref2;\n      return function () {\n        return {\n          sum: 0,\n          push(record) {\n            if (Number.isNaN(Number(record[attr]))) {\n              this.sum = record[attr];\n            } else {\n              this.sum += parseFloat(record[attr]);\n            }\n          },\n          value() {\n            return this.sum;\n          },\n          format: fmtNonString(formatter),\n          numInputs: typeof attr !== 'undefined' ? 0 : 1\n        };\n      };\n    };\n  },\n\n  extremes(mode, formatter) {if (formatter === void 0) {formatter = usFmt;}\n    return function (_ref3) {let [attr] = _ref3;\n      return function (data) {\n        return {\n          val: null,\n          sorter: getSort(\n            typeof data !== 'undefined' ? data.sorters : null,\n            attr\n          ),\n          push(record) {\n            const x = record[attr];\n            if (['min', 'max'].includes(mode)) {\n              const coercedValue = Number(x);\n              if (Number.isNaN(coercedValue)) {\n                this.val =\n                !this.val ||\n                mode === 'min' && x < this.val ||\n                mode === 'max' && x > this.val ?\n                x :\n                this.val;\n              } else {\n                this.val = Math[mode](\n                  coercedValue,\n                  this.val !== null ? this.val : coercedValue\n                );\n              }\n            } else if (\n            mode === 'first' &&\n            this.sorter(x, this.val !== null ? this.val : x) <= 0)\n            {\n              this.val = x;\n            } else if (\n            mode === 'last' &&\n            this.sorter(x, this.val !== null ? this.val : x) >= 0)\n            {\n              this.val = x;\n            }\n          },\n          value() {\n            return this.val;\n          },\n          format(x) {\n            if (typeof x === 'number') {\n              return formatter(x);\n            }\n            return x;\n          },\n          numInputs: typeof attr !== 'undefined' ? 0 : 1\n        };\n      };\n    };\n  },\n\n  quantile(q, formatter) {if (formatter === void 0) {formatter = usFmt;}\n    return function (_ref4) {let [attr] = _ref4;\n      return function () {\n        return {\n          vals: [],\n          strMap: {},\n          push(record) {\n            const val = record[attr];\n            const x = Number(val);\n\n            if (Number.isNaN(x)) {\n              this.strMap[val] = (this.strMap[val] || 0) + 1;\n            } else {\n              this.vals.push(x);\n            }\n          },\n          value() {\n            if (\n            this.vals.length === 0 &&\n            Object.keys(this.strMap).length === 0)\n            {\n              return null;\n            }\n\n            if (Object.keys(this.strMap).length) {\n              const values = Object.values(this.strMap).sort((a, b) => a - b);\n              const middle = Math.floor(values.length / 2);\n\n              const keys = Object.keys(this.strMap);\n              return keys.length % 2 !== 0 ?\n              keys[middle] :\n              (keys[middle - 1] + keys[middle]) / 2;\n            }\n\n            this.vals.sort((a, b) => a - b);\n            const i = (this.vals.length - 1) * q;\n            return (this.vals[Math.floor(i)] + this.vals[Math.ceil(i)]) / 2.0;\n          },\n          format: fmtNonString(formatter),\n          numInputs: typeof attr !== 'undefined' ? 0 : 1\n        };\n      };\n    };\n  },\n\n  runningStat(mode, ddof, formatter) {if (mode === void 0) {mode = 'mean';}if (ddof === void 0) {ddof = 1;}if (formatter === void 0) {formatter = usFmt;}\n    return function (_ref5) {let [attr] = _ref5;\n      return function () {\n        return {\n          n: 0.0,\n          m: 0.0,\n          s: 0.0,\n          strValue: null,\n          push(record) {\n            const x = Number(record[attr]);\n            if (Number.isNaN(x)) {\n              this.strValue =\n              typeof record[attr] === 'string' ? record[attr] : this.strValue;\n              return;\n            }\n            this.n += 1.0;\n            if (this.n === 1.0) {\n              this.m = x;\n            }\n            const mNew = this.m + (x - this.m) / this.n;\n            this.s += (x - this.m) * (x - mNew);\n            this.m = mNew;\n          },\n          value() {\n            if (this.strValue) {\n              return this.strValue;\n            }\n\n            if (mode === 'mean') {\n              if (this.n === 0) {\n                return 0 / 0;\n              }\n              return this.m;\n            }\n            if (this.n <= ddof) {\n              return 0;\n            }\n            switch (mode) {\n              case 'var':\n                return this.s / (this.n - ddof);\n              case 'stdev':\n                return Math.sqrt(this.s / (this.n - ddof));\n              default:\n                throw new Error('unknown mode for runningStat');\n            }\n          },\n          format: fmtNonString(formatter),\n          numInputs: typeof attr !== 'undefined' ? 0 : 1\n        };\n      };\n    };\n  },\n\n  sumOverSum(formatter) {if (formatter === void 0) {formatter = usFmt;}\n    return function (_ref6) {let [num, denom] = _ref6;\n      return function () {\n        return {\n          sumNum: 0,\n          sumDenom: 0,\n          push(record) {\n            if (!Number.isNaN(Number(record[num]))) {\n              this.sumNum += parseFloat(record[num]);\n            }\n            if (!Number.isNaN(Number(record[denom]))) {\n              this.sumDenom += parseFloat(record[denom]);\n            }\n          },\n          value() {\n            return this.sumNum / this.sumDenom;\n          },\n          format: formatter,\n          numInputs:\n          typeof num !== 'undefined' && typeof denom !== 'undefined' ? 0 : 2\n        };\n      };\n    };\n  },\n\n  fractionOf(wrapped, type, formatter) {if (type === void 0) {type = 'total';}if (formatter === void 0) {formatter = usFmtPct;}\n    return function () {for (var _len = arguments.length, x = new Array(_len), _key = 0; _key < _len; _key++) {x[_key] = arguments[_key];}return (\n        function (data, rowKey, colKey) {\n          return {\n            selector: { total: [[], []], row: [rowKey, []], col: [[], colKey] }[\n            type],\n\n            inner: wrapped(...Array.from(x || []))(data, rowKey, colKey),\n            push(record) {\n              this.inner.push(record);\n            },\n            format: fmtNonString(formatter),\n            value() {\n              const acc = data.\n              getAggregator(...Array.from(this.selector || [])).\n              inner.value();\n\n              if (typeof acc === 'string') {\n                return acc;\n              }\n\n              return this.inner.value() / acc;\n            },\n            numInputs: wrapped(...Array.from(x || []))().numInputs\n          };\n        });};\n  }\n};\n\nconst extendedAggregatorTemplates = {\n  countUnique(f) {\n    return baseAggregatorTemplates.uniques((x) => x.length, f);\n  },\n  listUnique(s, f) {\n    return baseAggregatorTemplates.uniques((x) => x.join(s), f || ((x) => x));\n  },\n  max(f) {\n    return baseAggregatorTemplates.extremes('max', f);\n  },\n  min(f) {\n    return baseAggregatorTemplates.extremes('min', f);\n  },\n  first(f) {\n    return baseAggregatorTemplates.extremes('first', f);\n  },\n  last(f) {\n    return baseAggregatorTemplates.extremes('last', f);\n  },\n  median(f) {\n    return baseAggregatorTemplates.quantile(0.5, f);\n  },\n  average(f) {\n    return baseAggregatorTemplates.runningStat('mean', 1, f);\n  },\n  var(ddof, f) {\n    return baseAggregatorTemplates.runningStat('var', ddof, f);\n  },\n  stdev(ddof, f) {\n    return baseAggregatorTemplates.runningStat('stdev', ddof, f);\n  }\n};\n\nconst aggregatorTemplates = {\n  ...baseAggregatorTemplates,\n  ...extendedAggregatorTemplates\n};\n\n// default aggregators & renderers use US naming and number formatting\nconst aggregators = ((tpl) => ({\n  Count: tpl.count(usFmtInt),\n  'Count Unique Values': tpl.countUnique(usFmtInt),\n  'List Unique Values': tpl.listUnique(', '),\n  Sum: tpl.sum(usFmt),\n  'Integer Sum': tpl.sum(usFmtInt),\n  Average: tpl.average(usFmt),\n  Median: tpl.median(usFmt),\n  'Sample Variance': tpl.var(1, usFmt),\n  'Sample Standard Deviation': tpl.stdev(1, usFmt),\n  Minimum: tpl.min(usFmt),\n  Maximum: tpl.max(usFmt),\n  First: tpl.first(usFmt),\n  Last: tpl.last(usFmt),\n  'Sum over Sum': tpl.sumOverSum(usFmt),\n  'Sum as Fraction of Total': tpl.fractionOf(tpl.sum(), 'total', usFmtPct),\n  'Sum as Fraction of Rows': tpl.fractionOf(tpl.sum(), 'row', usFmtPct),\n  'Sum as Fraction of Columns': tpl.fractionOf(tpl.sum(), 'col', usFmtPct),\n  'Count as Fraction of Total': tpl.fractionOf(tpl.count(), 'total', usFmtPct),\n  'Count as Fraction of Rows': tpl.fractionOf(tpl.count(), 'row', usFmtPct),\n  'Count as Fraction of Columns': tpl.fractionOf(tpl.count(), 'col', usFmtPct)\n}))(aggregatorTemplates);\n\nconst locales = {\n  en: {\n    aggregators,\n    localeStrings: {\n      renderError: 'An error occurred rendering the PivotTable results.',\n      computeError: 'An error occurred computing the PivotTable results.',\n      uiRenderError: 'An error occurred rendering the PivotTable UI.',\n      selectAll: 'Select All',\n      selectNone: 'Select None',\n      tooMany: '(too many to list)',\n      filterResults: 'Filter values',\n      apply: 'Apply',\n      cancel: 'Cancel',\n      totals: 'Totals',\n      vs: 'vs',\n      by: 'by'\n    }\n  }\n};\n\n// dateFormat deriver l10n requires month and day names to be passed in directly\nconst mthNamesEn = [\n'Jan',\n'Feb',\n'Mar',\n'Apr',\n'May',\n'Jun',\n'Jul',\n'Aug',\n'Sep',\n'Oct',\n'Nov',\n'Dec'];\n\nconst dayNamesEn = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst zeroPad = (number) => `0${number}`.substr(-2, 2); // eslint-disable-line no-magic-numbers\n\nconst derivers = {\n  bin(col, binWidth) {\n    return (record) => record[col] - record[col] % binWidth;\n  },\n  dateFormat(\n  col,\n  formatString,\n  utcOutput,\n  mthNames,\n  dayNames)\n  {if (utcOutput === void 0) {utcOutput = false;}if (mthNames === void 0) {mthNames = mthNamesEn;}if (dayNames === void 0) {dayNames = dayNamesEn;}\n    const utc = utcOutput ? 'UTC' : '';\n    return function (record) {\n      const date = new Date(Date.parse(record[col]));\n      if (Number.isNaN(date)) {\n        return '';\n      }\n      return formatString.replace(/%(.)/g, function (m, p) {\n        switch (p) {\n          case 'y':\n            return date[`get${utc}FullYear`]();\n          case 'm':\n            return zeroPad(date[`get${utc}Month`]() + 1);\n          case 'n':\n            return mthNames[date[`get${utc}Month`]()];\n          case 'd':\n            return zeroPad(date[`get${utc}Date`]());\n          case 'w':\n            return dayNames[date[`get${utc}Day`]()];\n          case 'x':\n            return date[`get${utc}Day`]();\n          case 'H':\n            return zeroPad(date[`get${utc}Hours`]());\n          case 'M':\n            return zeroPad(date[`get${utc}Minutes`]());\n          case 'S':\n            return zeroPad(date[`get${utc}Seconds`]());\n          default:\n            return `%${p}`;\n        }\n      });\n    };\n  }\n};\n\n// Given an array of attribute values, convert to a key that\n// can be used in objects.\nconst flatKey = (attrVals) => attrVals.join(String.fromCharCode(0));\n\n/*\nData Model class\n*/\n\nclass PivotData {\n  constructor(inputProps, subtotals) {if (inputProps === void 0) {inputProps = {};}if (subtotals === void 0) {subtotals = {};}\n    this.props = { ...PivotData.defaultProps, ...inputProps };\n    this.processRecord = this.processRecord.bind(this);\n    prop_types__WEBPACK_IMPORTED_MODULE_0___default().checkPropTypes(\n      PivotData.propTypes,\n      this.props,\n      'prop',\n      'PivotData'\n    );\n\n    this.aggregator = this.props.\n    aggregatorsFactory(this.props.defaultFormatter)[\n    this.props.aggregatorName](this.props.vals);\n    this.formattedAggregators =\n    this.props.customFormatters &&\n    Object.entries(this.props.customFormatters).reduce(\n      (acc, _ref7) => {let [key, columnFormatter] = _ref7;\n        acc[key] = {};\n        Object.entries(columnFormatter).forEach((_ref8) => {let [column, formatter] = _ref8;\n          acc[key][column] = this.props.\n          aggregatorsFactory(formatter)[\n          this.props.aggregatorName](this.props.vals);\n        });\n        return acc;\n      },\n      {}\n    );\n    this.tree = {};\n    this.rowKeys = [];\n    this.colKeys = [];\n    this.rowTotals = {};\n    this.colTotals = {};\n    this.allTotal = this.aggregator(this, [], []);\n    this.subtotals = subtotals;\n    this.sorted = false;\n\n    // iterate through input, accumulating data for cells\n    PivotData.forEachRecord(this.props.data, this.processRecord);\n  }\n\n  getFormattedAggregator(record, totalsKeys) {\n    if (!this.formattedAggregators) {\n      return this.aggregator;\n    }\n    const [groupName, groupValue] =\n    Object.entries(record).find(\n      (_ref9) => {let [name, value] = _ref9;return (\n          this.formattedAggregators[name] &&\n          this.formattedAggregators[name][value]);}\n    ) || [];\n    if (\n    !groupName ||\n    !groupValue ||\n    totalsKeys && !totalsKeys.includes(groupValue))\n    {\n      return this.aggregator;\n    }\n    return this.formattedAggregators[groupName][groupValue] || this.aggregator;\n  }\n\n  arrSort(attrs, partialOnTop, reverse) {if (reverse === void 0) {reverse = false;}\n    const sortersArr = attrs.map((a) => getSort(this.props.sorters, a));\n    return function (a, b) {\n      const limit = Math.min(a.length, b.length);\n      for (let i = 0; i < limit; i += 1) {\n        const sorter = sortersArr[i];\n        const comparison = reverse ? sorter(b[i], a[i]) : sorter(a[i], b[i]);\n        if (comparison !== 0) {\n          return comparison;\n        }\n      }\n      return partialOnTop ? a.length - b.length : b.length - a.length;\n    };\n  }\n\n  sortKeys() {\n    if (!this.sorted) {\n      this.sorted = true;\n      const v = (r, c) => this.getAggregator(r, c).value();\n      switch (this.props.rowOrder) {\n        case 'key_z_to_a':\n          this.rowKeys.sort(\n            this.arrSort(this.props.rows, this.subtotals.rowPartialOnTop, true)\n          );\n          break;\n        case 'value_a_to_z':\n          this.rowKeys.sort((a, b) => naturalSort(v(a, []), v(b, [])));\n          break;\n        case 'value_z_to_a':\n          this.rowKeys.sort((a, b) => -naturalSort(v(a, []), v(b, [])));\n          break;\n        default:\n          this.rowKeys.sort(\n            this.arrSort(this.props.rows, this.subtotals.rowPartialOnTop)\n          );\n      }\n      switch (this.props.colOrder) {\n        case 'key_z_to_a':\n          this.colKeys.sort(\n            this.arrSort(this.props.cols, this.subtotals.colPartialOnTop, true)\n          );\n          break;\n        case 'value_a_to_z':\n          this.colKeys.sort((a, b) => naturalSort(v([], a), v([], b)));\n          break;\n        case 'value_z_to_a':\n          this.colKeys.sort((a, b) => -naturalSort(v([], a), v([], b)));\n          break;\n        default:\n          this.colKeys.sort(\n            this.arrSort(this.props.cols, this.subtotals.colPartialOnTop)\n          );\n      }\n    }\n  }\n\n  getColKeys() {\n    this.sortKeys();\n    return this.colKeys;\n  }\n\n  getRowKeys() {\n    this.sortKeys();\n    return this.rowKeys;\n  }\n\n  processRecord(record) {\n    // this code is called in a tight loop\n    const colKey = [];\n    const rowKey = [];\n    this.props.cols.forEach((col) => {\n      colKey.push(col in record ? record[col] : 'null');\n    });\n    this.props.rows.forEach((row) => {\n      rowKey.push(row in record ? record[row] : 'null');\n    });\n\n    this.allTotal.push(record);\n\n    const rowStart = this.subtotals.rowEnabled ? 1 : Math.max(1, rowKey.length);\n    const colStart = this.subtotals.colEnabled ? 1 : Math.max(1, colKey.length);\n\n    let isRowSubtotal;\n    let isColSubtotal;\n    for (let ri = rowStart; ri <= rowKey.length; ri += 1) {\n      isRowSubtotal = ri < rowKey.length;\n      const fRowKey = rowKey.slice(0, ri);\n      const flatRowKey = flatKey(fRowKey);\n      if (!this.rowTotals[flatRowKey]) {\n        this.rowKeys.push(fRowKey);\n        this.rowTotals[flatRowKey] = this.getFormattedAggregator(\n          record,\n          rowKey\n        )(this, fRowKey, []);\n      }\n      this.rowTotals[flatRowKey].push(record);\n      this.rowTotals[flatRowKey].isSubtotal = isRowSubtotal;\n    }\n\n    for (let ci = colStart; ci <= colKey.length; ci += 1) {\n      isColSubtotal = ci < colKey.length;\n      const fColKey = colKey.slice(0, ci);\n      const flatColKey = flatKey(fColKey);\n      if (!this.colTotals[flatColKey]) {\n        this.colKeys.push(fColKey);\n        this.colTotals[flatColKey] = this.getFormattedAggregator(\n          record,\n          colKey\n        )(this, [], fColKey);\n      }\n      this.colTotals[flatColKey].push(record);\n      this.colTotals[flatColKey].isSubtotal = isColSubtotal;\n    }\n\n    // And now fill in for all the sub-cells.\n    for (let ri = rowStart; ri <= rowKey.length; ri += 1) {\n      isRowSubtotal = ri < rowKey.length;\n      const fRowKey = rowKey.slice(0, ri);\n      const flatRowKey = flatKey(fRowKey);\n      if (!this.tree[flatRowKey]) {\n        this.tree[flatRowKey] = {};\n      }\n      for (let ci = colStart; ci <= colKey.length; ci += 1) {\n        isColSubtotal = ci < colKey.length;\n        const fColKey = colKey.slice(0, ci);\n        const flatColKey = flatKey(fColKey);\n        if (!this.tree[flatRowKey][flatColKey]) {\n          this.tree[flatRowKey][flatColKey] = this.getFormattedAggregator(\n            record\n          )(this, fRowKey, fColKey);\n        }\n        this.tree[flatRowKey][flatColKey].push(record);\n\n        this.tree[flatRowKey][flatColKey].isRowSubtotal = isRowSubtotal;\n        this.tree[flatRowKey][flatColKey].isColSubtotal = isColSubtotal;\n        this.tree[flatRowKey][flatColKey].isSubtotal =\n        isRowSubtotal || isColSubtotal;\n      }\n    }\n  }\n\n  getAggregator(rowKey, colKey) {\n    let agg;\n    const flatRowKey = flatKey(rowKey);\n    const flatColKey = flatKey(colKey);\n    if (rowKey.length === 0 && colKey.length === 0) {\n      agg = this.allTotal;\n    } else if (rowKey.length === 0) {\n      agg = this.colTotals[flatColKey];\n    } else if (colKey.length === 0) {\n      agg = this.rowTotals[flatRowKey];\n    } else {\n      agg = this.tree[flatRowKey][flatColKey];\n    }\n    return (\n      agg || {\n        value() {\n          return null;\n        },\n        format() {\n          return '';\n        }\n      });\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\n// can handle arrays or jQuery selections of tables\nPivotData.forEachRecord = function (input, processRecord) {\n  if (Array.isArray(input)) {\n    // array of objects\n    return input.map((record) => processRecord(record));\n  }\n  throw new Error((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_1__.t)('Unknown input format'));\n};\n\nPivotData.defaultProps = {\n  aggregators,\n  cols: [],\n  rows: [],\n  vals: [],\n  aggregatorName: 'Count',\n  sorters: {},\n  rowOrder: 'key_a_to_z',\n  colOrder: 'key_a_to_z'\n};\n\nPivotData.propTypes = {\n  data: prop_types__WEBPACK_IMPORTED_MODULE_0___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_0___default().array), (prop_types__WEBPACK_IMPORTED_MODULE_0___default().object), (prop_types__WEBPACK_IMPORTED_MODULE_0___default().func)]).\n  isRequired,\n  aggregatorName: (prop_types__WEBPACK_IMPORTED_MODULE_0___default().string),\n  cols: prop_types__WEBPACK_IMPORTED_MODULE_0___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_0___default().string)),\n  rows: prop_types__WEBPACK_IMPORTED_MODULE_0___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_0___default().string)),\n  vals: prop_types__WEBPACK_IMPORTED_MODULE_0___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_0___default().string)),\n  valueFilter: prop_types__WEBPACK_IMPORTED_MODULE_0___default().objectOf(prop_types__WEBPACK_IMPORTED_MODULE_0___default().objectOf((prop_types__WEBPACK_IMPORTED_MODULE_0___default().bool))),\n  sorters: prop_types__WEBPACK_IMPORTED_MODULE_0___default().oneOfType([\n  (prop_types__WEBPACK_IMPORTED_MODULE_0___default().func),\n  prop_types__WEBPACK_IMPORTED_MODULE_0___default().objectOf((prop_types__WEBPACK_IMPORTED_MODULE_0___default().func))]\n  ),\n  derivedAttributes: prop_types__WEBPACK_IMPORTED_MODULE_0___default().objectOf((prop_types__WEBPACK_IMPORTED_MODULE_0___default().func)),\n  rowOrder: prop_types__WEBPACK_IMPORTED_MODULE_0___default().oneOf([\n  'key_a_to_z',\n  'key_z_to_a',\n  'value_a_to_z',\n  'value_z_to_a']\n  ),\n  colOrder: prop_types__WEBPACK_IMPORTED_MODULE_0___default().oneOf([\n  'key_a_to_z',\n  'key_z_to_a',\n  'value_a_to_z',\n  'value_z_to_a']\n  )\n};\n\n;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(addSeparators, \"addSeparators\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(numberFormat, \"numberFormat\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(rx, \"rx\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(rd, \"rd\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(rz, \"rz\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(naturalSort, \"naturalSort\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(sortAs, \"sortAs\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(getSort, \"getSort\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(usFmt, \"usFmt\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(usFmtInt, \"usFmtInt\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(usFmtPct, \"usFmtPct\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(fmtNonString, \"fmtNonString\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(baseAggregatorTemplates, \"baseAggregatorTemplates\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(extendedAggregatorTemplates, \"extendedAggregatorTemplates\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(aggregatorTemplates, \"aggregatorTemplates\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(aggregators, \"aggregators\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(locales, \"locales\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(mthNamesEn, \"mthNamesEn\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(dayNamesEn, \"dayNamesEn\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(zeroPad, \"zeroPad\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(derivers, \"derivers\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(flatKey, \"flatKey\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");reactHotLoader.register(PivotData, \"PivotData\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\n");

/***/ }),

/***/ "./packages/superset-ui-core/src/utils/getSelectedText.ts":
/*!****************************************************************!*\
  !*** ./packages/superset-ui-core/src/utils/getSelectedText.ts ***!
  \****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSelectedText: () => (/* binding */ getSelectedText)\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nconst getSelectedText = () => {var _window$getSelection;return (_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.toString();};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getSelectedText, \"getSelectedText\", \"/app/superset-frontend/packages/superset-ui-core/src/utils/getSelectedText.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9zdXBlcnNldC11aS1jb3JlL3NyYy91dGlscy9nZXRTZWxlY3RlZFRleHQudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3BhY2thZ2VzL3N1cGVyc2V0LXVpLWNvcmUvc3JjL3V0aWxzL2dldFNlbGVjdGVkVGV4dC50cz85MTIxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRTZWxlY3RlZFRleHQgPSAoKSA9PiB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk/LnRvU3RyaW5nKCk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/superset-ui-core/src/utils/getSelectedText.ts\n");

/***/ }),

/***/ "./plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx":
/*!******************************************************************!*\
  !*** ./plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx ***!
  \******************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PivotTableChart)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ant-design/icons */ \"./node_modules/@ant-design/icons/es/icons/PlusSquareOutlined.js\");\n/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ant-design/icons */ \"./node_modules/@ant-design/icons/es/icons/MinusSquareOutlined.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/number-format/NumberFormatterRegistrySingleton.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/currency-format/CurrencyFormatter.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/query/getColumnLabel.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/query/types/Column.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/utils/getSelectedText.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/utils/featureFlags.ts\");\n/* harmony import */ var _react_pivottable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./react-pivottable */ \"./plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js\");\n/* harmony import */ var _react_pivottable__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./react-pivottable */ \"./plugins/plugin-chart-pivot-table/src/react-pivottable/PivotTable.jsx\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./types */ \"./plugins/plugin-chart-pivot-table/src/types.ts\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\nconst Styles = _superset_ui_core__WEBPACK_IMPORTED_MODULE_1__.styled.div`\n  ${(_ref) => {let { height, width, margin } = _ref;return `\n      margin: ${margin}px;\n      height: ${height - margin * 2}px;\n      width: ${typeof width === 'string' ? parseInt(width, 10) : width - margin * 2}px;\n `;}}\n`;\nconst PivotTableWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_1__.styled.div`\n  height: 100%;\n  max-width: inherit;\n  overflow: auto;\n`;\nconst METRIC_KEY = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_2__.t)('Metric');\nconst vals = ['value'];\nconst StyledPlusSquareOutlined = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_1__.styled)((0,_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__[\"default\"]))`\n  stroke: ${(_ref2) => {let { theme } = _ref2;return theme.colors.grayscale.light2;}};\n  stroke-width: 16px;\n`;\nconst StyledMinusSquareOutlined = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_1__.styled)((0,_ant_design_icons__WEBPACK_IMPORTED_MODULE_4__[\"default\"]))`\n  stroke: ${(_ref3) => {let { theme } = _ref3;return theme.colors.grayscale.light2;}};\n  stroke-width: 16px;\n`;\nconst aggregatorsFactory = (formatter) => ({\n  Count: _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.count(formatter),\n  'Count Unique Values': _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.countUnique(formatter),\n  'List Unique Values': _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.listUnique(', ', formatter),\n  Sum: _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.sum(formatter),\n  Average: _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.average(formatter),\n  Median: _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.median(formatter),\n  'Sample Variance': _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.var(1, formatter),\n  'Sample Standard Deviation': _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.stdev(1, formatter),\n  Minimum: _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.min(formatter),\n  Maximum: _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.max(formatter),\n  First: _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.first(formatter),\n  Last: _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.last(formatter),\n  'Sum as Fraction of Total': _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.fractionOf(_react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.sum(), 'total', formatter),\n  'Sum as Fraction of Rows': _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.fractionOf(_react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.sum(), 'row', formatter),\n  'Sum as Fraction of Columns': _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.fractionOf(_react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.sum(), 'col', formatter),\n  'Count as Fraction of Total': _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.fractionOf(_react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.count(), 'total', formatter),\n  'Count as Fraction of Rows': _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.fractionOf(_react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.count(), 'row', formatter),\n  'Count as Fraction of Columns': _react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.fractionOf(_react_pivottable__WEBPACK_IMPORTED_MODULE_5__.aggregatorTemplates.count(), 'col', formatter)\n});\n/* If you change this logic, please update the corresponding Python\n * function (https://github.com/apache/superset/blob/master/superset/charts/post_processing.py),\n * or reach out to @betodealmeida.\n */\nfunction PivotTableChart(props) {\n  const { data, height, width, groupbyRows: groupbyRowsRaw, groupbyColumns: groupbyColumnsRaw, metrics, colOrder, rowOrder, aggregateFunction, transposePivot, combineMetric, rowSubtotalPosition, colSubtotalPosition, colTotals, rowTotals, valueFormat, emitCrossFilters, setDataMask, selectedFilters, verboseMap, columnFormats, currencyFormats, metricsLayout, metricColorFormatters, dateFormatters, onContextMenu, timeGrainSqla } = props;\n  const theme = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_1__.useTheme)();\n  const defaultFormatter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_6__.getNumberFormatter)(valueFormat), [valueFormat]);\n  const customFormatsArray = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => Array.from(new Set([\n  ...Object.keys(columnFormats || {}),\n  ...Object.keys(currencyFormats || {})]\n  )).map((metricName) => [\n  metricName,\n  columnFormats[metricName] || valueFormat,\n  currencyFormats[metricName]]\n  ), [columnFormats, currencyFormats, valueFormat]);\n  const hasCustomMetricFormatters = customFormatsArray.length > 0;\n  const metricFormatters = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => hasCustomMetricFormatters ?\n  {\n    [METRIC_KEY]: Object.fromEntries(customFormatsArray.map((_ref4) => {let [metric, d3Format, currency] = _ref4;return [\n      metric,\n      currency ?\n      new _superset_ui_core__WEBPACK_IMPORTED_MODULE_7__[\"default\"]({\n        currency,\n        d3Format\n      }) :\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_6__.getNumberFormatter)(d3Format)];}\n    ))\n  } :\n  undefined, [customFormatsArray, hasCustomMetricFormatters]);\n  const metricNames = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => metrics.map((metric) => typeof metric === 'string' ? metric : metric.label), [metrics]);\n  const unpivotedData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => data.reduce((acc, record) => [\n  ...acc,\n  ...metricNames.\n  map((name) => ({\n    ...record,\n    [METRIC_KEY]: name,\n    value: record[name]\n  })).\n  filter((record) => record.value !== null)],\n  []), [data, metricNames]);\n  const groupbyRows = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => groupbyRowsRaw.map(_superset_ui_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"]), [groupbyRowsRaw]);\n  const groupbyColumns = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => groupbyColumnsRaw.map(_superset_ui_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"]), [groupbyColumnsRaw]);\n  const sorters = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => ({\n    [METRIC_KEY]: (0,_react_pivottable__WEBPACK_IMPORTED_MODULE_5__.sortAs)(metricNames)\n  }), [metricNames]);\n  const [rows, cols] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    let [rows_, cols_] = transposePivot ?\n    [groupbyColumns, groupbyRows] :\n    [groupbyRows, groupbyColumns];\n    if (metricsLayout === _types__WEBPACK_IMPORTED_MODULE_9__.MetricsLayoutEnum.ROWS) {\n      rows_ = combineMetric ? [...rows_, METRIC_KEY] : [METRIC_KEY, ...rows_];\n    } else\n    {\n      cols_ = combineMetric ? [...cols_, METRIC_KEY] : [METRIC_KEY, ...cols_];\n    }\n    return [rows_, cols_];\n  }, [\n  combineMetric,\n  groupbyColumns,\n  groupbyRows,\n  metricsLayout,\n  transposePivot]\n  );\n  const handleChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((filters) => {\n    const filterKeys = Object.keys(filters);\n    const groupby = [...groupbyRowsRaw, ...groupbyColumnsRaw];\n    setDataMask({\n      extraFormData: {\n        filters: filterKeys.length === 0 ?\n        undefined :\n        filterKeys.map((key) => {var _groupby$find;\n          const val = filters == null ? void 0 : filters[key];\n          const col = (_groupby$find = groupby.find((item) => {\n            if ((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.isPhysicalColumn)(item)) {\n              return item === key;\n            }\n            if ((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.isAdhocColumn)(item)) {\n              return item.label === key;\n            }\n            return false;\n          })) != null ? _groupby$find : '';\n          if (val === null || val === undefined)\n          return {\n            col,\n            op: 'IS NULL'\n          };\n          return {\n            col,\n            op: 'IN',\n            val: val\n          };\n        })\n      },\n      filterState: {\n        value: filters && Object.keys(filters).length ?\n        Object.values(filters) :\n        null,\n        selectedFilters: filters && Object.keys(filters).length ? filters : null\n      }\n    });\n  }, [groupbyColumnsRaw, groupbyRowsRaw, setDataMask]);\n  const getCrossFilterDataMask = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((value) => {\n    const isActiveFilterValue = (key, val) => {var _selectedFilters$key;return !!selectedFilters && ((_selectedFilters$key = selectedFilters[key]) == null ? void 0 : _selectedFilters$key.includes(val));};\n    if (!value) {\n      return undefined;\n    }\n    const [key, val] = Object.entries(value)[0];\n    let values = { ...selectedFilters };\n    if (isActiveFilterValue(key, val)) {\n      values = {};\n    } else\n    {\n      values = { [key]: [val] };\n    }\n    const filterKeys = Object.keys(values);\n    const groupby = [...groupbyRowsRaw, ...groupbyColumnsRaw];\n    return {\n      dataMask: {\n        extraFormData: {\n          filters: filterKeys.length === 0 ?\n          undefined :\n          filterKeys.map((key) => {var _values, _groupby$find2;\n            const val = (_values = values) == null ? void 0 : _values[key];\n            const col = (_groupby$find2 = groupby.find((item) => {\n              if ((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.isPhysicalColumn)(item)) {\n                return item === key;\n              }\n              if ((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.isAdhocColumn)(item)) {\n                return item.label === key;\n              }\n              return false;\n            })) != null ? _groupby$find2 : '';\n            if (val === null || val === undefined)\n            return {\n              col,\n              op: 'IS NULL'\n            };\n            return {\n              col,\n              op: 'IN',\n              val: val\n            };\n          })\n        },\n        filterState: {\n          value: values && Object.keys(values).length ?\n          Object.values(values) :\n          null,\n          selectedFilters: values && Object.keys(values).length ? values : null\n        }\n      },\n      isCurrentValueSelected: isActiveFilterValue(key, val)\n    };\n  }, [groupbyColumnsRaw, groupbyRowsRaw, selectedFilters]);\n  const toggleFilter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e, value, filters, pivotData, isSubtotal, isGrandTotal) => {\n    if (isSubtotal || isGrandTotal || !emitCrossFilters) {\n      return;\n    }\n    // allow selecting text in a cell\n    if ((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.getSelectedText)()) {\n      return;\n    }\n    const isActiveFilterValue = (key, val) => {var _selectedFilters$key2;return !!selectedFilters && ((_selectedFilters$key2 = selectedFilters[key]) == null ? void 0 : _selectedFilters$key2.includes(val));};\n    const filtersCopy = { ...filters };\n    delete filtersCopy[METRIC_KEY];\n    const filtersEntries = Object.entries(filtersCopy);\n    if (filtersEntries.length === 0) {\n      return;\n    }\n    const [key, val] = filtersEntries[filtersEntries.length - 1];\n    let updatedFilters = { ...(selectedFilters || {}) };\n    // multi select\n    // if (selectedFilters && isActiveFilterValue(key, val)) {\n    //   updatedFilters[key] = selectedFilters[key].filter((x: DataRecordValue) => x !== val);\n    // } else {\n    //   updatedFilters[key] = [...(selectedFilters?.[key] || []), val];\n    // }\n    // single select\n    if (selectedFilters && isActiveFilterValue(key, val)) {\n      updatedFilters = {};\n    } else\n    {\n      updatedFilters = {\n        [key]: [val]\n      };\n    }\n    if (Array.isArray(updatedFilters[key]) &&\n    updatedFilters[key].length === 0) {\n      delete updatedFilters[key];\n    }\n    handleChange(updatedFilters);\n  }, [emitCrossFilters, selectedFilters, handleChange]);\n  const tableOptions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => ({\n    clickRowHeaderCallback: toggleFilter,\n    clickColumnHeaderCallback: toggleFilter,\n    colTotals,\n    rowTotals,\n    highlightHeaderCellsOnHover: emitCrossFilters ||\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_12__.isFeatureEnabled)(_superset_ui_core__WEBPACK_IMPORTED_MODULE_12__.FeatureFlag.DRILL_BY) ||\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_12__.isFeatureEnabled)(_superset_ui_core__WEBPACK_IMPORTED_MODULE_12__.FeatureFlag.DRILL_TO_DETAIL),\n    highlightedHeaderCells: selectedFilters,\n    omittedHighlightHeaderGroups: [METRIC_KEY],\n    cellColorFormatters: { [METRIC_KEY]: metricColorFormatters },\n    dateFormatters\n  }), [\n  colTotals,\n  dateFormatters,\n  emitCrossFilters,\n  metricColorFormatters,\n  rowTotals,\n  selectedFilters,\n  toggleFilter]\n  );\n  const subtotalOptions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => ({\n    colSubtotalDisplay: { displayOnTop: colSubtotalPosition },\n    rowSubtotalDisplay: { displayOnTop: rowSubtotalPosition },\n    arrowCollapsed: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_13__.jsx)(StyledPlusSquareOutlined, null),\n    arrowExpanded: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_13__.jsx)(StyledMinusSquareOutlined, null)\n  }), [colSubtotalPosition, rowSubtotalPosition]);\n  const handleContextMenu = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e, colKey, rowKey, dataPoint) => {\n    if (onContextMenu) {\n      e.preventDefault();\n      e.stopPropagation();\n      const drillToDetailFilters = [];\n      if (colKey && colKey.length > 1) {\n        colKey.forEach((val, i) => {\n          const col = cols[i];\n          const formatter = dateFormatters[col];\n          const formattedVal = (formatter == null ? void 0 : formatter(val)) || String(val);\n          if (i > 0) {\n            drillToDetailFilters.push({\n              col,\n              op: '==',\n              val,\n              formattedVal,\n              grain: formatter ? timeGrainSqla : undefined\n            });\n          }\n        });\n      }\n      if (rowKey) {\n        rowKey.forEach((val, i) => {\n          const col = rows[i];\n          const formatter = dateFormatters[col];\n          const formattedVal = (formatter == null ? void 0 : formatter(val)) || String(val);\n          drillToDetailFilters.push({\n            col,\n            op: '==',\n            val,\n            formattedVal,\n            grain: formatter ? timeGrainSqla : undefined\n          });\n        });\n      }\n      onContextMenu(e.clientX, e.clientY, {\n        drillToDetail: drillToDetailFilters,\n        crossFilter: getCrossFilterDataMask(dataPoint),\n        drillBy: dataPoint && {\n          filters: [\n          {\n            col: Object.keys(dataPoint)[0],\n            op: '==',\n            val: Object.values(dataPoint)[0]\n          }],\n\n          groupbyFieldName: rowKey ? 'groupbyRows' : 'groupbyColumns'\n        }\n      });\n    }\n  }, [\n  cols,\n  dateFormatters,\n  getCrossFilterDataMask,\n  onContextMenu,\n  rows,\n  timeGrainSqla]\n  );\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_13__.jsx)(Styles, { height: height, width: width, margin: theme.gridUnit * 4 },\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_13__.jsx)(PivotTableWrapper, null,\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_13__.jsx)(_react_pivottable__WEBPACK_IMPORTED_MODULE_14__[\"default\"], { data: unpivotedData, rows: rows, cols: cols, aggregatorsFactory: aggregatorsFactory, defaultFormatter: defaultFormatter, customFormatters: metricFormatters, aggregatorName: aggregateFunction, vals: vals, colOrder: colOrder, rowOrder: rowOrder, sorters: sorters, tableOptions: tableOptions, subtotalOptions: subtotalOptions, namesMapping: verboseMap, onContextMenu: handleContextMenu })\n  )\n  );\n}__signature__(PivotTableChart, \"useTheme{theme}\\nuseMemo{defaultFormatter}\\nuseMemo{customFormatsArray}\\nuseMemo{metricFormatters}\\nuseMemo{metricNames}\\nuseMemo{unpivotedData}\\nuseMemo{groupbyRows}\\nuseMemo{groupbyColumns}\\nuseMemo{sorters}\\nuseMemo{[rows, cols]}\\nuseCallback{handleChange}\\nuseCallback{getCrossFilterDataMask}\\nuseCallback{toggleFilter}\\nuseMemo{tableOptions}\\nuseMemo{subtotalOptions}\\nuseCallback{handleContextMenu}\", () => [_superset_ui_core__WEBPACK_IMPORTED_MODULE_1__.useTheme]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Styles, \"Styles\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");reactHotLoader.register(PivotTableWrapper, \"PivotTableWrapper\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");reactHotLoader.register(METRIC_KEY, \"METRIC_KEY\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");reactHotLoader.register(vals, \"vals\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");reactHotLoader.register(StyledPlusSquareOutlined, \"StyledPlusSquareOutlined\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");reactHotLoader.register(StyledMinusSquareOutlined, \"StyledMinusSquareOutlined\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");reactHotLoader.register(aggregatorsFactory, \"aggregatorsFactory\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");reactHotLoader.register(PivotTableChart, \"PivotTableChart\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx\n");

/***/ })

}]);