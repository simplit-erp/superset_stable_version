/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunksuperset"] = globalThis["webpackChunksuperset"] || []).push([["src_components_Datasource_DatasourceEditor_jsx"],{

/***/ "./src/components/Datasource/DatasourceEditor.jsx":
/*!********************************************************!*\
  !*** ./src/components/Datasource/DatasourceEditor.jsx ***!
  \********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rison */ \"./node_modules/rison/js/rison.js\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rison__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_32__);\n/* harmony import */ var src_components_Radio__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Radio */ \"./src/components/Radio/index.tsx\");\n/* harmony import */ var src_components_Card__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/Card */ \"./src/components/Card/index.tsx\");\n/* harmony import */ var src_components_Alert__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/Alert */ \"./src/components/Alert/index.tsx\");\n/* harmony import */ var src_components_Badge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/Badge */ \"./src/components/Badge/index.tsx\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! shortid */ \"./node_modules/shortid/index.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(shortid__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/utils/featureFlags.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/connection/SupersetClient.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/utils/ensureIsArray.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/currency-format/CurrencyFormatter.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @superset-ui/core */ \"./node_modules/@emotion/react/dist/emotion-element-99289b21.browser.esm.js\");\n/* harmony import */ var src_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/components */ \"./src/components/index.ts\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* harmony import */ var src_components_Button__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/components/Button */ \"./src/components/Button/index.tsx\");\n/* harmony import */ var src_components_Tabs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/components/Tabs */ \"./src/components/Tabs/index.ts\");\n/* harmony import */ var src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/components/CertifiedBadge */ \"./src/components/CertifiedBadge/index.tsx\");\n/* harmony import */ var src_components_WarningIconWithTooltip__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/components/WarningIconWithTooltip */ \"./src/components/WarningIconWithTooltip/index.tsx\");\n/* harmony import */ var src_components_DatabaseSelector__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/components/DatabaseSelector */ \"./src/components/DatabaseSelector/index.tsx\");\n/* harmony import */ var src_components_Label__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/components/Label */ \"./src/components/Label/index.tsx\");\n/* harmony import */ var src_components_Loading__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/components/Loading */ \"./src/components/Loading/index.tsx\");\n/* harmony import */ var src_components_TableSelector__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/components/TableSelector */ \"./src/components/TableSelector/index.tsx\");\n/* harmony import */ var src_components_EditableTitle__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/components/EditableTitle */ \"./src/components/EditableTitle/index.tsx\");\n/* harmony import */ var src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/utils/getClientErrorObject */ \"./src/utils/getClientErrorObject.ts\");\n/* harmony import */ var src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/explore/components/controls/CheckboxControl */ \"./src/explore/components/controls/CheckboxControl.jsx\");\n/* harmony import */ var src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! src/explore/components/controls/TextControl */ \"./src/explore/components/controls/TextControl/index.tsx\");\n/* harmony import */ var src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! src/explore/components/controls/TextAreaControl */ \"./src/explore/components/controls/TextAreaControl.jsx\");\n/* harmony import */ var src_explore_components_controls_SpatialControl__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! src/explore/components/controls/SpatialControl */ \"./src/explore/components/controls/SpatialControl.jsx\");\n/* harmony import */ var src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! src/components/MessageToasts/withToasts */ \"./src/components/MessageToasts/withToasts.tsx\");\n/* harmony import */ var src_featureFlags__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! src/featureFlags */ \"./src/featureFlags.ts\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var _CollectionTable__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./CollectionTable */ \"./src/components/Datasource/CollectionTable.tsx\");\n/* harmony import */ var _Fieldset__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./Fieldset */ \"./src/components/Datasource/Fieldset.tsx\");\n/* harmony import */ var _Field__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./Field */ \"./src/components/Datasource/Field.tsx\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst DatasourceContainer = _superset_ui_core__WEBPACK_IMPORTED_MODULE_29__.styled.div`\n  .change-warning {\n    margin: 16px 10px 0;\n    color: ${(_ref) => {let { theme } = _ref;return theme.colors.warning.base;}};\n  }\n\n  .change-warning .bold {\n    font-weight: ${(_ref2) => {let { theme } = _ref2;return theme.typography.weights.bold;}};\n  }\n\n  .form-group.has-feedback > .help-block {\n    margin-top: 8px;\n  }\n\n  .form-group.form-group-md {\n    margin-bottom: 8px;\n  }\n`;\n\nconst FlexRowContainer = _superset_ui_core__WEBPACK_IMPORTED_MODULE_29__.styled.div`\n  align-items: center;\n  display: flex;\n\n  svg {\n    margin-right: ${(_ref3) => {let { theme } = _ref3;return theme.gridUnit;}}px;\n  }\n`;\n\nconst StyledTableTabs = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_29__.styled)((0,src_components_Tabs__WEBPACK_IMPORTED_MODULE_10__[\"default\"]))`\n  overflow: visible;\n  .ant-tabs-content-holder {\n    overflow: visible;\n  }\n`;\n\nconst StyledBadge = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_29__.styled)((0,src_components_Badge__WEBPACK_IMPORTED_MODULE_5__[\"default\"]))`\n  .ant-badge-count {\n    line-height: ${(_ref4) => {let { theme } = _ref4;return theme.gridUnit * 4;}}px;\n    height: ${(_ref5) => {let { theme } = _ref5;return theme.gridUnit * 4;}}px;\n    margin-left: ${(_ref6) => {let { theme } = _ref6;return theme.gridUnit;}}px;\n  }\n`;\n\nconst EditLockContainer = _superset_ui_core__WEBPACK_IMPORTED_MODULE_29__.styled.div`\n  font-size: ${(_ref7) => {let { theme } = _ref7;return theme.typography.sizes.s;}}px;\n  display: flex;\n  align-items: center;\n  a {\n    padding: 0 10px;\n  }\n`;\n\nconst ColumnButtonWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_29__.styled.div`\n  text-align: right;\n  ${(_ref8) => {let { theme } = _ref8;return `margin-bottom: ${theme.gridUnit * 2}px`;}}\n`;\n\nconst StyledLabelWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_29__.styled.div`\n  display: flex;\n  align-items: center;\n  span {\n    margin-right: ${(_ref9) => {let { theme } = _ref9;return theme.gridUnit;}}px;\n  }\n`;\n\nconst StyledColumnsTabWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_29__.styled.div`\n  .table > tbody > tr > td {\n    vertical-align: middle;\n  }\n\n  .ant-tag {\n    margin-top: ${(_ref10) => {let { theme } = _ref10;return theme.gridUnit;}}px;\n  }\n`;\n\nconst StyledButtonWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_29__.styled.span`\n  ${(_ref11) => {let { theme } = _ref11;return `\n    margin-top: ${theme.gridUnit * 3}px;\n    margin-left: ${theme.gridUnit * 3}px;\n  `;}}\n`;\n\nconst checkboxGenerator = (d, onChange) =>\n(0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_19__[\"default\"], { value: d, onChange: onChange });\n\nconst DATA_TYPES = [\n{ value: 'STRING', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('STRING') },\n{ value: 'NUMERIC', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('NUMERIC') },\n{ value: 'DATETIME', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('DATETIME') },\n{ value: 'BOOLEAN', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('BOOLEAN') }];\n\n\nconst CURRENCY_SYMBOL_POSITION = [\n{ value: 'prefix', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Prefix') },\n{ value: 'suffix', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Suffix') }];\n\n\nconst DATASOURCE_TYPES_ARR = [\n{ key: 'physical', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Physical (table or view)') },\n{ key: 'virtual', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Virtual (SQL)') }];\n\nconst DATASOURCE_TYPES = {};\nDATASOURCE_TYPES_ARR.forEach((o) => {\n  DATASOURCE_TYPES[o.key] = o;\n});var _ref13 =  false ? 0 : { name: \"l0hchv-CollectionTabTitle\", styles: \"display:flex;align-items:center;label:CollectionTabTitle;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\nfunction CollectionTabTitle(_ref12) {let { title, collection } = _ref12;\n  return (\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"div\", {\n      css: _ref13,\n      \"data-test\": `collection-tab-${title}` },\n\n    title, ' ',\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(StyledBadge, { count: collection ? collection.length : 0, showZero: true })\n    ));\n\n}\n\nCollectionTabTitle.propTypes = {\n  title: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().string),\n  collection: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().array)\n};\n\nfunction ColumnCollectionTable(_ref14)\n\n\n\n\n\n\n\n\n\n\n{let { columns, datasource, onColumnsChange, onDatasourceChange, editableColumnName, showExpression, allowAddItem, allowEditDataType, itemGenerator, columnLabelTooltips } = _ref14;\n  return (\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_CollectionTable__WEBPACK_IMPORTED_MODULE_26__[\"default\"], {\n      tableColumns:\n      (0,src_featureFlags__WEBPACK_IMPORTED_MODULE_24__.isFeatureEnabled)(_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.FeatureFlag.ENABLE_ADVANCED_DATA_TYPES) ?\n      [\n      'column_name',\n      'advanced_data_type',\n      'type',\n      'is_dttm',\n      'main_dttm_col',\n      'filterable',\n      'groupby'] :\n\n      [\n      'column_name',\n      'type',\n      'is_dttm',\n      'main_dttm_col',\n      'filterable',\n      'groupby'],\n\n\n      sortColumns:\n      (0,src_featureFlags__WEBPACK_IMPORTED_MODULE_24__.isFeatureEnabled)(_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.FeatureFlag.ENABLE_ADVANCED_DATA_TYPES) ?\n      [\n      'column_name',\n      'advanced_data_type',\n      'type',\n      'is_dttm',\n      'main_dttm_col',\n      'filterable',\n      'groupby'] :\n\n      [\n      'column_name',\n      'type',\n      'is_dttm',\n      'main_dttm_col',\n      'filterable',\n      'groupby'],\n\n\n      allowDeletes: true,\n      allowAddItem: allowAddItem,\n      itemGenerator: itemGenerator,\n      collection: columns,\n      columnLabelTooltips: columnLabelTooltips,\n      stickyHeader: true,\n      expandFieldset:\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(FormContainer, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_27__[\"default\"], { compact: true },\n      showExpression &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"expression\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('SQL expression'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n          language: \"markdown\",\n          offerEditInModal: false,\n          resize: \"vertical\" }\n        ) }\n\n      ),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"verbose_name\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Label'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n          controlId: \"verbose_name\",\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Label') }\n        ) }\n\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"description\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Description'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n          controlId: \"description\",\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Description') }\n        ) }\n\n      ),\n      allowEditDataType &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"type\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Data type'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_7__.Select, {\n          ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Data type'),\n          options: DATA_TYPES,\n          name: \"type\",\n          allowNewOptions: true,\n          allowClear: true }\n        ) }\n\n      ),\n\n      (0,src_featureFlags__WEBPACK_IMPORTED_MODULE_24__.isFeatureEnabled)(_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.FeatureFlag.ENABLE_ADVANCED_DATA_TYPES) ?\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"advanced_data_type\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Advanced data type'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n          controlId: \"advanced_data_type\",\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Advanced Data type') }\n        ) }\n\n      ) :\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"python_date_format\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Datetime format'),\n        description:\n        /* Note the fragmented translations may not work. */\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"div\", null,\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('The pattern of timestamp format. For strings use '),\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"a\", { href: \"https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior\" },\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Python datetime string pattern')\n        ),\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)(' expression which needs to adhere to the '),\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"a\", { href: \"https://en.wikipedia.org/wiki/ISO_8601\" },\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('ISO 8601')\n        ),\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)(` standard to ensure that the lexicographical ordering\n                      coincides with the chronological ordering. If the\n                      timestamp format does not adhere to the ISO 8601 standard\n                      you will need to define an expression and type for\n                      transforming the string into a date or timestamp. Note\n                      currently time zones are not supported. If time is stored\n                      in epoch format, put \\`epoch_s\\` or \\`epoch_ms\\`. If no pattern\n                      is specified we fall back to using the optional defaults on a per\n                      database/column name level via the extra parameter.`)\n        ),\n\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n          controlId: \"python_date_format\",\n          placeholder: \"%Y/%m/%d\" }\n        ) }\n\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"certified_by\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Certified By'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Person or group that has certified this metric'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n          controlId: \"certified\",\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Certified by') }\n        ) }\n\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"certification_details\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Certification details'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Details of the certification'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n          controlId: \"certificationDetails\",\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Certification details') }\n        ) }\n\n      )\n      )\n      ),\n\n      columnLabels:\n      (0,src_featureFlags__WEBPACK_IMPORTED_MODULE_24__.isFeatureEnabled)(_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.FeatureFlag.ENABLE_ADVANCED_DATA_TYPES) ?\n      {\n        column_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Column'),\n        advanced_data_type: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Advanced data type'),\n        type: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Data type'),\n        groupby: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Is dimension'),\n        is_dttm: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Is temporal'),\n        main_dttm_col: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Default datetime'),\n        filterable: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Is filterable')\n      } :\n      {\n        column_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Column'),\n        type: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Data type'),\n        groupby: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Is dimension'),\n        is_dttm: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Is temporal'),\n        main_dttm_col: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Default datetime'),\n        filterable: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Is filterable')\n      },\n\n      onChange: onColumnsChange,\n      itemRenderers:\n      (0,src_featureFlags__WEBPACK_IMPORTED_MODULE_24__.isFeatureEnabled)(_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.FeatureFlag.ENABLE_ADVANCED_DATA_TYPES) ?\n      {\n        column_name: (v, onItemChange, _, record) =>\n        editableColumnName ?\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(StyledLabelWrapper, null,\n        record.is_certified &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n          certifiedBy: record.certified_by,\n          details: record.certification_details }\n        ),\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_EditableTitle__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n          canEdit: true,\n          title: v,\n          onSaveTitle: onItemChange }\n        )\n        ) :\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(StyledLabelWrapper, null,\n        record.is_certified &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n          certifiedBy: record.certified_by,\n          details: record.certification_details }\n        ),\n\n        v\n        ),\n\n        main_dttm_col: (value, _onItemChange, _label, record) => {\n          const checked = datasource.main_dttm_col === record.column_name;\n          const disabled = !columns.find(\n            (column) => column.column_name === record.column_name\n          ).is_dttm;\n          return (\n            (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Radio__WEBPACK_IMPORTED_MODULE_2__.Radio, {\n              \"data-test\": `radio-default-dttm-${record.column_name}`,\n              checked: checked,\n              disabled: disabled,\n              onChange: () =>\n              onDatasourceChange({\n                ...datasource,\n                main_dttm_col: record.column_name\n              }) }\n\n            ));\n\n        },\n        type: (d) => d ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Label__WEBPACK_IMPORTED_MODULE_14__[\"default\"], null, d) : null,\n        advanced_data_type: (d) =>\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Label__WEBPACK_IMPORTED_MODULE_14__[\"default\"], { onChange: onColumnsChange }, d),\n\n        is_dttm: checkboxGenerator,\n        filterable: checkboxGenerator,\n        groupby: checkboxGenerator\n      } :\n      {\n        column_name: (v, onItemChange, _, record) =>\n        editableColumnName ?\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(StyledLabelWrapper, null,\n        record.is_certified &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n          certifiedBy: record.certified_by,\n          details: record.certification_details }\n        ),\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], { value: v, onChange: onItemChange })\n        ) :\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(StyledLabelWrapper, null,\n        record.is_certified &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n          certifiedBy: record.certified_by,\n          details: record.certification_details }\n        ),\n\n        v\n        ),\n\n        main_dttm_col: (value, _onItemChange, _label, record) => {\n          const checked = datasource.main_dttm_col === record.column_name;\n          const disabled = !columns.find(\n            (column) => column.column_name === record.column_name\n          ).is_dttm;\n          return (\n            (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Radio__WEBPACK_IMPORTED_MODULE_2__.Radio, {\n              \"data-test\": `radio-default-dttm-${record.column_name}`,\n              checked: checked,\n              disabled: disabled,\n              onChange: () =>\n              onDatasourceChange({\n                ...datasource,\n                main_dttm_col: record.column_name\n              }) }\n\n            ));\n\n        },\n        type: (d) => d ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Label__WEBPACK_IMPORTED_MODULE_14__[\"default\"], null, d) : null,\n        is_dttm: checkboxGenerator,\n        filterable: checkboxGenerator,\n        groupby: checkboxGenerator\n      } }\n\n    ));\n\n}\nColumnCollectionTable.propTypes = {\n  columns: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().array).isRequired,\n  datasource: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().object).isRequired,\n  onColumnsChange: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().func).isRequired,\n  onDatasourceChange: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().func).isRequired,\n  editableColumnName: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().bool),\n  showExpression: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().bool),\n  allowAddItem: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().bool),\n  allowEditDataType: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().bool),\n  itemGenerator: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().func)\n};\nColumnCollectionTable.defaultProps = {\n  editableColumnName: false,\n  showExpression: false,\n  allowAddItem: false,\n  allowEditDataType: false,\n  itemGenerator: () => ({\n    column_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('<new column>'),\n    filterable: true,\n    groupby: true\n  })\n};\n\nfunction StackedField(_ref15) {let { label, formElement } = _ref15;\n  return (\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"div\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"div\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"strong\", null, label)\n    ),\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"div\", null, formElement)\n    ));\n\n}\n\nStackedField.propTypes = {\n  label: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().string),\n  formElement: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().node)\n};\n\nfunction FormContainer(_ref16) {let { children } = _ref16;\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Card__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { padded: true }, children);\n}\n\nFormContainer.propTypes = {\n  children: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().node)\n};\n\nconst propTypes = {\n  datasource: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().object).isRequired,\n  onChange: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().func),\n  addSuccessToast: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().func).isRequired,\n  addDangerToast: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().func).isRequired,\n  setIsEditing: (prop_types__WEBPACK_IMPORTED_MODULE_32___default().func)\n};\n\nconst defaultProps = {\n  onChange: () => {},\n  setIsEditing: () => {}\n};\n\nfunction OwnersSelector(_ref17) {let { datasource, onChange } = _ref17;\n  const loadOptions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function (search, page, pageSize) {if (search === void 0) {search = '';}\n    const query = rison__WEBPACK_IMPORTED_MODULE_0___default().encode({ filter: search, page, page_size: pageSize });\n    return _superset_ui_core__WEBPACK_IMPORTED_MODULE_34__[\"default\"].get({\n      endpoint: `/api/v1/dataset/related/owners?q=${query}`\n    }).then((response) => ({\n      data: response.json.result.\n      filter((item) => item.extra.active).\n      map((item) => ({\n        value: item.value,\n        label: item.text\n      })),\n      totalCount: response.json.count\n    }));\n  }, []);\n\n  return (\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_7__.AsyncSelect, {\n      ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Select owners'),\n      mode: \"multiple\",\n      name: \"owners\",\n      value: datasource.owners,\n      options: loadOptions,\n      onChange: onChange,\n      header: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_8__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Owners')),\n      allowClear: true }\n    ));\n\n}__signature__(OwnersSelector, \"useCallback{loadOptions}\");\n\nconst CurrencyControlContainer = _superset_ui_core__WEBPACK_IMPORTED_MODULE_29__.styled.div`\n  ${(_ref18) => {let { theme } = _ref18;return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.css)`\n    display: flex;\n    align-items: center;\n\n    & > :first-child {\n      width: 25%;\n      margin-right: ${theme.gridUnit * 4}px;\n    }\n  `;}}\n`;\nconst CurrencyControl = (_ref19) => {let { onChange, value: currency = {}, currencies } = _ref19;return (\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(CurrencyControlContainer, null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_7__.Select, {\n      ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Currency prefix or suffix'),\n      options: CURRENCY_SYMBOL_POSITION,\n      placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Prefix or suffix'),\n      onChange: (symbolPosition) => {\n        onChange({ ...currency, symbolPosition });\n      },\n      value: currency == null ? void 0 : currency.symbolPosition,\n      allowClear: true }\n    ),\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_7__.Select, {\n      ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Currency symbol'),\n      options: currencies,\n      placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Select or type currency symbol'),\n      onChange: (symbol) => {\n        onChange({ ...currency, symbol });\n      },\n      value: currency == null ? void 0 : currency.symbol,\n      allowClear: true,\n      allowNewOptions: true }\n    )\n    ));};var _ref25 =  false ? 0 : { name: \"17jm38f-DatasourceEditor\", styles: \"margin-top:8px;label:DatasourceEditor;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };var _ref26 =  false ? 0 : { name: \"17jm38f-DatasourceEditor\", styles: \"margin-top:8px;label:DatasourceEditor;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9hcHAvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvRGF0YXNvdXJjZS9EYXRhc291cmNlRWRpdG9yLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErcEN5QiIsImZpbGUiOiIvYXBwL3N1cGVyc2V0LWZyb250ZW5kL3NyYy9jb21wb25lbnRzL0RhdGFzb3VyY2UvRGF0YXNvdXJjZUVkaXRvci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgcmlzb24gZnJvbSAncmlzb24nO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IFJhZGlvIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvUmFkaW8nO1xuaW1wb3J0IENhcmQgZnJvbSAnc3JjL2NvbXBvbmVudHMvQ2FyZCc7XG5pbXBvcnQgQWxlcnQgZnJvbSAnc3JjL2NvbXBvbmVudHMvQWxlcnQnO1xuaW1wb3J0IEJhZGdlIGZyb20gJ3NyYy9jb21wb25lbnRzL0JhZGdlJztcbmltcG9ydCBzaG9ydGlkIGZyb20gJ3Nob3J0aWQnO1xuaW1wb3J0IHtcbiAgY3NzLFxuICBnZXRDdXJyZW5jeVN5bWJvbCxcbiAgZW5zdXJlSXNBcnJheSxcbiAgRmVhdHVyZUZsYWcsXG4gIHN0eWxlZCxcbiAgU3VwZXJzZXRDbGllbnQsXG4gIHQsXG4gIHdpdGhUaGVtZSxcbn0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuaW1wb3J0IHsgU2VsZWN0LCBBc3luY1NlbGVjdCwgUm93LCBDb2wgfSBmcm9tICdzcmMvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBGb3JtTGFiZWwgfSBmcm9tICdzcmMvY29tcG9uZW50cy9Gb3JtJztcbmltcG9ydCBCdXR0b24gZnJvbSAnc3JjL2NvbXBvbmVudHMvQnV0dG9uJztcbmltcG9ydCBUYWJzIGZyb20gJ3NyYy9jb21wb25lbnRzL1RhYnMnO1xuaW1wb3J0IENlcnRpZmllZEJhZGdlIGZyb20gJ3NyYy9jb21wb25lbnRzL0NlcnRpZmllZEJhZGdlJztcbmltcG9ydCBXYXJuaW5nSWNvbldpdGhUb29sdGlwIGZyb20gJ3NyYy9jb21wb25lbnRzL1dhcm5pbmdJY29uV2l0aFRvb2x0aXAnO1xuaW1wb3J0IERhdGFiYXNlU2VsZWN0b3IgZnJvbSAnc3JjL2NvbXBvbmVudHMvRGF0YWJhc2VTZWxlY3Rvcic7XG5pbXBvcnQgTGFiZWwgZnJvbSAnc3JjL2NvbXBvbmVudHMvTGFiZWwnO1xuaW1wb3J0IExvYWRpbmcgZnJvbSAnc3JjL2NvbXBvbmVudHMvTG9hZGluZyc7XG5pbXBvcnQgVGFibGVTZWxlY3RvciBmcm9tICdzcmMvY29tcG9uZW50cy9UYWJsZVNlbGVjdG9yJztcbmltcG9ydCBFZGl0YWJsZVRpdGxlIGZyb20gJ3NyYy9jb21wb25lbnRzL0VkaXRhYmxlVGl0bGUnO1xuaW1wb3J0IHsgZ2V0Q2xpZW50RXJyb3JPYmplY3QgfSBmcm9tICdzcmMvdXRpbHMvZ2V0Q2xpZW50RXJyb3JPYmplY3QnO1xuaW1wb3J0IENoZWNrYm94Q29udHJvbCBmcm9tICdzcmMvZXhwbG9yZS9jb21wb25lbnRzL2NvbnRyb2xzL0NoZWNrYm94Q29udHJvbCc7XG5pbXBvcnQgVGV4dENvbnRyb2wgZnJvbSAnc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9UZXh0Q29udHJvbCc7XG5pbXBvcnQgVGV4dEFyZWFDb250cm9sIGZyb20gJ3NyYy9leHBsb3JlL2NvbXBvbmVudHMvY29udHJvbHMvVGV4dEFyZWFDb250cm9sJztcbmltcG9ydCBTcGF0aWFsQ29udHJvbCBmcm9tICdzcmMvZXhwbG9yZS9jb21wb25lbnRzL2NvbnRyb2xzL1NwYXRpYWxDb250cm9sJztcbmltcG9ydCB3aXRoVG9hc3RzIGZyb20gJ3NyYy9jb21wb25lbnRzL01lc3NhZ2VUb2FzdHMvd2l0aFRvYXN0cyc7XG5pbXBvcnQgeyBpc0ZlYXR1cmVFbmFibGVkIH0gZnJvbSAnc3JjL2ZlYXR1cmVGbGFncyc7XG5pbXBvcnQgSWNvbnMgZnJvbSAnc3JjL2NvbXBvbmVudHMvSWNvbnMnO1xuaW1wb3J0IENvbGxlY3Rpb25UYWJsZSBmcm9tICcuL0NvbGxlY3Rpb25UYWJsZSc7XG5pbXBvcnQgRmllbGRzZXQgZnJvbSAnLi9GaWVsZHNldCc7XG5pbXBvcnQgRmllbGQgZnJvbSAnLi9GaWVsZCc7XG5cbmNvbnN0IERhdGFzb3VyY2VDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAuY2hhbmdlLXdhcm5pbmcge1xuICAgIG1hcmdpbjogMTZweCAxMHB4IDA7XG4gICAgY29sb3I6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuY29sb3JzLndhcm5pbmcuYmFzZX07XG4gIH1cblxuICAuY2hhbmdlLXdhcm5pbmcgLmJvbGQge1xuICAgIGZvbnQtd2VpZ2h0OiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLnR5cG9ncmFwaHkud2VpZ2h0cy5ib2xkfTtcbiAgfVxuXG4gIC5mb3JtLWdyb3VwLmhhcy1mZWVkYmFjayA+IC5oZWxwLWJsb2NrIHtcbiAgICBtYXJnaW4tdG9wOiA4cHg7XG4gIH1cblxuICAuZm9ybS1ncm91cC5mb3JtLWdyb3VwLW1kIHtcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIH1cbmA7XG5cbmNvbnN0IEZsZXhSb3dDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuXG4gIHN2ZyB7XG4gICAgbWFyZ2luLXJpZ2h0OiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0fXB4O1xuICB9XG5gO1xuXG5jb25zdCBTdHlsZWRUYWJsZVRhYnMgPSBzdHlsZWQoVGFicylgXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAuYW50LXRhYnMtY29udGVudC1ob2xkZXIge1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICB9XG5gO1xuXG5jb25zdCBTdHlsZWRCYWRnZSA9IHN0eWxlZChCYWRnZSlgXG4gIC5hbnQtYmFkZ2UtY291bnQge1xuICAgIGxpbmUtaGVpZ2h0OiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0ICogNH1weDtcbiAgICBoZWlnaHQ6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuZ3JpZFVuaXQgKiA0fXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0fXB4O1xuICB9XG5gO1xuXG5jb25zdCBFZGl0TG9ja0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGZvbnQtc2l6ZTogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS50eXBvZ3JhcGh5LnNpemVzLnN9cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGEge1xuICAgIHBhZGRpbmc6IDAgMTBweDtcbiAgfVxuYDtcblxuY29uc3QgQ29sdW1uQnV0dG9uV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICAkeyh7IHRoZW1lIH0pID0+IGBtYXJnaW4tYm90dG9tOiAke3RoZW1lLmdyaWRVbml0ICogMn1weGB9XG5gO1xuXG5jb25zdCBTdHlsZWRMYWJlbFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBzcGFuIHtcbiAgICBtYXJnaW4tcmlnaHQ6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuZ3JpZFVuaXR9cHg7XG4gIH1cbmA7XG5cbmNvbnN0IFN0eWxlZENvbHVtbnNUYWJXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgLnRhYmxlID4gdGJvZHkgPiB0ciA+IHRkIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB9XG5cbiAgLmFudC10YWcge1xuICAgIG1hcmdpbi10b3A6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuZ3JpZFVuaXR9cHg7XG4gIH1cbmA7XG5cbmNvbnN0IFN0eWxlZEJ1dHRvbldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcbiAgJHsoeyB0aGVtZSB9KSA9PiBgXG4gICAgbWFyZ2luLXRvcDogJHt0aGVtZS5ncmlkVW5pdCAqIDN9cHg7XG4gICAgbWFyZ2luLWxlZnQ6ICR7dGhlbWUuZ3JpZFVuaXQgKiAzfXB4O1xuICBgfVxuYDtcblxuY29uc3QgY2hlY2tib3hHZW5lcmF0b3IgPSAoZCwgb25DaGFuZ2UpID0+IChcbiAgPENoZWNrYm94Q29udHJvbCB2YWx1ZT17ZH0gb25DaGFuZ2U9e29uQ2hhbmdlfSAvPlxuKTtcbmNvbnN0IERBVEFfVFlQRVMgPSBbXG4gIHsgdmFsdWU6ICdTVFJJTkcnLCBsYWJlbDogdCgnU1RSSU5HJykgfSxcbiAgeyB2YWx1ZTogJ05VTUVSSUMnLCBsYWJlbDogdCgnTlVNRVJJQycpIH0sXG4gIHsgdmFsdWU6ICdEQVRFVElNRScsIGxhYmVsOiB0KCdEQVRFVElNRScpIH0sXG4gIHsgdmFsdWU6ICdCT09MRUFOJywgbGFiZWw6IHQoJ0JPT0xFQU4nKSB9LFxuXTtcblxuY29uc3QgQ1VSUkVOQ1lfU1lNQk9MX1BPU0lUSU9OID0gW1xuICB7IHZhbHVlOiAncHJlZml4JywgbGFiZWw6IHQoJ1ByZWZpeCcpIH0sXG4gIHsgdmFsdWU6ICdzdWZmaXgnLCBsYWJlbDogdCgnU3VmZml4JykgfSxcbl07XG5cbmNvbnN0IERBVEFTT1VSQ0VfVFlQRVNfQVJSID0gW1xuICB7IGtleTogJ3BoeXNpY2FsJywgbGFiZWw6IHQoJ1BoeXNpY2FsICh0YWJsZSBvciB2aWV3KScpIH0sXG4gIHsga2V5OiAndmlydHVhbCcsIGxhYmVsOiB0KCdWaXJ0dWFsIChTUUwpJykgfSxcbl07XG5jb25zdCBEQVRBU09VUkNFX1RZUEVTID0ge307XG5EQVRBU09VUkNFX1RZUEVTX0FSUi5mb3JFYWNoKG8gPT4ge1xuICBEQVRBU09VUkNFX1RZUEVTW28ua2V5XSA9IG87XG59KTtcblxuZnVuY3Rpb24gQ29sbGVjdGlvblRhYlRpdGxlKHsgdGl0bGUsIGNvbGxlY3Rpb24gfSkge1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNzcz17eyBkaXNwbGF5OiAnZmxleCcsIGFsaWduSXRlbXM6ICdjZW50ZXInIH19XG4gICAgICBkYXRhLXRlc3Q9e2Bjb2xsZWN0aW9uLXRhYi0ke3RpdGxlfWB9XG4gICAgPlxuICAgICAge3RpdGxlfXsnICd9XG4gICAgICA8U3R5bGVkQmFkZ2UgY291bnQ9e2NvbGxlY3Rpb24gPyBjb2xsZWN0aW9uLmxlbmd0aCA6IDB9IHNob3daZXJvIC8+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbkNvbGxlY3Rpb25UYWJUaXRsZS5wcm9wVHlwZXMgPSB7XG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjb2xsZWN0aW9uOiBQcm9wVHlwZXMuYXJyYXksXG59O1xuXG5mdW5jdGlvbiBDb2x1bW5Db2xsZWN0aW9uVGFibGUoe1xuICBjb2x1bW5zLFxuICBkYXRhc291cmNlLFxuICBvbkNvbHVtbnNDaGFuZ2UsXG4gIG9uRGF0YXNvdXJjZUNoYW5nZSxcbiAgZWRpdGFibGVDb2x1bW5OYW1lLFxuICBzaG93RXhwcmVzc2lvbixcbiAgYWxsb3dBZGRJdGVtLFxuICBhbGxvd0VkaXREYXRhVHlwZSxcbiAgaXRlbUdlbmVyYXRvcixcbiAgY29sdW1uTGFiZWxUb29sdGlwcyxcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8Q29sbGVjdGlvblRhYmxlXG4gICAgICB0YWJsZUNvbHVtbnM9e1xuICAgICAgICBpc0ZlYXR1cmVFbmFibGVkKEZlYXR1cmVGbGFnLkVOQUJMRV9BRFZBTkNFRF9EQVRBX1RZUEVTKVxuICAgICAgICAgID8gW1xuICAgICAgICAgICAgICAnY29sdW1uX25hbWUnLFxuICAgICAgICAgICAgICAnYWR2YW5jZWRfZGF0YV90eXBlJyxcbiAgICAgICAgICAgICAgJ3R5cGUnLFxuICAgICAgICAgICAgICAnaXNfZHR0bScsXG4gICAgICAgICAgICAgICdtYWluX2R0dG1fY29sJyxcbiAgICAgICAgICAgICAgJ2ZpbHRlcmFibGUnLFxuICAgICAgICAgICAgICAnZ3JvdXBieScsXG4gICAgICAgICAgICBdXG4gICAgICAgICAgOiBbXG4gICAgICAgICAgICAgICdjb2x1bW5fbmFtZScsXG4gICAgICAgICAgICAgICd0eXBlJyxcbiAgICAgICAgICAgICAgJ2lzX2R0dG0nLFxuICAgICAgICAgICAgICAnbWFpbl9kdHRtX2NvbCcsXG4gICAgICAgICAgICAgICdmaWx0ZXJhYmxlJyxcbiAgICAgICAgICAgICAgJ2dyb3VwYnknLFxuICAgICAgICAgICAgXVxuICAgICAgfVxuICAgICAgc29ydENvbHVtbnM9e1xuICAgICAgICBpc0ZlYXR1cmVFbmFibGVkKEZlYXR1cmVGbGFnLkVOQUJMRV9BRFZBTkNFRF9EQVRBX1RZUEVTKVxuICAgICAgICAgID8gW1xuICAgICAgICAgICAgICAnY29sdW1uX25hbWUnLFxuICAgICAgICAgICAgICAnYWR2YW5jZWRfZGF0YV90eXBlJyxcbiAgICAgICAgICAgICAgJ3R5cGUnLFxuICAgICAgICAgICAgICAnaXNfZHR0bScsXG4gICAgICAgICAgICAgICdtYWluX2R0dG1fY29sJyxcbiAgICAgICAgICAgICAgJ2ZpbHRlcmFibGUnLFxuICAgICAgICAgICAgICAnZ3JvdXBieScsXG4gICAgICAgICAgICBdXG4gICAgICAgICAgOiBbXG4gICAgICAgICAgICAgICdjb2x1bW5fbmFtZScsXG4gICAgICAgICAgICAgICd0eXBlJyxcbiAgICAgICAgICAgICAgJ2lzX2R0dG0nLFxuICAgICAgICAgICAgICAnbWFpbl9kdHRtX2NvbCcsXG4gICAgICAgICAgICAgICdmaWx0ZXJhYmxlJyxcbiAgICAgICAgICAgICAgJ2dyb3VwYnknLFxuICAgICAgICAgICAgXVxuICAgICAgfVxuICAgICAgYWxsb3dEZWxldGVzXG4gICAgICBhbGxvd0FkZEl0ZW09e2FsbG93QWRkSXRlbX1cbiAgICAgIGl0ZW1HZW5lcmF0b3I9e2l0ZW1HZW5lcmF0b3J9XG4gICAgICBjb2xsZWN0aW9uPXtjb2x1bW5zfVxuICAgICAgY29sdW1uTGFiZWxUb29sdGlwcz17Y29sdW1uTGFiZWxUb29sdGlwc31cbiAgICAgIHN0aWNreUhlYWRlclxuICAgICAgZXhwYW5kRmllbGRzZXQ9e1xuICAgICAgICA8Rm9ybUNvbnRhaW5lcj5cbiAgICAgICAgICA8RmllbGRzZXQgY29tcGFjdD5cbiAgICAgICAgICAgIHtzaG93RXhwcmVzc2lvbiAmJiAoXG4gICAgICAgICAgICAgIDxGaWVsZFxuICAgICAgICAgICAgICAgIGZpZWxkS2V5PVwiZXhwcmVzc2lvblwiXG4gICAgICAgICAgICAgICAgbGFiZWw9e3QoJ1NRTCBleHByZXNzaW9uJyl9XG4gICAgICAgICAgICAgICAgY29udHJvbD17XG4gICAgICAgICAgICAgICAgICA8VGV4dEFyZWFDb250cm9sXG4gICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlPVwibWFya2Rvd25cIlxuICAgICAgICAgICAgICAgICAgICBvZmZlckVkaXRJbk1vZGFsPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgICAgcmVzaXplPVwidmVydGljYWxcIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAgPEZpZWxkXG4gICAgICAgICAgICAgIGZpZWxkS2V5PVwidmVyYm9zZV9uYW1lXCJcbiAgICAgICAgICAgICAgbGFiZWw9e3QoJ0xhYmVsJyl9XG4gICAgICAgICAgICAgIGNvbnRyb2w9e1xuICAgICAgICAgICAgICAgIDxUZXh0Q29udHJvbFxuICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwidmVyYm9zZV9uYW1lXCJcbiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0KCdMYWJlbCcpfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8RmllbGRcbiAgICAgICAgICAgICAgZmllbGRLZXk9XCJkZXNjcmlwdGlvblwiXG4gICAgICAgICAgICAgIGxhYmVsPXt0KCdEZXNjcmlwdGlvbicpfVxuICAgICAgICAgICAgICBjb250cm9sPXtcbiAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2xcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xJZD1cImRlc2NyaXB0aW9uXCJcbiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0KCdEZXNjcmlwdGlvbicpfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB7YWxsb3dFZGl0RGF0YVR5cGUgJiYgKFxuICAgICAgICAgICAgICA8RmllbGRcbiAgICAgICAgICAgICAgICBmaWVsZEtleT1cInR5cGVcIlxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdEYXRhIHR5cGUnKX1cbiAgICAgICAgICAgICAgICBjb250cm9sPXtcbiAgICAgICAgICAgICAgICAgIDxTZWxlY3RcbiAgICAgICAgICAgICAgICAgICAgYXJpYUxhYmVsPXt0KCdEYXRhIHR5cGUnKX1cbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucz17REFUQV9UWVBFU31cbiAgICAgICAgICAgICAgICAgICAgbmFtZT1cInR5cGVcIlxuICAgICAgICAgICAgICAgICAgICBhbGxvd05ld09wdGlvbnNcbiAgICAgICAgICAgICAgICAgICAgYWxsb3dDbGVhclxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAge2lzRmVhdHVyZUVuYWJsZWQoRmVhdHVyZUZsYWcuRU5BQkxFX0FEVkFOQ0VEX0RBVEFfVFlQRVMpID8gKFxuICAgICAgICAgICAgICA8RmllbGRcbiAgICAgICAgICAgICAgICBmaWVsZEtleT1cImFkdmFuY2VkX2RhdGFfdHlwZVwiXG4gICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0FkdmFuY2VkIGRhdGEgdHlwZScpfVxuICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xuICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xJZD1cImFkdmFuY2VkX2RhdGFfdHlwZVwiXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0KCdBZHZhbmNlZCBEYXRhIHR5cGUnKX1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgPD48Lz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8RmllbGRcbiAgICAgICAgICAgICAgZmllbGRLZXk9XCJweXRob25fZGF0ZV9mb3JtYXRcIlxuICAgICAgICAgICAgICBsYWJlbD17dCgnRGF0ZXRpbWUgZm9ybWF0Jyl9XG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXtcbiAgICAgICAgICAgICAgICAvKiBOb3RlIHRoZSBmcmFnbWVudGVkIHRyYW5zbGF0aW9ucyBtYXkgbm90IHdvcmsuICovXG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgIHt0KCdUaGUgcGF0dGVybiBvZiB0aW1lc3RhbXAgZm9ybWF0LiBGb3Igc3RyaW5ncyB1c2UgJyl9XG4gICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMi9saWJyYXJ5L2RhdGV0aW1lLmh0bWwjc3RyZnRpbWUtc3RycHRpbWUtYmVoYXZpb3JcIj5cbiAgICAgICAgICAgICAgICAgICAge3QoJ1B5dGhvbiBkYXRldGltZSBzdHJpbmcgcGF0dGVybicpfVxuICAgICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgICAge3QoJyBleHByZXNzaW9uIHdoaWNoIG5lZWRzIHRvIGFkaGVyZSB0byB0aGUgJyl9XG4gICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSVNPXzg2MDFcIj5cbiAgICAgICAgICAgICAgICAgICAge3QoJ0lTTyA4NjAxJyl9XG4gICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgICB7dChgIHN0YW5kYXJkIHRvIGVuc3VyZSB0aGF0IHRoZSBsZXhpY29ncmFwaGljYWwgb3JkZXJpbmdcbiAgICAgICAgICAgICAgICAgICAgICBjb2luY2lkZXMgd2l0aCB0aGUgY2hyb25vbG9naWNhbCBvcmRlcmluZy4gSWYgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wIGZvcm1hdCBkb2VzIG5vdCBhZGhlcmUgdG8gdGhlIElTTyA4NjAxIHN0YW5kYXJkXG4gICAgICAgICAgICAgICAgICAgICAgeW91IHdpbGwgbmVlZCB0byBkZWZpbmUgYW4gZXhwcmVzc2lvbiBhbmQgdHlwZSBmb3JcbiAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm1pbmcgdGhlIHN0cmluZyBpbnRvIGEgZGF0ZSBvciB0aW1lc3RhbXAuIE5vdGVcbiAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50bHkgdGltZSB6b25lcyBhcmUgbm90IHN1cHBvcnRlZC4gSWYgdGltZSBpcyBzdG9yZWRcbiAgICAgICAgICAgICAgICAgICAgICBpbiBlcG9jaCBmb3JtYXQsIHB1dCBcXGBlcG9jaF9zXFxgIG9yIFxcYGVwb2NoX21zXFxgLiBJZiBubyBwYXR0ZXJuXG4gICAgICAgICAgICAgICAgICAgICAgaXMgc3BlY2lmaWVkIHdlIGZhbGwgYmFjayB0byB1c2luZyB0aGUgb3B0aW9uYWwgZGVmYXVsdHMgb24gYSBwZXJcbiAgICAgICAgICAgICAgICAgICAgICBkYXRhYmFzZS9jb2x1bW4gbmFtZSBsZXZlbCB2aWEgdGhlIGV4dHJhIHBhcmFtZXRlci5gKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBjb250cm9sPXtcbiAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2xcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xJZD1cInB5dGhvbl9kYXRlX2Zvcm1hdFwiXG4gICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIiVZLyVtLyVkXCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPEZpZWxkXG4gICAgICAgICAgICAgIGZpZWxkS2V5PVwiY2VydGlmaWVkX2J5XCJcbiAgICAgICAgICAgICAgbGFiZWw9e3QoJ0NlcnRpZmllZCBCeScpfVxuICAgICAgICAgICAgICBkZXNjcmlwdGlvbj17dCgnUGVyc29uIG9yIGdyb3VwIHRoYXQgaGFzIGNlcnRpZmllZCB0aGlzIG1ldHJpYycpfVxuICAgICAgICAgICAgICBjb250cm9sPXtcbiAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2xcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xJZD1cImNlcnRpZmllZFwiXG4gICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnQ2VydGlmaWVkIGJ5Jyl9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxGaWVsZFxuICAgICAgICAgICAgICBmaWVsZEtleT1cImNlcnRpZmljYXRpb25fZGV0YWlsc1wiXG4gICAgICAgICAgICAgIGxhYmVsPXt0KCdDZXJ0aWZpY2F0aW9uIGRldGFpbHMnKX1cbiAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoJ0RldGFpbHMgb2YgdGhlIGNlcnRpZmljYXRpb24nKX1cbiAgICAgICAgICAgICAgY29udHJvbD17XG4gICAgICAgICAgICAgICAgPFRleHRDb250cm9sXG4gICAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJjZXJ0aWZpY2F0aW9uRGV0YWlsc1wiXG4gICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnQ2VydGlmaWNhdGlvbiBkZXRhaWxzJyl9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L0ZpZWxkc2V0PlxuICAgICAgICA8L0Zvcm1Db250YWluZXI+XG4gICAgICB9XG4gICAgICBjb2x1bW5MYWJlbHM9e1xuICAgICAgICBpc0ZlYXR1cmVFbmFibGVkKEZlYXR1cmVGbGFnLkVOQUJMRV9BRFZBTkNFRF9EQVRBX1RZUEVTKVxuICAgICAgICAgID8ge1xuICAgICAgICAgICAgICBjb2x1bW5fbmFtZTogdCgnQ29sdW1uJyksXG4gICAgICAgICAgICAgIGFkdmFuY2VkX2RhdGFfdHlwZTogdCgnQWR2YW5jZWQgZGF0YSB0eXBlJyksXG4gICAgICAgICAgICAgIHR5cGU6IHQoJ0RhdGEgdHlwZScpLFxuICAgICAgICAgICAgICBncm91cGJ5OiB0KCdJcyBkaW1lbnNpb24nKSxcbiAgICAgICAgICAgICAgaXNfZHR0bTogdCgnSXMgdGVtcG9yYWwnKSxcbiAgICAgICAgICAgICAgbWFpbl9kdHRtX2NvbDogdCgnRGVmYXVsdCBkYXRldGltZScpLFxuICAgICAgICAgICAgICBmaWx0ZXJhYmxlOiB0KCdJcyBmaWx0ZXJhYmxlJyksXG4gICAgICAgICAgICB9XG4gICAgICAgICAgOiB7XG4gICAgICAgICAgICAgIGNvbHVtbl9uYW1lOiB0KCdDb2x1bW4nKSxcbiAgICAgICAgICAgICAgdHlwZTogdCgnRGF0YSB0eXBlJyksXG4gICAgICAgICAgICAgIGdyb3VwYnk6IHQoJ0lzIGRpbWVuc2lvbicpLFxuICAgICAgICAgICAgICBpc19kdHRtOiB0KCdJcyB0ZW1wb3JhbCcpLFxuICAgICAgICAgICAgICBtYWluX2R0dG1fY29sOiB0KCdEZWZhdWx0IGRhdGV0aW1lJyksXG4gICAgICAgICAgICAgIGZpbHRlcmFibGU6IHQoJ0lzIGZpbHRlcmFibGUnKSxcbiAgICAgICAgICAgIH1cbiAgICAgIH1cbiAgICAgIG9uQ2hhbmdlPXtvbkNvbHVtbnNDaGFuZ2V9XG4gICAgICBpdGVtUmVuZGVyZXJzPXtcbiAgICAgICAgaXNGZWF0dXJlRW5hYmxlZChGZWF0dXJlRmxhZy5FTkFCTEVfQURWQU5DRURfREFUQV9UWVBFUylcbiAgICAgICAgICA/IHtcbiAgICAgICAgICAgICAgY29sdW1uX25hbWU6ICh2LCBvbkl0ZW1DaGFuZ2UsIF8sIHJlY29yZCkgPT5cbiAgICAgICAgICAgICAgICBlZGl0YWJsZUNvbHVtbk5hbWUgPyAoXG4gICAgICAgICAgICAgICAgICA8U3R5bGVkTGFiZWxXcmFwcGVyPlxuICAgICAgICAgICAgICAgICAgICB7cmVjb3JkLmlzX2NlcnRpZmllZCAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgPENlcnRpZmllZEJhZGdlXG4gICAgICAgICAgICAgICAgICAgICAgICBjZXJ0aWZpZWRCeT17cmVjb3JkLmNlcnRpZmllZF9ieX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRldGFpbHM9e3JlY29yZC5jZXJ0aWZpY2F0aW9uX2RldGFpbHN9XG4gICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgPEVkaXRhYmxlVGl0bGVcbiAgICAgICAgICAgICAgICAgICAgICBjYW5FZGl0XG4gICAgICAgICAgICAgICAgICAgICAgdGl0bGU9e3Z9XG4gICAgICAgICAgICAgICAgICAgICAgb25TYXZlVGl0bGU9e29uSXRlbUNoYW5nZX1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgIDwvU3R5bGVkTGFiZWxXcmFwcGVyPlxuICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICA8U3R5bGVkTGFiZWxXcmFwcGVyPlxuICAgICAgICAgICAgICAgICAgICB7cmVjb3JkLmlzX2NlcnRpZmllZCAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgPENlcnRpZmllZEJhZGdlXG4gICAgICAgICAgICAgICAgICAgICAgICBjZXJ0aWZpZWRCeT17cmVjb3JkLmNlcnRpZmllZF9ieX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRldGFpbHM9e3JlY29yZC5jZXJ0aWZpY2F0aW9uX2RldGFpbHN9XG4gICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAge3Z9XG4gICAgICAgICAgICAgICAgICA8L1N0eWxlZExhYmVsV3JhcHBlcj5cbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICBtYWluX2R0dG1fY29sOiAodmFsdWUsIF9vbkl0ZW1DaGFuZ2UsIF9sYWJlbCwgcmVjb3JkKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2hlY2tlZCA9IGRhdGFzb3VyY2UubWFpbl9kdHRtX2NvbCA9PT0gcmVjb3JkLmNvbHVtbl9uYW1lO1xuICAgICAgICAgICAgICAgIGNvbnN0IGRpc2FibGVkID0gIWNvbHVtbnMuZmluZChcbiAgICAgICAgICAgICAgICAgIGNvbHVtbiA9PiBjb2x1bW4uY29sdW1uX25hbWUgPT09IHJlY29yZC5jb2x1bW5fbmFtZSxcbiAgICAgICAgICAgICAgICApLmlzX2R0dG07XG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgIDxSYWRpb1xuICAgICAgICAgICAgICAgICAgICBkYXRhLXRlc3Q9e2ByYWRpby1kZWZhdWx0LWR0dG0tJHtyZWNvcmQuY29sdW1uX25hbWV9YH1cbiAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17Y2hlY2tlZH1cbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICBvbkRhdGFzb3VyY2VDaGFuZ2Uoe1xuICAgICAgICAgICAgICAgICAgICAgICAgLi4uZGF0YXNvdXJjZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1haW5fZHR0bV9jb2w6IHJlY29yZC5jb2x1bW5fbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHR5cGU6IGQgPT4gKGQgPyA8TGFiZWw+e2R9PC9MYWJlbD4gOiBudWxsKSxcbiAgICAgICAgICAgICAgYWR2YW5jZWRfZGF0YV90eXBlOiBkID0+IChcbiAgICAgICAgICAgICAgICA8TGFiZWwgb25DaGFuZ2U9e29uQ29sdW1uc0NoYW5nZX0+e2R9PC9MYWJlbD5cbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgaXNfZHR0bTogY2hlY2tib3hHZW5lcmF0b3IsXG4gICAgICAgICAgICAgIGZpbHRlcmFibGU6IGNoZWNrYm94R2VuZXJhdG9yLFxuICAgICAgICAgICAgICBncm91cGJ5OiBjaGVja2JveEdlbmVyYXRvcixcbiAgICAgICAgICAgIH1cbiAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgY29sdW1uX25hbWU6ICh2LCBvbkl0ZW1DaGFuZ2UsIF8sIHJlY29yZCkgPT5cbiAgICAgICAgICAgICAgICBlZGl0YWJsZUNvbHVtbk5hbWUgPyAoXG4gICAgICAgICAgICAgICAgICA8U3R5bGVkTGFiZWxXcmFwcGVyPlxuICAgICAgICAgICAgICAgICAgICB7cmVjb3JkLmlzX2NlcnRpZmllZCAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgPENlcnRpZmllZEJhZGdlXG4gICAgICAgICAgICAgICAgICAgICAgICBjZXJ0aWZpZWRCeT17cmVjb3JkLmNlcnRpZmllZF9ieX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRldGFpbHM9e3JlY29yZC5jZXJ0aWZpY2F0aW9uX2RldGFpbHN9XG4gICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sIHZhbHVlPXt2fSBvbkNoYW5nZT17b25JdGVtQ2hhbmdlfSAvPlxuICAgICAgICAgICAgICAgICAgPC9TdHlsZWRMYWJlbFdyYXBwZXI+XG4gICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgIDxTdHlsZWRMYWJlbFdyYXBwZXI+XG4gICAgICAgICAgICAgICAgICAgIHtyZWNvcmQuaXNfY2VydGlmaWVkICYmIChcbiAgICAgICAgICAgICAgICAgICAgICA8Q2VydGlmaWVkQmFkZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlcnRpZmllZEJ5PXtyZWNvcmQuY2VydGlmaWVkX2J5fVxuICAgICAgICAgICAgICAgICAgICAgICAgZGV0YWlscz17cmVjb3JkLmNlcnRpZmljYXRpb25fZGV0YWlsc31cbiAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICB7dn1cbiAgICAgICAgICAgICAgICAgIDwvU3R5bGVkTGFiZWxXcmFwcGVyPlxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgIG1haW5fZHR0bV9jb2w6ICh2YWx1ZSwgX29uSXRlbUNoYW5nZSwgX2xhYmVsLCByZWNvcmQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBjaGVja2VkID0gZGF0YXNvdXJjZS5tYWluX2R0dG1fY29sID09PSByZWNvcmQuY29sdW1uX25hbWU7XG4gICAgICAgICAgICAgICAgY29uc3QgZGlzYWJsZWQgPSAhY29sdW1ucy5maW5kKFxuICAgICAgICAgICAgICAgICAgY29sdW1uID0+IGNvbHVtbi5jb2x1bW5fbmFtZSA9PT0gcmVjb3JkLmNvbHVtbl9uYW1lLFxuICAgICAgICAgICAgICAgICkuaXNfZHR0bTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPFJhZGlvXG4gICAgICAgICAgICAgICAgICAgIGRhdGEtdGVzdD17YHJhZGlvLWRlZmF1bHQtZHR0bS0ke3JlY29yZC5jb2x1bW5fbmFtZX1gfVxuICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXtjaGVja2VkfVxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoKSA9PlxuICAgICAgICAgICAgICAgICAgICAgIG9uRGF0YXNvdXJjZUNoYW5nZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5kYXRhc291cmNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWFpbl9kdHRtX2NvbDogcmVjb3JkLmNvbHVtbl9uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgdHlwZTogZCA9PiAoZCA/IDxMYWJlbD57ZH08L0xhYmVsPiA6IG51bGwpLFxuICAgICAgICAgICAgICBpc19kdHRtOiBjaGVja2JveEdlbmVyYXRvcixcbiAgICAgICAgICAgICAgZmlsdGVyYWJsZTogY2hlY2tib3hHZW5lcmF0b3IsXG4gICAgICAgICAgICAgIGdyb3VwYnk6IGNoZWNrYm94R2VuZXJhdG9yLFxuICAgICAgICAgICAgfVxuICAgICAgfVxuICAgIC8+XG4gICk7XG59XG5Db2x1bW5Db2xsZWN0aW9uVGFibGUucHJvcFR5cGVzID0ge1xuICBjb2x1bW5zOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbiAgZGF0YXNvdXJjZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBvbkNvbHVtbnNDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIG9uRGF0YXNvdXJjZUNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgZWRpdGFibGVDb2x1bW5OYW1lOiBQcm9wVHlwZXMuYm9vbCxcbiAgc2hvd0V4cHJlc3Npb246IFByb3BUeXBlcy5ib29sLFxuICBhbGxvd0FkZEl0ZW06IFByb3BUeXBlcy5ib29sLFxuICBhbGxvd0VkaXREYXRhVHlwZTogUHJvcFR5cGVzLmJvb2wsXG4gIGl0ZW1HZW5lcmF0b3I6IFByb3BUeXBlcy5mdW5jLFxufTtcbkNvbHVtbkNvbGxlY3Rpb25UYWJsZS5kZWZhdWx0UHJvcHMgPSB7XG4gIGVkaXRhYmxlQ29sdW1uTmFtZTogZmFsc2UsXG4gIHNob3dFeHByZXNzaW9uOiBmYWxzZSxcbiAgYWxsb3dBZGRJdGVtOiBmYWxzZSxcbiAgYWxsb3dFZGl0RGF0YVR5cGU6IGZhbHNlLFxuICBpdGVtR2VuZXJhdG9yOiAoKSA9PiAoe1xuICAgIGNvbHVtbl9uYW1lOiB0KCc8bmV3IGNvbHVtbj4nKSxcbiAgICBmaWx0ZXJhYmxlOiB0cnVlLFxuICAgIGdyb3VwYnk6IHRydWUsXG4gIH0pLFxufTtcblxuZnVuY3Rpb24gU3RhY2tlZEZpZWxkKHsgbGFiZWwsIGZvcm1FbGVtZW50IH0pIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPHN0cm9uZz57bGFiZWx9PC9zdHJvbmc+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+e2Zvcm1FbGVtZW50fTwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5TdGFja2VkRmllbGQucHJvcFR5cGVzID0ge1xuICBsYWJlbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgZm9ybUVsZW1lbnQ6IFByb3BUeXBlcy5ub2RlLFxufTtcblxuZnVuY3Rpb24gRm9ybUNvbnRhaW5lcih7IGNoaWxkcmVuIH0pIHtcbiAgcmV0dXJuIDxDYXJkIHBhZGRlZD57Y2hpbGRyZW59PC9DYXJkPjtcbn1cblxuRm9ybUNvbnRhaW5lci5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbn07XG5cbmNvbnN0IHByb3BUeXBlcyA9IHtcbiAgZGF0YXNvdXJjZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG4gIGFkZFN1Y2Nlc3NUb2FzdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgYWRkRGFuZ2VyVG9hc3Q6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHNldElzRWRpdGluZzogUHJvcFR5cGVzLmZ1bmMsXG59O1xuXG5jb25zdCBkZWZhdWx0UHJvcHMgPSB7XG4gIG9uQ2hhbmdlOiAoKSA9PiB7fSxcbiAgc2V0SXNFZGl0aW5nOiAoKSA9PiB7fSxcbn07XG5cbmZ1bmN0aW9uIE93bmVyc1NlbGVjdG9yKHsgZGF0YXNvdXJjZSwgb25DaGFuZ2UgfSkge1xuICBjb25zdCBsb2FkT3B0aW9ucyA9IHVzZUNhbGxiYWNrKChzZWFyY2ggPSAnJywgcGFnZSwgcGFnZVNpemUpID0+IHtcbiAgICBjb25zdCBxdWVyeSA9IHJpc29uLmVuY29kZSh7IGZpbHRlcjogc2VhcmNoLCBwYWdlLCBwYWdlX3NpemU6IHBhZ2VTaXplIH0pO1xuICAgIHJldHVybiBTdXBlcnNldENsaWVudC5nZXQoe1xuICAgICAgZW5kcG9pbnQ6IGAvYXBpL3YxL2RhdGFzZXQvcmVsYXRlZC9vd25lcnM/cT0ke3F1ZXJ5fWAsXG4gICAgfSkudGhlbihyZXNwb25zZSA9PiAoe1xuICAgICAgZGF0YTogcmVzcG9uc2UuanNvbi5yZXN1bHRcbiAgICAgICAgLmZpbHRlcihpdGVtID0+IGl0ZW0uZXh0cmEuYWN0aXZlKVxuICAgICAgICAubWFwKGl0ZW0gPT4gKHtcbiAgICAgICAgICB2YWx1ZTogaXRlbS52YWx1ZSxcbiAgICAgICAgICBsYWJlbDogaXRlbS50ZXh0LFxuICAgICAgICB9KSksXG4gICAgICB0b3RhbENvdW50OiByZXNwb25zZS5qc29uLmNvdW50LFxuICAgIH0pKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPEFzeW5jU2VsZWN0XG4gICAgICBhcmlhTGFiZWw9e3QoJ1NlbGVjdCBvd25lcnMnKX1cbiAgICAgIG1vZGU9XCJtdWx0aXBsZVwiXG4gICAgICBuYW1lPVwib3duZXJzXCJcbiAgICAgIHZhbHVlPXtkYXRhc291cmNlLm93bmVyc31cbiAgICAgIG9wdGlvbnM9e2xvYWRPcHRpb25zfVxuICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgaGVhZGVyPXs8Rm9ybUxhYmVsPnt0KCdPd25lcnMnKX08L0Zvcm1MYWJlbD59XG4gICAgICBhbGxvd0NsZWFyXG4gICAgLz5cbiAgKTtcbn1cblxuY29uc3QgQ3VycmVuY3lDb250cm9sQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgJHsoeyB0aGVtZSB9KSA9PiBjc3NgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgJiA+IDpmaXJzdC1jaGlsZCB7XG4gICAgICB3aWR0aDogMjUlO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAke3RoZW1lLmdyaWRVbml0ICogNH1weDtcbiAgICB9XG4gIGB9XG5gO1xuY29uc3QgQ3VycmVuY3lDb250cm9sID0gKHsgb25DaGFuZ2UsIHZhbHVlOiBjdXJyZW5jeSA9IHt9LCBjdXJyZW5jaWVzIH0pID0+IChcbiAgPEN1cnJlbmN5Q29udHJvbENvbnRhaW5lcj5cbiAgICA8U2VsZWN0XG4gICAgICBhcmlhTGFiZWw9e3QoJ0N1cnJlbmN5IHByZWZpeCBvciBzdWZmaXgnKX1cbiAgICAgIG9wdGlvbnM9e0NVUlJFTkNZX1NZTUJPTF9QT1NJVElPTn1cbiAgICAgIHBsYWNlaG9sZGVyPXt0KCdQcmVmaXggb3Igc3VmZml4Jyl9XG4gICAgICBvbkNoYW5nZT17c3ltYm9sUG9zaXRpb24gPT4ge1xuICAgICAgICBvbkNoYW5nZSh7IC4uLmN1cnJlbmN5LCBzeW1ib2xQb3NpdGlvbiB9KTtcbiAgICAgIH19XG4gICAgICB2YWx1ZT17Y3VycmVuY3k/LnN5bWJvbFBvc2l0aW9ufVxuICAgICAgYWxsb3dDbGVhclxuICAgIC8+XG4gICAgPFNlbGVjdFxuICAgICAgYXJpYUxhYmVsPXt0KCdDdXJyZW5jeSBzeW1ib2wnKX1cbiAgICAgIG9wdGlvbnM9e2N1cnJlbmNpZXN9XG4gICAgICBwbGFjZWhvbGRlcj17dCgnU2VsZWN0IG9yIHR5cGUgY3VycmVuY3kgc3ltYm9sJyl9XG4gICAgICBvbkNoYW5nZT17c3ltYm9sID0+IHtcbiAgICAgICAgb25DaGFuZ2UoeyAuLi5jdXJyZW5jeSwgc3ltYm9sIH0pO1xuICAgICAgfX1cbiAgICAgIHZhbHVlPXtjdXJyZW5jeT8uc3ltYm9sfVxuICAgICAgYWxsb3dDbGVhclxuICAgICAgYWxsb3dOZXdPcHRpb25zXG4gICAgLz5cbiAgPC9DdXJyZW5jeUNvbnRyb2xDb250YWluZXI+XG4pO1xuXG5jbGFzcyBEYXRhc291cmNlRWRpdG9yIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBkYXRhc291cmNlOiB7XG4gICAgICAgIC4uLnByb3BzLmRhdGFzb3VyY2UsXG4gICAgICAgIG93bmVyczogcHJvcHMuZGF0YXNvdXJjZS5vd25lcnMubWFwKG93bmVyID0+ICh7XG4gICAgICAgICAgdmFsdWU6IG93bmVyLnZhbHVlIHx8IG93bmVyLmlkLFxuICAgICAgICAgIGxhYmVsOiBvd25lci5sYWJlbCB8fCBgJHtvd25lci5maXJzdF9uYW1lfSAke293bmVyLmxhc3RfbmFtZX1gLFxuICAgICAgICB9KSksXG4gICAgICAgIG1ldHJpY3M6IHByb3BzLmRhdGFzb3VyY2UubWV0cmljcz8ubWFwKG1ldHJpYyA9PiB7XG4gICAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgY2VydGlmaWVkX2J5OiBjZXJ0aWZpZWRCeU1ldHJpYyxcbiAgICAgICAgICAgIGNlcnRpZmljYXRpb25fZGV0YWlsczogY2VydGlmaWNhdGlvbkRldGFpbHMsXG4gICAgICAgICAgfSA9IG1ldHJpYztcbiAgICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICBjZXJ0aWZpY2F0aW9uOiB7IGRldGFpbHMsIGNlcnRpZmllZF9ieTogY2VydGlmaWVkQnkgfSA9IHt9LFxuICAgICAgICAgICAgd2FybmluZ19tYXJrZG93bjogd2FybmluZ01hcmtkb3duLFxuICAgICAgICAgIH0gPSBKU09OLnBhcnNlKG1ldHJpYy5leHRyYSB8fCAne30nKSB8fCB7fTtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4ubWV0cmljLFxuICAgICAgICAgICAgY2VydGlmaWNhdGlvbl9kZXRhaWxzOiBjZXJ0aWZpY2F0aW9uRGV0YWlscyB8fCBkZXRhaWxzLFxuICAgICAgICAgICAgd2FybmluZ19tYXJrZG93bjogd2FybmluZ01hcmtkb3duIHx8ICcnLFxuICAgICAgICAgICAgY2VydGlmaWVkX2J5OiBjZXJ0aWZpZWRCeSB8fCBjZXJ0aWZpZWRCeU1ldHJpYyxcbiAgICAgICAgICB9O1xuICAgICAgICB9KSxcbiAgICAgIH0sXG4gICAgICBlcnJvcnM6IFtdLFxuICAgICAgaXNTcWxhOlxuICAgICAgICBwcm9wcy5kYXRhc291cmNlLmRhdGFzb3VyY2VfdHlwZSA9PT0gJ3RhYmxlJyB8fFxuICAgICAgICBwcm9wcy5kYXRhc291cmNlLnR5cGUgPT09ICd0YWJsZScsXG4gICAgICBpc0VkaXRNb2RlOiBmYWxzZSxcbiAgICAgIGRhdGFiYXNlQ29sdW1uczogcHJvcHMuZGF0YXNvdXJjZS5jb2x1bW5zLmZpbHRlcihjb2wgPT4gIWNvbC5leHByZXNzaW9uKSxcbiAgICAgIGNhbGN1bGF0ZWRDb2x1bW5zOiBwcm9wcy5kYXRhc291cmNlLmNvbHVtbnMuZmlsdGVyKFxuICAgICAgICBjb2wgPT4gISFjb2wuZXhwcmVzc2lvbixcbiAgICAgICksXG4gICAgICBtZXRhZGF0YUxvYWRpbmc6IGZhbHNlLFxuICAgICAgYWN0aXZlVGFiS2V5OiAwLFxuICAgICAgZGF0YXNvdXJjZVR5cGU6IHByb3BzLmRhdGFzb3VyY2Uuc3FsXG4gICAgICAgID8gREFUQVNPVVJDRV9UWVBFUy52aXJ0dWFsLmtleVxuICAgICAgICA6IERBVEFTT1VSQ0VfVFlQRVMucGh5c2ljYWwua2V5LFxuICAgIH07XG5cbiAgICB0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25DaGFuZ2VFZGl0TW9kZSA9IHRoaXMub25DaGFuZ2VFZGl0TW9kZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25EYXRhc291cmNlUHJvcENoYW5nZSA9IHRoaXMub25EYXRhc291cmNlUHJvcENoYW5nZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25EYXRhc291cmNlQ2hhbmdlID0gdGhpcy5vbkRhdGFzb3VyY2VDaGFuZ2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLnRhYmxlQ2hhbmdlQW5kU3luY01ldGFkYXRhID1cbiAgICAgIHRoaXMudGFibGVDaGFuZ2VBbmRTeW5jTWV0YWRhdGEuYmluZCh0aGlzKTtcbiAgICB0aGlzLnN5bmNNZXRhZGF0YSA9IHRoaXMuc3luY01ldGFkYXRhLmJpbmQodGhpcyk7XG4gICAgdGhpcy5zZXRDb2x1bW5zID0gdGhpcy5zZXRDb2x1bW5zLmJpbmQodGhpcyk7XG4gICAgdGhpcy52YWxpZGF0ZUFuZENoYW5nZSA9IHRoaXMudmFsaWRhdGVBbmRDaGFuZ2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLmhhbmRsZVRhYlNlbGVjdCA9IHRoaXMuaGFuZGxlVGFiU2VsZWN0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5hbGxvd0VkaXRTb3VyY2UgPSAhaXNGZWF0dXJlRW5hYmxlZChcbiAgICAgIEZlYXR1cmVGbGFnLkRJU0FCTEVfREFUQVNFVF9TT1VSQ0VfRURJVCxcbiAgICApO1xuICAgIHRoaXMuY3VycmVuY2llcyA9IGVuc3VyZUlzQXJyYXkocHJvcHMuY3VycmVuY2llcykubWFwKGN1cnJlbmN5Q29kZSA9PiAoe1xuICAgICAgdmFsdWU6IGN1cnJlbmN5Q29kZSxcbiAgICAgIGxhYmVsOiBgJHtnZXRDdXJyZW5jeVN5bWJvbCh7XG4gICAgICAgIHN5bWJvbDogY3VycmVuY3lDb2RlLFxuICAgICAgfSl9ICgke2N1cnJlbmN5Q29kZX0pYCxcbiAgICB9KSk7XG4gIH1cblxuICBvbkNoYW5nZSgpIHtcbiAgICAvLyBFbXB0eWluZyBTUUwgaWYgXCJQaHlzaWNhbFwiIHJhZGlvIGJ1dHRvbiBpcyBzZWxlY3RlZFxuICAgIC8vIEN1cnJlbnRseSB0aGUgbG9naWMgdG8ga25vdyB3aGV0aGVyIHRoZSBzb3VyY2UgaXNcbiAgICAvLyBwaHlzaWNhbCBvciB2aXJ0dWFsIGlzIGJhc2VkIG9uIHdoZXRoZXIgU1FMIGlzIGVtcHR5IG9yIG5vdC5cbiAgICBjb25zdCB7IGRhdGFzb3VyY2VUeXBlLCBkYXRhc291cmNlIH0gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IHNxbCA9XG4gICAgICBkYXRhc291cmNlVHlwZSA9PT0gREFUQVNPVVJDRV9UWVBFUy5waHlzaWNhbC5rZXkgPyAnJyA6IGRhdGFzb3VyY2Uuc3FsO1xuICAgIGNvbnN0IG5ld0RhdGFzb3VyY2UgPSB7XG4gICAgICAuLi50aGlzLnN0YXRlLmRhdGFzb3VyY2UsXG4gICAgICBzcWwsXG4gICAgICBjb2x1bW5zOiBbLi4udGhpcy5zdGF0ZS5kYXRhYmFzZUNvbHVtbnMsIC4uLnRoaXMuc3RhdGUuY2FsY3VsYXRlZENvbHVtbnNdLFxuICAgIH07XG4gICAgdGhpcy5wcm9wcy5vbkNoYW5nZShuZXdEYXRhc291cmNlLCB0aGlzLnN0YXRlLmVycm9ycyk7XG4gIH1cblxuICBvbkNoYW5nZUVkaXRNb2RlKCkge1xuICAgIHRoaXMucHJvcHMuc2V0SXNFZGl0aW5nKCF0aGlzLnN0YXRlLmlzRWRpdE1vZGUpO1xuICAgIHRoaXMuc2V0U3RhdGUocHJldlN0YXRlID0+ICh7IGlzRWRpdE1vZGU6ICFwcmV2U3RhdGUuaXNFZGl0TW9kZSB9KSk7XG4gIH1cblxuICBvbkRhdGFzb3VyY2VDaGFuZ2UoZGF0YXNvdXJjZSwgY2FsbGJhY2sgPSB0aGlzLnZhbGlkYXRlQW5kQ2hhbmdlKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGRhdGFzb3VyY2UgfSwgY2FsbGJhY2spO1xuICB9XG5cbiAgb25EYXRhc291cmNlUHJvcENoYW5nZShhdHRyLCB2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSByZXR1cm47IC8vIGlmIHZhbHVlIGlzIHVuZGVmaW5lZCBkbyBub3QgdXBkYXRlIHN0YXRlXG4gICAgY29uc3QgZGF0YXNvdXJjZSA9IHsgLi4udGhpcy5zdGF0ZS5kYXRhc291cmNlLCBbYXR0cl06IHZhbHVlIH07XG4gICAgdGhpcy5zZXRTdGF0ZShcbiAgICAgIHByZXZTdGF0ZSA9PiAoe1xuICAgICAgICBkYXRhc291cmNlOiB7IC4uLnByZXZTdGF0ZS5kYXRhc291cmNlLCBbYXR0cl06IHZhbHVlIH0sXG4gICAgICB9KSxcbiAgICAgIGF0dHIgPT09ICd0YWJsZV9uYW1lJ1xuICAgICAgICA/IHRoaXMub25EYXRhc291cmNlQ2hhbmdlKGRhdGFzb3VyY2UsIHRoaXMudGFibGVDaGFuZ2VBbmRTeW5jTWV0YWRhdGEpXG4gICAgICAgIDogdGhpcy5vbkRhdGFzb3VyY2VDaGFuZ2UoZGF0YXNvdXJjZSwgdGhpcy52YWxpZGF0ZUFuZENoYW5nZSksXG4gICAgKTtcbiAgfVxuXG4gIG9uRGF0YXNvdXJjZVR5cGVDaGFuZ2UoZGF0YXNvdXJjZVR5cGUpIHtcbiAgICB0aGlzLnNldFN0YXRlKHsgZGF0YXNvdXJjZVR5cGUgfSk7XG4gIH1cblxuICBzZXRDb2x1bW5zKG9iaikge1xuICAgIC8vIHVwZGF0ZSBjYWxjdWxhdGVkQ29sdW1ucyBvciBkYXRhYmFzZUNvbHVtbnNcbiAgICB0aGlzLnNldFN0YXRlKG9iaiwgdGhpcy52YWxpZGF0ZUFuZENoYW5nZSk7XG4gIH1cblxuICB2YWxpZGF0ZUFuZENoYW5nZSgpIHtcbiAgICB0aGlzLnZhbGlkYXRlKHRoaXMub25DaGFuZ2UpO1xuICB9XG5cbiAgdGFibGVDaGFuZ2VBbmRTeW5jTWV0YWRhdGEoKSB7XG4gICAgdGhpcy52YWxpZGF0ZSgoKSA9PiB7XG4gICAgICB0aGlzLnN5bmNNZXRhZGF0YSgpO1xuICAgICAgdGhpcy5vbkNoYW5nZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgdXBkYXRlQ29sdW1ucyhjb2xzKSB7XG4gICAgLy8gY29sczogQXJyYXk8e2NvbHVtbl9uYW1lOiBzdHJpbmc7IGlzX2R0dG06IGJvb2xlYW47IHR5cGU6IHN0cmluZzt9PlxuICAgIGNvbnN0IHsgZGF0YWJhc2VDb2x1bW5zIH0gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IGRhdGFiYXNlQ29sdW1uTmFtZXMgPSBjb2xzLm1hcChjb2wgPT4gY29sLmNvbHVtbl9uYW1lKTtcbiAgICBjb25zdCBjdXJyZW50Q29scyA9IGRhdGFiYXNlQ29sdW1ucy5yZWR1Y2UoXG4gICAgICAoYWdnLCBjb2wpID0+ICh7XG4gICAgICAgIC4uLmFnZyxcbiAgICAgICAgW2NvbC5jb2x1bW5fbmFtZV06IGNvbCxcbiAgICAgIH0pLFxuICAgICAge30sXG4gICAgKTtcbiAgICBjb25zdCBmaW5hbENvbHVtbnMgPSBbXTtcbiAgICBjb25zdCByZXN1bHRzID0ge1xuICAgICAgYWRkZWQ6IFtdLFxuICAgICAgbW9kaWZpZWQ6IFtdLFxuICAgICAgcmVtb3ZlZDogZGF0YWJhc2VDb2x1bW5zXG4gICAgICAgIC5tYXAoY29sID0+IGNvbC5jb2x1bW5fbmFtZSlcbiAgICAgICAgLmZpbHRlcihjb2wgPT4gIWRhdGFiYXNlQ29sdW1uTmFtZXMuaW5jbHVkZXMoY29sKSksXG4gICAgfTtcbiAgICBjb2xzLmZvckVhY2goY29sID0+IHtcbiAgICAgIGNvbnN0IGN1cnJlbnRDb2wgPSBjdXJyZW50Q29sc1tjb2wuY29sdW1uX25hbWVdO1xuICAgICAgaWYgKCFjdXJyZW50Q29sKSB7XG4gICAgICAgIC8vIG5ldyBjb2x1bW5cbiAgICAgICAgZmluYWxDb2x1bW5zLnB1c2goe1xuICAgICAgICAgIGlkOiBzaG9ydGlkLmdlbmVyYXRlKCksXG4gICAgICAgICAgY29sdW1uX25hbWU6IGNvbC5jb2x1bW5fbmFtZSxcbiAgICAgICAgICB0eXBlOiBjb2wudHlwZSxcbiAgICAgICAgICBncm91cGJ5OiB0cnVlLFxuICAgICAgICAgIGZpbHRlcmFibGU6IHRydWUsXG4gICAgICAgICAgaXNfZHR0bTogY29sLmlzX2R0dG0sXG4gICAgICAgIH0pO1xuICAgICAgICByZXN1bHRzLmFkZGVkLnB1c2goY29sLmNvbHVtbl9uYW1lKTtcbiAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgIGN1cnJlbnRDb2wudHlwZSAhPT0gY29sLnR5cGUgfHxcbiAgICAgICAgKCFjdXJyZW50Q29sLmlzX2R0dG0gJiYgY29sLmlzX2R0dG0pXG4gICAgICApIHtcbiAgICAgICAgLy8gbW9kaWZpZWQgY29sdW1uXG4gICAgICAgIGZpbmFsQ29sdW1ucy5wdXNoKHtcbiAgICAgICAgICAuLi5jdXJyZW50Q29sLFxuICAgICAgICAgIHR5cGU6IGNvbC50eXBlLFxuICAgICAgICAgIGlzX2R0dG06IGN1cnJlbnRDb2wuaXNfZHR0bSB8fCBjb2wuaXNfZHR0bSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJlc3VsdHMubW9kaWZpZWQucHVzaChjb2wuY29sdW1uX25hbWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gdW5jaGFuZ2VkXG4gICAgICAgIGZpbmFsQ29sdW1ucy5wdXNoKGN1cnJlbnRDb2wpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGlmIChcbiAgICAgIHJlc3VsdHMuYWRkZWQubGVuZ3RoIHx8XG4gICAgICByZXN1bHRzLm1vZGlmaWVkLmxlbmd0aCB8fFxuICAgICAgcmVzdWx0cy5yZW1vdmVkLmxlbmd0aFxuICAgICkge1xuICAgICAgdGhpcy5zZXRDb2x1bW5zKHsgZGF0YWJhc2VDb2x1bW5zOiBmaW5hbENvbHVtbnMgfSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRzO1xuICB9XG5cbiAgc3luY01ldGFkYXRhKCkge1xuICAgIGNvbnN0IHsgZGF0YXNvdXJjZSB9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICBkYXRhc291cmNlX3R5cGU6IGRhdGFzb3VyY2UudHlwZSB8fCBkYXRhc291cmNlLmRhdGFzb3VyY2VfdHlwZSxcbiAgICAgIGRhdGFiYXNlX25hbWU6XG4gICAgICAgIGRhdGFzb3VyY2UuZGF0YWJhc2UuZGF0YWJhc2VfbmFtZSB8fCBkYXRhc291cmNlLmRhdGFiYXNlLm5hbWUsXG4gICAgICBzY2hlbWFfbmFtZTogZGF0YXNvdXJjZS5zY2hlbWEsXG4gICAgICB0YWJsZV9uYW1lOiBkYXRhc291cmNlLnRhYmxlX25hbWVcbiAgICAgICAgPyBlbmNvZGVVUklDb21wb25lbnQoZGF0YXNvdXJjZS50YWJsZV9uYW1lKVxuICAgICAgICA6IGRhdGFzb3VyY2UudGFibGVfbmFtZSxcbiAgICB9O1xuICAgIE9iamVjdC5lbnRyaWVzKHBhcmFtcykuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICAvLyByaXNvbiBjYW4ndCBlbmNvZGUgdGhlIHVuZGVmaW5lZCB2YWx1ZVxuICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcGFyYW1zW2tleV0gPSBudWxsO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnN0IGVuZHBvaW50ID0gYC9kYXRhc291cmNlL2V4dGVybmFsX21ldGFkYXRhX2J5X25hbWUvP3E9JHtyaXNvbi5lbmNvZGUoXG4gICAgICBwYXJhbXMsXG4gICAgKX1gO1xuICAgIHRoaXMuc2V0U3RhdGUoeyBtZXRhZGF0YUxvYWRpbmc6IHRydWUgfSk7XG5cbiAgICBTdXBlcnNldENsaWVudC5nZXQoeyBlbmRwb2ludCB9KVxuICAgICAgLnRoZW4oKHsganNvbiB9KSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3VsdHMgPSB0aGlzLnVwZGF0ZUNvbHVtbnMoanNvbik7XG4gICAgICAgIGlmIChyZXN1bHRzLm1vZGlmaWVkLmxlbmd0aCkge1xuICAgICAgICAgIHRoaXMucHJvcHMuYWRkU3VjY2Vzc1RvYXN0KFxuICAgICAgICAgICAgdCgnTW9kaWZpZWQgY29sdW1uczogJXMnLCByZXN1bHRzLm1vZGlmaWVkLmpvaW4oJywgJykpLFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc3VsdHMucmVtb3ZlZC5sZW5ndGgpIHtcbiAgICAgICAgICB0aGlzLnByb3BzLmFkZFN1Y2Nlc3NUb2FzdChcbiAgICAgICAgICAgIHQoJ1JlbW92ZWQgY29sdW1uczogJXMnLCByZXN1bHRzLnJlbW92ZWQuam9pbignLCAnKSksXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocmVzdWx0cy5hZGRlZC5sZW5ndGgpIHtcbiAgICAgICAgICB0aGlzLnByb3BzLmFkZFN1Y2Nlc3NUb2FzdChcbiAgICAgICAgICAgIHQoJ05ldyBjb2x1bW5zIGFkZGVkOiAlcycsIHJlc3VsdHMuYWRkZWQuam9pbignLCAnKSksXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnByb3BzLmFkZFN1Y2Nlc3NUb2FzdCh0KCdNZXRhZGF0YSBoYXMgYmVlbiBzeW5jZWQnKSk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBtZXRhZGF0YUxvYWRpbmc6IGZhbHNlIH0pO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChyZXNwb25zZSA9PlxuICAgICAgICBnZXRDbGllbnRFcnJvck9iamVjdChyZXNwb25zZSkudGhlbigoeyBlcnJvciwgc3RhdHVzVGV4dCB9KSA9PiB7XG4gICAgICAgICAgdGhpcy5wcm9wcy5hZGREYW5nZXJUb2FzdChcbiAgICAgICAgICAgIGVycm9yIHx8IHN0YXR1c1RleHQgfHwgdCgnQW4gZXJyb3IgaGFzIG9jY3VycmVkJyksXG4gICAgICAgICAgKTtcbiAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgbWV0YWRhdGFMb2FkaW5nOiBmYWxzZSB9KTtcbiAgICAgICAgfSksXG4gICAgICApO1xuICB9XG5cbiAgZmluZER1cGxpY2F0ZXMoYXJyLCBhY2Nlc3Nvcikge1xuICAgIGNvbnN0IHNlZW4gPSB7fTtcbiAgICBjb25zdCBkdXBzID0gW107XG4gICAgYXJyLmZvckVhY2gob2JqID0+IHtcbiAgICAgIGNvbnN0IGl0ZW0gPSBhY2Nlc3NvcihvYmopO1xuICAgICAgaWYgKGl0ZW0gaW4gc2Vlbikge1xuICAgICAgICBkdXBzLnB1c2goaXRlbSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZWVuW2l0ZW1dID0gbnVsbDtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gZHVwcztcbiAgfVxuXG4gIHZhbGlkYXRlKGNhbGxiYWNrKSB7XG4gICAgbGV0IGVycm9ycyA9IFtdO1xuICAgIGxldCBkdXBzO1xuICAgIGNvbnN0IHsgZGF0YXNvdXJjZSB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIC8vIExvb2tpbmcgZm9yIGR1cGxpY2F0ZSBjb2x1bW5fbmFtZVxuICAgIGR1cHMgPSB0aGlzLmZpbmREdXBsaWNhdGVzKGRhdGFzb3VyY2UuY29sdW1ucywgb2JqID0+IG9iai5jb2x1bW5fbmFtZSk7XG4gICAgZXJyb3JzID0gZXJyb3JzLmNvbmNhdChcbiAgICAgIGR1cHMubWFwKG5hbWUgPT4gdCgnQ29sdW1uIG5hbWUgWyVzXSBpcyBkdXBsaWNhdGVkJywgbmFtZSkpLFxuICAgICk7XG5cbiAgICAvLyBMb29raW5nIGZvciBkdXBsaWNhdGUgbWV0cmljX25hbWVcbiAgICBkdXBzID0gdGhpcy5maW5kRHVwbGljYXRlcyhkYXRhc291cmNlLm1ldHJpY3MsIG9iaiA9PiBvYmoubWV0cmljX25hbWUpO1xuICAgIGVycm9ycyA9IGVycm9ycy5jb25jYXQoXG4gICAgICBkdXBzLm1hcChuYW1lID0+IHQoJ01ldHJpYyBuYW1lIFslc10gaXMgZHVwbGljYXRlZCcsIG5hbWUpKSxcbiAgICApO1xuXG4gICAgLy8gTWFraW5nIHN1cmUgY2FsY3VsYXRlZENvbHVtbnMgaGF2ZSBhbiBleHByZXNzaW9uIGRlZmluZWRcbiAgICBjb25zdCBub0ZpbHRlckNhbGNDb2xzID0gdGhpcy5zdGF0ZS5jYWxjdWxhdGVkQ29sdW1ucy5maWx0ZXIoXG4gICAgICBjb2wgPT4gIWNvbC5leHByZXNzaW9uICYmICFjb2wuanNvbixcbiAgICApO1xuICAgIGVycm9ycyA9IGVycm9ycy5jb25jYXQoXG4gICAgICBub0ZpbHRlckNhbGNDb2xzLm1hcChjb2wgPT5cbiAgICAgICAgdCgnQ2FsY3VsYXRlZCBjb2x1bW4gWyVzXSByZXF1aXJlcyBhbiBleHByZXNzaW9uJywgY29sLmNvbHVtbl9uYW1lKSxcbiAgICAgICksXG4gICAgKTtcblxuICAgIC8vIHZhbGlkYXRlIGN1cnJlbmN5IGNvZGVcbiAgICB0cnkge1xuICAgICAgdGhpcy5zdGF0ZS5kYXRhc291cmNlLm1ldHJpY3M/LmZvckVhY2goXG4gICAgICAgIG1ldHJpYyA9PlxuICAgICAgICAgIG1ldHJpYy5jdXJyZW5jeT8uc3ltYm9sICYmXG4gICAgICAgICAgbmV3IEludGwuTnVtYmVyRm9ybWF0KCdlbi1VUycsIHtcbiAgICAgICAgICAgIHN0eWxlOiAnY3VycmVuY3knLFxuICAgICAgICAgICAgY3VycmVuY3k6IG1ldHJpYy5jdXJyZW5jeS5zeW1ib2wsXG4gICAgICAgICAgfSksXG4gICAgICApO1xuICAgIH0gY2F0Y2gge1xuICAgICAgZXJyb3JzID0gZXJyb3JzLmNvbmNhdChbdCgnSW52YWxpZCBjdXJyZW5jeSBjb2RlIGluIHNhdmVkIG1ldHJpY3MnKV0pO1xuICAgIH1cblxuICAgIHRoaXMuc2V0U3RhdGUoeyBlcnJvcnMgfSwgY2FsbGJhY2spO1xuICB9XG5cbiAgaGFuZGxlVGFiU2VsZWN0KGFjdGl2ZVRhYktleSkge1xuICAgIHRoaXMuc2V0U3RhdGUoeyBhY3RpdmVUYWJLZXkgfSk7XG4gIH1cblxuICBzb3J0TWV0cmljcyhtZXRyaWNzKSB7XG4gICAgcmV0dXJuIG1ldHJpY3Muc29ydCgoeyBpZDogYSB9LCB7IGlkOiBiIH0pID0+IGIgLSBhKTtcbiAgfVxuXG4gIHJlbmRlclNldHRpbmdzRmllbGRzZXQoKSB7XG4gICAgY29uc3QgeyBkYXRhc291cmNlIH0gPSB0aGlzLnN0YXRlO1xuICAgIHJldHVybiAoXG4gICAgICA8RmllbGRzZXRcbiAgICAgICAgdGl0bGU9e3QoJ0Jhc2ljJyl9XG4gICAgICAgIGl0ZW09e2RhdGFzb3VyY2V9XG4gICAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uRGF0YXNvdXJjZUNoYW5nZX1cbiAgICAgID5cbiAgICAgICAgPEZpZWxkXG4gICAgICAgICAgZmllbGRLZXk9XCJkZXNjcmlwdGlvblwiXG4gICAgICAgICAgbGFiZWw9e3QoJ0Rlc2NyaXB0aW9uJyl9XG4gICAgICAgICAgY29udHJvbD17XG4gICAgICAgICAgICA8VGV4dEFyZWFDb250cm9sXG4gICAgICAgICAgICAgIGxhbmd1YWdlPVwibWFya2Rvd25cIlxuICAgICAgICAgICAgICBvZmZlckVkaXRJbk1vZGFsPXtmYWxzZX1cbiAgICAgICAgICAgICAgcmVzaXplPVwidmVydGljYWxcIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICB9XG4gICAgICAgIC8+XG4gICAgICAgIDxGaWVsZFxuICAgICAgICAgIGZpZWxkS2V5PVwiZGVmYXVsdF9lbmRwb2ludFwiXG4gICAgICAgICAgbGFiZWw9e3QoJ0RlZmF1bHQgVVJMJyl9XG4gICAgICAgICAgZGVzY3JpcHRpb249e3QoXG4gICAgICAgICAgICAnRGVmYXVsdCBVUkwgdG8gcmVkaXJlY3QgdG8gd2hlbiBhY2Nlc3NpbmcgZnJvbSB0aGUgZGF0YXNldCBsaXN0IHBhZ2UnLFxuICAgICAgICAgICl9XG4gICAgICAgICAgY29udHJvbD17PFRleHRDb250cm9sIGNvbnRyb2xJZD1cImRlZmF1bHRfZW5kcG9pbnRcIiAvPn1cbiAgICAgICAgLz5cbiAgICAgICAgPEZpZWxkXG4gICAgICAgICAgaW5saW5lXG4gICAgICAgICAgZmllbGRLZXk9XCJmaWx0ZXJfc2VsZWN0X2VuYWJsZWRcIlxuICAgICAgICAgIGxhYmVsPXt0KCdBdXRvY29tcGxldGUgZmlsdGVycycpfVxuICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KCdXaGV0aGVyIHRvIHBvcHVsYXRlIGF1dG9jb21wbGV0ZSBmaWx0ZXJzIG9wdGlvbnMnKX1cbiAgICAgICAgICBjb250cm9sPXs8Q2hlY2tib3hDb250cm9sIC8+fVxuICAgICAgICAvPlxuICAgICAgICB7dGhpcy5zdGF0ZS5pc1NxbGEgJiYgKFxuICAgICAgICAgIDxGaWVsZFxuICAgICAgICAgICAgZmllbGRLZXk9XCJmZXRjaF92YWx1ZXNfcHJlZGljYXRlXCJcbiAgICAgICAgICAgIGxhYmVsPXt0KCdBdXRvY29tcGxldGUgcXVlcnkgcHJlZGljYXRlJyl9XG4gICAgICAgICAgICBkZXNjcmlwdGlvbj17dChcbiAgICAgICAgICAgICAgJ1doZW4gdXNpbmcgXCJBdXRvY29tcGxldGUgZmlsdGVyc1wiLCB0aGlzIGNhbiBiZSB1c2VkIHRvIGltcHJvdmUgcGVyZm9ybWFuY2UgJyArXG4gICAgICAgICAgICAgICAgJ29mIHRoZSBxdWVyeSBmZXRjaGluZyB0aGUgdmFsdWVzLiBVc2UgdGhpcyBvcHRpb24gdG8gYXBwbHkgYSAnICtcbiAgICAgICAgICAgICAgICAncHJlZGljYXRlIChXSEVSRSBjbGF1c2UpIHRvIHRoZSBxdWVyeSBzZWxlY3RpbmcgdGhlIGRpc3RpbmN0ICcgK1xuICAgICAgICAgICAgICAgICd2YWx1ZXMgZnJvbSB0aGUgdGFibGUuIFR5cGljYWxseSB0aGUgaW50ZW50IHdvdWxkIGJlIHRvIGxpbWl0IHRoZSBzY2FuICcgK1xuICAgICAgICAgICAgICAgICdieSBhcHBseWluZyBhIHJlbGF0aXZlIHRpbWUgZmlsdGVyIG9uIGEgcGFydGl0aW9uZWQgb3IgaW5kZXhlZCB0aW1lLXJlbGF0ZWQgZmllbGQuJyxcbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICBjb250cm9sPXtcbiAgICAgICAgICAgICAgPFRleHRBcmVhQ29udHJvbFxuICAgICAgICAgICAgICAgIGxhbmd1YWdlPVwic3FsXCJcbiAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJmZXRjaF92YWx1ZXNfcHJlZGljYXRlXCJcbiAgICAgICAgICAgICAgICBtaW5MaW5lcz17NX1cbiAgICAgICAgICAgICAgICByZXNpemU9XCJ2ZXJ0aWNhbFwiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgICAge3RoaXMuc3RhdGUuaXNTcWxhICYmIChcbiAgICAgICAgICA8RmllbGRcbiAgICAgICAgICAgIGZpZWxkS2V5PVwiZXh0cmFcIlxuICAgICAgICAgICAgbGFiZWw9e3QoJ0V4dHJhJyl9XG4gICAgICAgICAgICBkZXNjcmlwdGlvbj17dChcbiAgICAgICAgICAgICAgJ0V4dHJhIGRhdGEgdG8gc3BlY2lmeSB0YWJsZSBtZXRhZGF0YS4gQ3VycmVudGx5IHN1cHBvcnRzICcgK1xuICAgICAgICAgICAgICAgICdtZXRhZGF0YSBvZiB0aGUgZm9ybWF0OiBgeyBcImNlcnRpZmljYXRpb25cIjogeyBcImNlcnRpZmllZF9ieVwiOiAnICtcbiAgICAgICAgICAgICAgICAnXCJEYXRhIFBsYXRmb3JtIFRlYW1cIiwgXCJkZXRhaWxzXCI6IFwiVGhpcyB0YWJsZSBpcyB0aGUgc291cmNlIG9mIHRydXRoLlwiICcgK1xuICAgICAgICAgICAgICAgICd9LCBcIndhcm5pbmdfbWFya2Rvd25cIjogXCJUaGlzIGlzIGEgd2FybmluZy5cIiB9YC4nLFxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIGNvbnRyb2w9e1xuICAgICAgICAgICAgICA8VGV4dEFyZWFDb250cm9sXG4gICAgICAgICAgICAgICAgY29udHJvbElkPVwiZXh0cmFcIlxuICAgICAgICAgICAgICAgIGxhbmd1YWdlPVwianNvblwiXG4gICAgICAgICAgICAgICAgb2ZmZXJFZGl0SW5Nb2RhbD17ZmFsc2V9XG4gICAgICAgICAgICAgICAgcmVzaXplPVwidmVydGljYWxcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICAgIDxPd25lcnNTZWxlY3RvclxuICAgICAgICAgIGRhdGFzb3VyY2U9e2RhdGFzb3VyY2V9XG4gICAgICAgICAgb25DaGFuZ2U9e25ld093bmVycyA9PiB7XG4gICAgICAgICAgICB0aGlzLm9uRGF0YXNvdXJjZUNoYW5nZSh7IC4uLmRhdGFzb3VyY2UsIG93bmVyczogbmV3T3duZXJzIH0pO1xuICAgICAgICAgIH19XG4gICAgICAgIC8+XG4gICAgICA8L0ZpZWxkc2V0PlxuICAgICk7XG4gIH1cblxuICByZW5kZXJBZHZhbmNlZEZpZWxkc2V0KCkge1xuICAgIGNvbnN0IHsgZGF0YXNvdXJjZSB9ID0gdGhpcy5zdGF0ZTtcbiAgICByZXR1cm4gKFxuICAgICAgPEZpZWxkc2V0XG4gICAgICAgIHRpdGxlPXt0KCdBZHZhbmNlZCcpfVxuICAgICAgICBpdGVtPXtkYXRhc291cmNlfVxuICAgICAgICBvbkNoYW5nZT17dGhpcy5vbkRhdGFzb3VyY2VDaGFuZ2V9XG4gICAgICA+XG4gICAgICAgIDxGaWVsZFxuICAgICAgICAgIGZpZWxkS2V5PVwiY2FjaGVfdGltZW91dFwiXG4gICAgICAgICAgbGFiZWw9e3QoJ0NhY2hlIHRpbWVvdXQnKX1cbiAgICAgICAgICBkZXNjcmlwdGlvbj17dChcbiAgICAgICAgICAgICdUaGUgZHVyYXRpb24gb2YgdGltZSBpbiBzZWNvbmRzIGJlZm9yZSB0aGUgY2FjaGUgaXMgaW52YWxpZGF0ZWQuIFNldCB0byAtMSB0byBieXBhc3MgdGhlIGNhY2hlLicsXG4gICAgICAgICAgKX1cbiAgICAgICAgICBjb250cm9sPXs8VGV4dENvbnRyb2wgY29udHJvbElkPVwiY2FjaGVfdGltZW91dFwiIC8+fVxuICAgICAgICAvPlxuICAgICAgICA8RmllbGRcbiAgICAgICAgICBmaWVsZEtleT1cIm9mZnNldFwiXG4gICAgICAgICAgbGFiZWw9e3QoJ0hvdXJzIG9mZnNldCcpfVxuICAgICAgICAgIGNvbnRyb2w9ezxUZXh0Q29udHJvbCBjb250cm9sSWQ9XCJvZmZzZXRcIiAvPn1cbiAgICAgICAgICBkZXNjcmlwdGlvbj17dChcbiAgICAgICAgICAgICdUaGUgbnVtYmVyIG9mIGhvdXJzLCBuZWdhdGl2ZSBvciBwb3NpdGl2ZSwgdG8gc2hpZnQgdGhlIHRpbWUgY29sdW1uLiBUaGlzIGNhbiBiZSB1c2VkIHRvIG1vdmUgVVRDIHRpbWUgdG8gbG9jYWwgdGltZS4nLFxuICAgICAgICAgICl9XG4gICAgICAgIC8+XG4gICAgICAgIHt0aGlzLnN0YXRlLmlzU3FsYSAmJiAoXG4gICAgICAgICAgPEZpZWxkXG4gICAgICAgICAgICBmaWVsZEtleT1cInRlbXBsYXRlX3BhcmFtc1wiXG4gICAgICAgICAgICBsYWJlbD17dCgnVGVtcGxhdGUgcGFyYW1ldGVycycpfVxuICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoXG4gICAgICAgICAgICAgICdBIHNldCBvZiBwYXJhbWV0ZXJzIHRoYXQgYmVjb21lIGF2YWlsYWJsZSBpbiB0aGUgcXVlcnkgdXNpbmcgSmluamEgdGVtcGxhdGluZyBzeW50YXgnLFxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIGNvbnRyb2w9ezxUZXh0Q29udHJvbCBjb250cm9sSWQ9XCJ0ZW1wbGF0ZV9wYXJhbXNcIiAvPn1cbiAgICAgICAgICAvPlxuICAgICAgICApfVxuICAgICAgPC9GaWVsZHNldD5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyU3BhdGlhbFRhYigpIHtcbiAgICBjb25zdCB7IGRhdGFzb3VyY2UgfSA9IHRoaXMuc3RhdGU7XG4gICAgY29uc3QgeyBzcGF0aWFscywgYWxsX2NvbHM6IGFsbENvbHMgfSA9IGRhdGFzb3VyY2U7XG4gICAgcmV0dXJuIChcbiAgICAgIDxUYWJzLlRhYlBhbmVcbiAgICAgICAgdGFiPXs8Q29sbGVjdGlvblRhYlRpdGxlIGNvbGxlY3Rpb249e3NwYXRpYWxzfSB0aXRsZT17dCgnU3BhdGlhbCcpfSAvPn1cbiAgICAgICAga2V5PXs0fVxuICAgICAgPlxuICAgICAgICA8Q29sbGVjdGlvblRhYmxlXG4gICAgICAgICAgdGFibGVDb2x1bW5zPXtbJ25hbWUnLCAnY29uZmlnJ119XG4gICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25EYXRhc291cmNlUHJvcENoYW5nZS5iaW5kKHRoaXMsICdzcGF0aWFscycpfVxuICAgICAgICAgIGl0ZW1HZW5lcmF0b3I9eygpID0+ICh7XG4gICAgICAgICAgICBuYW1lOiB0KCc8bmV3IHNwYXRpYWw+JyksXG4gICAgICAgICAgICB0eXBlOiB0KCc8bm8gdHlwZT4nKSxcbiAgICAgICAgICAgIGNvbmZpZzogbnVsbCxcbiAgICAgICAgICB9KX1cbiAgICAgICAgICBjb2xsZWN0aW9uPXtzcGF0aWFsc31cbiAgICAgICAgICBhbGxvd0RlbGV0ZXNcbiAgICAgICAgICBpdGVtUmVuZGVyZXJzPXt7XG4gICAgICAgICAgICBuYW1lOiAoZCwgb25DaGFuZ2UpID0+IChcbiAgICAgICAgICAgICAgPEVkaXRhYmxlVGl0bGUgY2FuRWRpdCB0aXRsZT17ZH0gb25TYXZlVGl0bGU9e29uQ2hhbmdlfSAvPlxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIGNvbmZpZzogKHYsIG9uQ2hhbmdlKSA9PiAoXG4gICAgICAgICAgICAgIDxTcGF0aWFsQ29udHJvbCB2YWx1ZT17dn0gb25DaGFuZ2U9e29uQ2hhbmdlfSBjaG9pY2VzPXthbGxDb2xzfSAvPlxuICAgICAgICAgICAgKSxcbiAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICAgPC9UYWJzLlRhYlBhbmU+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlclNvdXJjZUZpZWxkc2V0KHRoZW1lKSB7XG4gICAgY29uc3QgeyBkYXRhc291cmNlIH0gPSB0aGlzLnN0YXRlO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICB7dGhpcy5hbGxvd0VkaXRTb3VyY2UgJiYgKFxuICAgICAgICAgIDxFZGl0TG9ja0NvbnRhaW5lcj5cbiAgICAgICAgICAgIDxzcGFuIHJvbGU9XCJidXR0b25cIiB0YWJJbmRleD17MH0gb25DbGljaz17dGhpcy5vbkNoYW5nZUVkaXRNb2RlfT5cbiAgICAgICAgICAgICAge3RoaXMuc3RhdGUuaXNFZGl0TW9kZSA/IChcbiAgICAgICAgICAgICAgICA8SWNvbnMuTG9ja1VubG9ja2VkIGljb25Db2xvcj17dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5iYXNlfSAvPlxuICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgIDxJY29ucy5Mb2NrTG9ja2VkIGljb25Db2xvcj17dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5iYXNlfSAvPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgeyF0aGlzLnN0YXRlLmlzRWRpdE1vZGUgJiYgKFxuICAgICAgICAgICAgICA8ZGl2Pnt0KCdDbGljayB0aGUgbG9jayB0byBtYWtlIGNoYW5nZXMuJyl9PC9kaXY+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAge3RoaXMuc3RhdGUuaXNFZGl0TW9kZSAmJiAoXG4gICAgICAgICAgICAgIDxkaXY+e3QoJ0NsaWNrIHRoZSBsb2NrIHRvIHByZXZlbnQgZnVydGhlciBjaGFuZ2VzLicpfTwvZGl2PlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L0VkaXRMb2NrQ29udGFpbmVyPlxuICAgICAgICApfVxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm0tbC0xMCBtLXQtMjAgbS1iLTEwXCI+XG4gICAgICAgICAge0RBVEFTT1VSQ0VfVFlQRVNfQVJSLm1hcCh0eXBlID0+IChcbiAgICAgICAgICAgIDxSYWRpb1xuICAgICAgICAgICAgICBrZXk9e3R5cGUua2V5fVxuICAgICAgICAgICAgICB2YWx1ZT17dHlwZS5rZXl9XG4gICAgICAgICAgICAgIGlubGluZVxuICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5vbkRhdGFzb3VyY2VUeXBlQ2hhbmdlLmJpbmQodGhpcywgdHlwZS5rZXkpfVxuICAgICAgICAgICAgICBjaGVja2VkPXt0aGlzLnN0YXRlLmRhdGFzb3VyY2VUeXBlID09PSB0eXBlLmtleX1cbiAgICAgICAgICAgICAgZGlzYWJsZWQ9eyF0aGlzLnN0YXRlLmlzRWRpdE1vZGV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHt0eXBlLmxhYmVsfVxuICAgICAgICAgICAgPC9SYWRpbz5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxociAvPlxuICAgICAgICA8RmllbGRzZXQgaXRlbT17ZGF0YXNvdXJjZX0gb25DaGFuZ2U9e3RoaXMub25EYXRhc291cmNlQ2hhbmdlfSBjb21wYWN0PlxuICAgICAgICAgIHt0aGlzLnN0YXRlLmRhdGFzb3VyY2VUeXBlID09PSBEQVRBU09VUkNFX1RZUEVTLnZpcnR1YWwua2V5ICYmIChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmlzU3FsYSAmJiAoXG4gICAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICAgIDxDb2wgeHM9ezI0fSBtZD17MTJ9PlxuICAgICAgICAgICAgICAgICAgICA8RmllbGRcbiAgICAgICAgICAgICAgICAgICAgICBmaWVsZEtleT1cImRhdGFiYXNlU2VsZWN0b3JcIlxuICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXt0KCd2aXJ0dWFsJyl9XG4gICAgICAgICAgICAgICAgICAgICAgY29udHJvbD17XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNzcz17eyBtYXJnaW5Ub3A6IDggfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxEYXRhYmFzZVNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGI9e2RhdGFzb3VyY2U/LmRhdGFiYXNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjaGVtYT17ZGF0YXNvdXJjZS5zY2hlbWF9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TY2hlbWFDaGFuZ2U9e3NjaGVtYSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5pc0VkaXRNb2RlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRGF0YXNvdXJjZVByb3BDaGFuZ2UoJ3NjaGVtYScsIHNjaGVtYSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25EYkNoYW5nZT17ZGF0YWJhc2UgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUuaXNFZGl0TW9kZSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkRhdGFzb3VyY2VQcm9wQ2hhbmdlKCdkYXRhYmFzZScsIGRhdGFiYXNlKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtTW9kZT17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlRXJyb3I9e3RoaXMucHJvcHMuYWRkRGFuZ2VyVG9hc3R9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyF0aGlzLnN0YXRlLmlzRWRpdE1vZGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY3NzPXt7IHdpZHRoOiAnY2FsYygxMDAlIC0gMzRweCknLCBtYXJnaW5Ub3A6IC0xNiB9fT5cbiAgICAgICAgICAgICAgICAgICAgICA8RmllbGRcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkS2V5PVwidGFibGVfbmFtZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17dCgnRGF0YXNldCBuYW1lJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sPXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwidGFibGVfbmFtZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RhYmxlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub25EYXRhc291cmNlUHJvcENoYW5nZSgndGFibGVfbmFtZScsIHRhYmxlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0KCdEYXRhc2V0IG5hbWUnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17IXRoaXMuc3RhdGUuaXNFZGl0TW9kZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvQ29sPlxuICAgICAgICAgICAgICAgICAgPEZpZWxkXG4gICAgICAgICAgICAgICAgICAgIGZpZWxkS2V5PVwic3FsXCJcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e3QoJ1NRTCcpfVxuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbj17dChcbiAgICAgICAgICAgICAgICAgICAgICAnV2hlbiBzcGVjaWZ5aW5nIFNRTCwgdGhlIGRhdGFzb3VyY2UgYWN0cyBhcyBhIHZpZXcuICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJ1N1cGVyc2V0IHdpbGwgdXNlIHRoaXMgc3RhdGVtZW50IGFzIGEgc3VicXVlcnkgd2hpbGUgZ3JvdXBpbmcgYW5kIGZpbHRlcmluZyAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICdvbiB0aGUgZ2VuZXJhdGVkIHBhcmVudCBxdWVyaWVzLicsXG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xuICAgICAgICAgICAgICAgICAgICAgIDxUZXh0QXJlYUNvbnRyb2xcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlPVwic3FsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZmVyRWRpdEluTW9kYWw9e2ZhbHNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgbWluTGluZXM9ezIwfVxuICAgICAgICAgICAgICAgICAgICAgICAgbWF4TGluZXM9ezIwfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyF0aGlzLnN0YXRlLmlzRWRpdE1vZGV9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNpemU9XCJib3RoXCJcbiAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7dGhpcy5zdGF0ZS5kYXRhc291cmNlVHlwZSA9PT0gREFUQVNPVVJDRV9UWVBFUy5waHlzaWNhbC5rZXkgJiYgKFxuICAgICAgICAgICAgPENvbCB4cz17MjR9IG1kPXsxMn0+XG4gICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmlzU3FsYSAmJiAoXG4gICAgICAgICAgICAgICAgPEZpZWxkXG4gICAgICAgICAgICAgICAgICBmaWVsZEtleT1cInRhYmxlU2VsZWN0b3JcIlxuICAgICAgICAgICAgICAgICAgbGFiZWw9e3QoJ1BoeXNpY2FsJyl9XG4gICAgICAgICAgICAgICAgICBjb250cm9sPXtcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjc3M9e3sgbWFyZ2luVG9wOiA4IH19PlxuICAgICAgICAgICAgICAgICAgICAgIDxUYWJsZVNlbGVjdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhcmFibGU9e2ZhbHNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2U9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uZGF0YXNvdXJjZS5kYXRhYmFzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2VfbmFtZTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhc291cmNlLmRhdGFiYXNlPy5kYXRhYmFzZV9uYW1lIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YXNvdXJjZS5kYXRhYmFzZT8ubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICBkYklkPXtkYXRhc291cmNlLmRhdGFiYXNlPy5pZH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUVycm9yPXt0aGlzLnByb3BzLmFkZERhbmdlclRvYXN0fVxuICAgICAgICAgICAgICAgICAgICAgICAgc2NoZW1hPXtkYXRhc291cmNlLnNjaGVtYX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNxbExhYk1vZGU9e2ZhbHNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGFibGVWYWx1ZT17ZGF0YXNvdXJjZS50YWJsZV9uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25TY2hlbWFDaGFuZ2U9e1xuICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLmlzRWRpdE1vZGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHNjaGVtYSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRGF0YXNvdXJjZVByb3BDaGFuZ2UoJ3NjaGVtYScsIHNjaGVtYSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25EYkNoYW5nZT17XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUuaXNFZGl0TW9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gZGF0YWJhc2UgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkRhdGFzb3VyY2VQcm9wQ2hhbmdlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkYXRhYmFzZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25UYWJsZVNlbGVjdENoYW5nZT17XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUuaXNFZGl0TW9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gdGFibGUgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkRhdGFzb3VyY2VQcm9wQ2hhbmdlKCd0YWJsZV9uYW1lJywgdGFibGUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRPbmx5PXshdGhpcy5zdGF0ZS5pc0VkaXRNb2RlfVxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoXG4gICAgICAgICAgICAgICAgICAgICdUaGUgcG9pbnRlciB0byBhIHBoeXNpY2FsIHRhYmxlIChvciB2aWV3KS4gS2VlcCBpbiBtaW5kIHRoYXQgdGhlIGNoYXJ0IGlzICcgK1xuICAgICAgICAgICAgICAgICAgICAgICdhc3NvY2lhdGVkIHRvIHRoaXMgU3VwZXJzZXQgbG9naWNhbCB0YWJsZSwgYW5kIHRoaXMgbG9naWNhbCB0YWJsZSBwb2ludHMgJyArXG4gICAgICAgICAgICAgICAgICAgICAgJ3RoZSBwaHlzaWNhbCB0YWJsZSByZWZlcmVuY2VkIGhlcmUuJyxcbiAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvQ29sPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvRmllbGRzZXQ+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyRXJyb3JzKCkge1xuICAgIGlmICh0aGlzLnN0YXRlLmVycm9ycy5sZW5ndGggPiAwKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8QWxlcnRcbiAgICAgICAgICBjc3M9e3RoZW1lID0+ICh7IG1hcmdpbkJvdHRvbTogdGhlbWUuZ3JpZFVuaXQgKiA0IH0pfVxuICAgICAgICAgIHR5cGU9XCJlcnJvclwiXG4gICAgICAgICAgbWVzc2FnZT17XG4gICAgICAgICAgICA8PlxuICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5lcnJvcnMubWFwKGVyciA9PiAoXG4gICAgICAgICAgICAgICAgPGRpdiBrZXk9e2Vycn0+e2Vycn08L2Rpdj5cbiAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8Lz5cbiAgICAgICAgICB9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJlbmRlck1ldHJpY0NvbGxlY3Rpb24oKSB7XG4gICAgY29uc3QgeyBkYXRhc291cmNlIH0gPSB0aGlzLnN0YXRlO1xuICAgIGNvbnN0IHsgbWV0cmljcyB9ID0gZGF0YXNvdXJjZTtcbiAgICBjb25zdCBzb3J0ZWRNZXRyaWNzID0gbWV0cmljcz8ubGVuZ3RoID8gdGhpcy5zb3J0TWV0cmljcyhtZXRyaWNzKSA6IFtdO1xuICAgIHJldHVybiAoXG4gICAgICA8Q29sbGVjdGlvblRhYmxlXG4gICAgICAgIHRhYmxlQ29sdW1ucz17WydtZXRyaWNfbmFtZScsICd2ZXJib3NlX25hbWUnLCAnZXhwcmVzc2lvbiddfVxuICAgICAgICBzb3J0Q29sdW1ucz17WydtZXRyaWNfbmFtZScsICd2ZXJib3NlX25hbWUnLCAnZXhwcmVzc2lvbiddfVxuICAgICAgICBjb2x1bW5MYWJlbHM9e3tcbiAgICAgICAgICBtZXRyaWNfbmFtZTogdCgnTWV0cmljIEtleScpLFxuICAgICAgICAgIHZlcmJvc2VfbmFtZTogdCgnTGFiZWwnKSxcbiAgICAgICAgICBleHByZXNzaW9uOiB0KCdTUUwgZXhwcmVzc2lvbicpLFxuICAgICAgICB9fVxuICAgICAgICBjb2x1bW5MYWJlbFRvb2x0aXBzPXt7XG4gICAgICAgICAgbWV0cmljX25hbWU6IHQoXG4gICAgICAgICAgICAnVGhpcyBmaWVsZCBpcyB1c2VkIGFzIGEgdW5pcXVlIGlkZW50aWZpZXIgdG8gYXR0YWNoICcgK1xuICAgICAgICAgICAgICAndGhlIG1ldHJpYyB0byBjaGFydHMuIEl0IGlzIGFsc28gdXNlZCBhcyB0aGUgYWxpYXMgaW4gdGhlICcgK1xuICAgICAgICAgICAgICAnU1FMIHF1ZXJ5LicsXG4gICAgICAgICAgKSxcbiAgICAgICAgfX1cbiAgICAgICAgZXhwYW5kRmllbGRzZXQ9e1xuICAgICAgICAgIDxGb3JtQ29udGFpbmVyPlxuICAgICAgICAgICAgPEZpZWxkc2V0IGNvbXBhY3Q+XG4gICAgICAgICAgICAgIDxGaWVsZFxuICAgICAgICAgICAgICAgIGZpZWxkS2V5PVwiZGVzY3JpcHRpb25cIlxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdEZXNjcmlwdGlvbicpfVxuICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xuICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xJZD1cImRlc2NyaXB0aW9uXCJcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e3QoJ0Rlc2NyaXB0aW9uJyl9XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPEZpZWxkXG4gICAgICAgICAgICAgICAgZmllbGRLZXk9XCJkM2Zvcm1hdFwiXG4gICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0QzIGZvcm1hdCcpfVxuICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xuICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sIGNvbnRyb2xJZD1cImQzZm9ybWF0XCIgcGxhY2Vob2xkZXI9XCIleS8lbS8lZFwiIC8+XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8RmllbGRcbiAgICAgICAgICAgICAgICBmaWVsZEtleT1cImN1cnJlbmN5XCJcbiAgICAgICAgICAgICAgICBsYWJlbD17dCgnTWV0cmljIGN1cnJlbmN5Jyl9XG4gICAgICAgICAgICAgICAgY29udHJvbD17PEN1cnJlbmN5Q29udHJvbCBjdXJyZW5jaWVzPXt0aGlzLmN1cnJlbmNpZXN9IC8+fVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8RmllbGRcbiAgICAgICAgICAgICAgICBsYWJlbD17dCgnQ2VydGlmaWVkIGJ5Jyl9XG4gICAgICAgICAgICAgICAgZmllbGRLZXk9XCJjZXJ0aWZpZWRfYnlcIlxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KFxuICAgICAgICAgICAgICAgICAgJ1BlcnNvbiBvciBncm91cCB0aGF0IGhhcyBjZXJ0aWZpZWQgdGhpcyBtZXRyaWMnLFxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgY29udHJvbD17XG4gICAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2xcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiY2VydGlmaWVkX2J5XCJcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e3QoJ0NlcnRpZmllZCBieScpfVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxGaWVsZFxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdDZXJ0aWZpY2F0aW9uIGRldGFpbHMnKX1cbiAgICAgICAgICAgICAgICBmaWVsZEtleT1cImNlcnRpZmljYXRpb25fZGV0YWlsc1wiXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoJ0RldGFpbHMgb2YgdGhlIGNlcnRpZmljYXRpb24nKX1cbiAgICAgICAgICAgICAgICBjb250cm9sPXtcbiAgICAgICAgICAgICAgICAgIDxUZXh0Q29udHJvbFxuICAgICAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJjZXJ0aWZpY2F0aW9uX2RldGFpbHNcIlxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnQ2VydGlmaWNhdGlvbiBkZXRhaWxzJyl9XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPEZpZWxkXG4gICAgICAgICAgICAgICAgbGFiZWw9e3QoJ1dhcm5pbmcnKX1cbiAgICAgICAgICAgICAgICBmaWVsZEtleT1cIndhcm5pbmdfbWFya2Rvd25cIlxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KCdPcHRpb25hbCB3YXJuaW5nIGFib3V0IHVzZSBvZiB0aGlzIG1ldHJpYycpfVxuICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xuICAgICAgICAgICAgICAgICAgPFRleHRBcmVhQ29udHJvbFxuICAgICAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJ3YXJuaW5nX21hcmtkb3duXCJcbiAgICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2U9XCJtYXJrZG93blwiXG4gICAgICAgICAgICAgICAgICAgIG9mZmVyRWRpdEluTW9kYWw9e2ZhbHNlfVxuICAgICAgICAgICAgICAgICAgICByZXNpemU9XCJ2ZXJ0aWNhbFwiXG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvRmllbGRzZXQ+XG4gICAgICAgICAgPC9Gb3JtQ29udGFpbmVyPlxuICAgICAgICB9XG4gICAgICAgIGNvbGxlY3Rpb249e3NvcnRlZE1ldHJpY3N9XG4gICAgICAgIGFsbG93QWRkSXRlbVxuICAgICAgICBvbkNoYW5nZT17dGhpcy5vbkRhdGFzb3VyY2VQcm9wQ2hhbmdlLmJpbmQodGhpcywgJ21ldHJpY3MnKX1cbiAgICAgICAgaXRlbUdlbmVyYXRvcj17KCkgPT4gKHtcbiAgICAgICAgICBtZXRyaWNfbmFtZTogdCgnPG5ldyBtZXRyaWM+JyksXG4gICAgICAgICAgdmVyYm9zZV9uYW1lOiAnJyxcbiAgICAgICAgICBleHByZXNzaW9uOiAnJyxcbiAgICAgICAgfSl9XG4gICAgICAgIGl0ZW1DZWxsUHJvcHM9e3tcbiAgICAgICAgICBleHByZXNzaW9uOiAoKSA9PiAoe1xuICAgICAgICAgICAgd2lkdGg6ICcyNDBweCcsXG4gICAgICAgICAgfSksXG4gICAgICAgIH19XG4gICAgICAgIGl0ZW1SZW5kZXJlcnM9e3tcbiAgICAgICAgICBtZXRyaWNfbmFtZTogKHYsIG9uQ2hhbmdlLCBfLCByZWNvcmQpID0+IChcbiAgICAgICAgICAgIDxGbGV4Um93Q29udGFpbmVyPlxuICAgICAgICAgICAgICB7cmVjb3JkLmlzX2NlcnRpZmllZCAmJiAoXG4gICAgICAgICAgICAgICAgPENlcnRpZmllZEJhZGdlXG4gICAgICAgICAgICAgICAgICBjZXJ0aWZpZWRCeT17cmVjb3JkLmNlcnRpZmllZF9ieX1cbiAgICAgICAgICAgICAgICAgIGRldGFpbHM9e3JlY29yZC5jZXJ0aWZpY2F0aW9uX2RldGFpbHN9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAge3JlY29yZC53YXJuaW5nX21hcmtkb3duICYmIChcbiAgICAgICAgICAgICAgICA8V2FybmluZ0ljb25XaXRoVG9vbHRpcFxuICAgICAgICAgICAgICAgICAgd2FybmluZ01hcmtkb3duPXtyZWNvcmQud2FybmluZ19tYXJrZG93bn1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICA8RWRpdGFibGVUaXRsZSBjYW5FZGl0IHRpdGxlPXt2fSBvblNhdmVUaXRsZT17b25DaGFuZ2V9IC8+XG4gICAgICAgICAgICA8L0ZsZXhSb3dDb250YWluZXI+XG4gICAgICAgICAgKSxcbiAgICAgICAgICB2ZXJib3NlX25hbWU6ICh2LCBvbkNoYW5nZSkgPT4gKFxuICAgICAgICAgICAgPFRleHRDb250cm9sIGNhbkVkaXQgdmFsdWU9e3Z9IG9uQ2hhbmdlPXtvbkNoYW5nZX0gLz5cbiAgICAgICAgICApLFxuICAgICAgICAgIGV4cHJlc3Npb246ICh2LCBvbkNoYW5nZSkgPT4gKFxuICAgICAgICAgICAgPFRleHRBcmVhQ29udHJvbFxuICAgICAgICAgICAgICBjYW5FZGl0XG4gICAgICAgICAgICAgIGluaXRpYWxWYWx1ZT17dn1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgICAgICAgICBleHRyYUNsYXNzZXM9e1snZGF0YXNvdXJjZS1zcWwtZXhwcmVzc2lvbiddfVxuICAgICAgICAgICAgICBsYW5ndWFnZT1cInNxbFwiXG4gICAgICAgICAgICAgIG9mZmVyRWRpdEluTW9kYWw9e2ZhbHNlfVxuICAgICAgICAgICAgICBtaW5MaW5lcz17NX1cbiAgICAgICAgICAgICAgdGV4dEFyZWFTdHlsZXM9e3sgbWluV2lkdGg6ICcyMDBweCcsIG1heFdpZHRoOiAnNDUwcHgnIH19XG4gICAgICAgICAgICAgIHJlc2l6ZT1cImJvdGhcIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiAodiwgb25DaGFuZ2UsIGxhYmVsKSA9PiAoXG4gICAgICAgICAgICA8U3RhY2tlZEZpZWxkXG4gICAgICAgICAgICAgIGxhYmVsPXtsYWJlbH1cbiAgICAgICAgICAgICAgZm9ybUVsZW1lbnQ9ezxUZXh0Q29udHJvbCB2YWx1ZT17dn0gb25DaGFuZ2U9e29uQ2hhbmdlfSAvPn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKSxcbiAgICAgICAgICBkM2Zvcm1hdDogKHYsIG9uQ2hhbmdlLCBsYWJlbCkgPT4gKFxuICAgICAgICAgICAgPFN0YWNrZWRGaWVsZFxuICAgICAgICAgICAgICBsYWJlbD17bGFiZWx9XG4gICAgICAgICAgICAgIGZvcm1FbGVtZW50PXs8VGV4dENvbnRyb2wgdmFsdWU9e3Z9IG9uQ2hhbmdlPXtvbkNoYW5nZX0gLz59XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICksXG4gICAgICAgIH19XG4gICAgICAgIGFsbG93RGVsZXRlc1xuICAgICAgICBzdGlja3lIZWFkZXJcbiAgICAgIC8+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGRhdGFzb3VyY2UsIGFjdGl2ZVRhYktleSB9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCB7IG1ldHJpY3MgfSA9IGRhdGFzb3VyY2U7XG4gICAgY29uc3Qgc29ydGVkTWV0cmljcyA9IG1ldHJpY3M/Lmxlbmd0aCA/IHRoaXMuc29ydE1ldHJpY3MobWV0cmljcykgOiBbXTtcbiAgICBjb25zdCB7IHRoZW1lIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxEYXRhc291cmNlQ29udGFpbmVyPlxuICAgICAgICB7dGhpcy5yZW5kZXJFcnJvcnMoKX1cbiAgICAgICAgPEFsZXJ0XG4gICAgICAgICAgY3NzPXt0aGVtZSA9PiAoeyBtYXJnaW5Cb3R0b206IHRoZW1lLmdyaWRVbml0ICogNCB9KX1cbiAgICAgICAgICB0eXBlPVwid2FybmluZ1wiXG4gICAgICAgICAgbWVzc2FnZT17XG4gICAgICAgICAgICA8PlxuICAgICAgICAgICAgICB7JyAnfVxuICAgICAgICAgICAgICA8c3Ryb25nPnt0KCdCZSBjYXJlZnVsLicpfSA8L3N0cm9uZz5cbiAgICAgICAgICAgICAge3QoXG4gICAgICAgICAgICAgICAgJ0NoYW5naW5nIHRoZXNlIHNldHRpbmdzIHdpbGwgYWZmZWN0IGFsbCBjaGFydHMgdXNpbmcgdGhpcyBkYXRhc2V0LCBpbmNsdWRpbmcgY2hhcnRzIG93bmVkIGJ5IG90aGVyIHBlb3BsZS4nLFxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC8+XG4gICAgICAgICAgfVxuICAgICAgICAvPlxuICAgICAgICA8U3R5bGVkVGFibGVUYWJzXG4gICAgICAgICAgZnVsbFdpZHRoPXtmYWxzZX1cbiAgICAgICAgICBpZD1cInRhYmxlLXRhYnNcIlxuICAgICAgICAgIGRhdGEtdGVzdD1cImVkaXQtZGF0YXNldC10YWJzXCJcbiAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVUYWJTZWxlY3R9XG4gICAgICAgICAgZGVmYXVsdEFjdGl2ZUtleT17YWN0aXZlVGFiS2V5fVxuICAgICAgICA+XG4gICAgICAgICAgPFRhYnMuVGFiUGFuZSBrZXk9ezB9IHRhYj17dCgnU291cmNlJyl9PlxuICAgICAgICAgICAge3RoaXMucmVuZGVyU291cmNlRmllbGRzZXQodGhlbWUpfVxuICAgICAgICAgIDwvVGFicy5UYWJQYW5lPlxuICAgICAgICAgIDxUYWJzLlRhYlBhbmVcbiAgICAgICAgICAgIHRhYj17XG4gICAgICAgICAgICAgIDxDb2xsZWN0aW9uVGFiVGl0bGVcbiAgICAgICAgICAgICAgICBjb2xsZWN0aW9uPXtzb3J0ZWRNZXRyaWNzfVxuICAgICAgICAgICAgICAgIHRpdGxlPXt0KCdNZXRyaWNzJyl9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBrZXk9ezF9XG4gICAgICAgICAgPlxuICAgICAgICAgICAge3RoaXMucmVuZGVyTWV0cmljQ29sbGVjdGlvbigpfVxuICAgICAgICAgIDwvVGFicy5UYWJQYW5lPlxuICAgICAgICAgIDxUYWJzLlRhYlBhbmVcbiAgICAgICAgICAgIHRhYj17XG4gICAgICAgICAgICAgIDxDb2xsZWN0aW9uVGFiVGl0bGVcbiAgICAgICAgICAgICAgICBjb2xsZWN0aW9uPXt0aGlzLnN0YXRlLmRhdGFiYXNlQ29sdW1uc31cbiAgICAgICAgICAgICAgICB0aXRsZT17dCgnQ29sdW1ucycpfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAga2V5PXsyfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxTdHlsZWRDb2x1bW5zVGFiV3JhcHBlcj5cbiAgICAgICAgICAgICAgPENvbHVtbkJ1dHRvbldyYXBwZXI+XG4gICAgICAgICAgICAgICAgPFN0eWxlZEJ1dHRvbldyYXBwZXI+XG4gICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIGJ1dHRvblNpemU9XCJzbWFsbFwiXG4gICAgICAgICAgICAgICAgICAgIGJ1dHRvblN0eWxlPVwidGVydGlhcnlcIlxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLnN5bmNNZXRhZGF0YX1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwic3luYy1mcm9tLXNvdXJjZVwiXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXt0aGlzLnN0YXRlLmlzRWRpdE1vZGV9XG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWRhdGFiYXNlXCIgLz57JyAnfVxuICAgICAgICAgICAgICAgICAgICB7dCgnU3luYyBjb2x1bW5zIGZyb20gc291cmNlJyl9XG4gICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L1N0eWxlZEJ1dHRvbldyYXBwZXI+XG4gICAgICAgICAgICAgIDwvQ29sdW1uQnV0dG9uV3JhcHBlcj5cbiAgICAgICAgICAgICAgPENvbHVtbkNvbGxlY3Rpb25UYWJsZVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNvbHVtbnMtdGFibGVcIlxuICAgICAgICAgICAgICAgIGNvbHVtbnM9e3RoaXMuc3RhdGUuZGF0YWJhc2VDb2x1bW5zfVxuICAgICAgICAgICAgICAgIGRhdGFzb3VyY2U9e2RhdGFzb3VyY2V9XG4gICAgICAgICAgICAgICAgb25Db2x1bW5zQ2hhbmdlPXtkYXRhYmFzZUNvbHVtbnMgPT5cbiAgICAgICAgICAgICAgICAgIHRoaXMuc2V0Q29sdW1ucyh7IGRhdGFiYXNlQ29sdW1ucyB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBvbkRhdGFzb3VyY2VDaGFuZ2U9e3RoaXMub25EYXRhc291cmNlQ2hhbmdlfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5tZXRhZGF0YUxvYWRpbmcgJiYgPExvYWRpbmcgLz59XG4gICAgICAgICAgICA8L1N0eWxlZENvbHVtbnNUYWJXcmFwcGVyPlxuICAgICAgICAgIDwvVGFicy5UYWJQYW5lPlxuICAgICAgICAgIDxUYWJzLlRhYlBhbmVcbiAgICAgICAgICAgIHRhYj17XG4gICAgICAgICAgICAgIDxDb2xsZWN0aW9uVGFiVGl0bGVcbiAgICAgICAgICAgICAgICBjb2xsZWN0aW9uPXt0aGlzLnN0YXRlLmNhbGN1bGF0ZWRDb2x1bW5zfVxuICAgICAgICAgICAgICAgIHRpdGxlPXt0KCdDYWxjdWxhdGVkIGNvbHVtbnMnKX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGtleT17M31cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8U3R5bGVkQ29sdW1uc1RhYldyYXBwZXI+XG4gICAgICAgICAgICAgIDxDb2x1bW5Db2xsZWN0aW9uVGFibGVcbiAgICAgICAgICAgICAgICBjb2x1bW5zPXt0aGlzLnN0YXRlLmNhbGN1bGF0ZWRDb2x1bW5zfVxuICAgICAgICAgICAgICAgIG9uQ29sdW1uc0NoYW5nZT17Y2FsY3VsYXRlZENvbHVtbnMgPT5cbiAgICAgICAgICAgICAgICAgIHRoaXMuc2V0Q29sdW1ucyh7IGNhbGN1bGF0ZWRDb2x1bW5zIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbHVtbkxhYmVsVG9vbHRpcHM9e3tcbiAgICAgICAgICAgICAgICAgIGNvbHVtbl9uYW1lOiB0KFxuICAgICAgICAgICAgICAgICAgICAnVGhpcyBmaWVsZCBpcyB1c2VkIGFzIGEgdW5pcXVlIGlkZW50aWZpZXIgdG8gYXR0YWNoICcgK1xuICAgICAgICAgICAgICAgICAgICAgICd0aGUgY2FsY3VsYXRlZCBkaW1lbnNpb24gdG8gY2hhcnRzLiBJdCBpcyBhbHNvIHVzZWQgJyArXG4gICAgICAgICAgICAgICAgICAgICAgJ2FzIHRoZSBhbGlhcyBpbiB0aGUgU1FMIHF1ZXJ5LicsXG4gICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgb25EYXRhc291cmNlQ2hhbmdlPXt0aGlzLm9uRGF0YXNvdXJjZUNoYW5nZX1cbiAgICAgICAgICAgICAgICBkYXRhc291cmNlPXtkYXRhc291cmNlfVxuICAgICAgICAgICAgICAgIGVkaXRhYmxlQ29sdW1uTmFtZVxuICAgICAgICAgICAgICAgIHNob3dFeHByZXNzaW9uXG4gICAgICAgICAgICAgICAgYWxsb3dBZGRJdGVtXG4gICAgICAgICAgICAgICAgYWxsb3dFZGl0RGF0YVR5cGVcbiAgICAgICAgICAgICAgICBpdGVtR2VuZXJhdG9yPXsoKSA9PiAoe1xuICAgICAgICAgICAgICAgICAgY29sdW1uX25hbWU6IHQoJzxuZXcgY29sdW1uPicpLFxuICAgICAgICAgICAgICAgICAgZmlsdGVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIGdyb3VwYnk6IHRydWUsXG4gICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiB0KCc8ZW50ZXIgU1FMIGV4cHJlc3Npb24gaGVyZT4nKSxcbiAgICAgICAgICAgICAgICAgIF9fZXhwYW5kZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L1N0eWxlZENvbHVtbnNUYWJXcmFwcGVyPlxuICAgICAgICAgIDwvVGFicy5UYWJQYW5lPlxuICAgICAgICAgIDxUYWJzLlRhYlBhbmUga2V5PXs0fSB0YWI9e3QoJ1NldHRpbmdzJyl9PlxuICAgICAgICAgICAgPFJvdyBndXR0ZXI9ezE2fT5cbiAgICAgICAgICAgICAgPENvbCB4cz17MjR9IG1kPXsxMn0+XG4gICAgICAgICAgICAgICAgPEZvcm1Db250YWluZXI+e3RoaXMucmVuZGVyU2V0dGluZ3NGaWVsZHNldCgpfTwvRm9ybUNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgPC9Db2w+XG4gICAgICAgICAgICAgIDxDb2wgeHM9ezI0fSBtZD17MTJ9PlxuICAgICAgICAgICAgICAgIDxGb3JtQ29udGFpbmVyPnt0aGlzLnJlbmRlckFkdmFuY2VkRmllbGRzZXQoKX08L0Zvcm1Db250YWluZXI+XG4gICAgICAgICAgICAgIDwvQ29sPlxuICAgICAgICAgICAgPC9Sb3c+XG4gICAgICAgICAgPC9UYWJzLlRhYlBhbmU+XG4gICAgICAgIDwvU3R5bGVkVGFibGVUYWJzPlxuICAgICAgPC9EYXRhc291cmNlQ29udGFpbmVyPlxuICAgICk7XG4gIH1cbn1cblxuRGF0YXNvdXJjZUVkaXRvci5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5EYXRhc291cmNlRWRpdG9yLnByb3BUeXBlcyA9IHByb3BUeXBlcztcblxuY29uc3QgRGF0YVNvdXJjZUNvbXBvbmVudCA9IHdpdGhUaGVtZShEYXRhc291cmNlRWRpdG9yKTtcblxuZXhwb3J0IGRlZmF1bHQgd2l0aFRvYXN0cyhEYXRhU291cmNlQ29tcG9uZW50KTtcbiJdfQ== */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\n\nclass DatasourceEditor extends react__WEBPACK_IMPORTED_MODULE_1__.PureComponent {\n  constructor(props) {var _props$datasource$met;\n    super(props);\n    this.state = {\n      datasource: {\n        ...props.datasource,\n        owners: props.datasource.owners.map((owner) => ({\n          value: owner.value || owner.id,\n          label: owner.label || `${owner.first_name} ${owner.last_name}`\n        })),\n        metrics: (_props$datasource$met = props.datasource.metrics) == null ? void 0 : _props$datasource$met.map((metric) => {\n          const {\n            certified_by: certifiedByMetric,\n            certification_details: certificationDetails\n          } = metric;\n          const {\n            certification: { details, certified_by: certifiedBy } = {},\n            warning_markdown: warningMarkdown\n          } = JSON.parse(metric.extra || '{}') || {};\n          return {\n            ...metric,\n            certification_details: certificationDetails || details,\n            warning_markdown: warningMarkdown || '',\n            certified_by: certifiedBy || certifiedByMetric\n          };\n        })\n      },\n      errors: [],\n      isSqla:\n      props.datasource.datasource_type === 'table' ||\n      props.datasource.type === 'table',\n      isEditMode: false,\n      databaseColumns: props.datasource.columns.filter((col) => !col.expression),\n      calculatedColumns: props.datasource.columns.filter(\n        (col) => !!col.expression\n      ),\n      metadataLoading: false,\n      activeTabKey: 0,\n      datasourceType: props.datasource.sql ?\n      DATASOURCE_TYPES.virtual.key :\n      DATASOURCE_TYPES.physical.key\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onChangeEditMode = this.onChangeEditMode.bind(this);\n    this.onDatasourcePropChange = this.onDatasourcePropChange.bind(this);\n    this.onDatasourceChange = this.onDatasourceChange.bind(this);\n    this.tableChangeAndSyncMetadata =\n    this.tableChangeAndSyncMetadata.bind(this);\n    this.syncMetadata = this.syncMetadata.bind(this);\n    this.setColumns = this.setColumns.bind(this);\n    this.validateAndChange = this.validateAndChange.bind(this);\n    this.handleTabSelect = this.handleTabSelect.bind(this);\n    this.allowEditSource = !(0,src_featureFlags__WEBPACK_IMPORTED_MODULE_24__.isFeatureEnabled)(\n      _superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.FeatureFlag.DISABLE_DATASET_SOURCE_EDIT\n    );\n    this.currencies = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_35__[\"default\"])(props.currencies).map((currencyCode) => ({\n      value: currencyCode,\n      label: `${(0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_36__.getCurrencySymbol)({\n        symbol: currencyCode\n      })} (${currencyCode})`\n    }));\n  }\n\n  onChange() {\n    // Emptying SQL if \"Physical\" radio button is selected\n    // Currently the logic to know whether the source is\n    // physical or virtual is based on whether SQL is empty or not.\n    const { datasourceType, datasource } = this.state;\n    const sql =\n    datasourceType === DATASOURCE_TYPES.physical.key ? '' : datasource.sql;\n    const newDatasource = {\n      ...this.state.datasource,\n      sql,\n      columns: [...this.state.databaseColumns, ...this.state.calculatedColumns]\n    };\n    this.props.onChange(newDatasource, this.state.errors);\n  }\n\n  onChangeEditMode() {\n    this.props.setIsEditing(!this.state.isEditMode);\n    this.setState((prevState) => ({ isEditMode: !prevState.isEditMode }));\n  }\n\n  onDatasourceChange(datasource, callback) {if (callback === void 0) {callback = this.validateAndChange;}\n    this.setState({ datasource }, callback);\n  }\n\n  onDatasourcePropChange(attr, value) {\n    if (value === undefined) return; // if value is undefined do not update state\n    const datasource = { ...this.state.datasource, [attr]: value };\n    this.setState(\n      (prevState) => ({\n        datasource: { ...prevState.datasource, [attr]: value }\n      }),\n      attr === 'table_name' ?\n      this.onDatasourceChange(datasource, this.tableChangeAndSyncMetadata) :\n      this.onDatasourceChange(datasource, this.validateAndChange)\n    );\n  }\n\n  onDatasourceTypeChange(datasourceType) {\n    this.setState({ datasourceType });\n  }\n\n  setColumns(obj) {\n    // update calculatedColumns or databaseColumns\n    this.setState(obj, this.validateAndChange);\n  }\n\n  validateAndChange() {\n    this.validate(this.onChange);\n  }\n\n  tableChangeAndSyncMetadata() {\n    this.validate(() => {\n      this.syncMetadata();\n      this.onChange();\n    });\n  }\n\n  updateColumns(cols) {\n    // cols: Array<{column_name: string; is_dttm: boolean; type: string;}>\n    const { databaseColumns } = this.state;\n    const databaseColumnNames = cols.map((col) => col.column_name);\n    const currentCols = databaseColumns.reduce(\n      (agg, col) => ({\n        ...agg,\n        [col.column_name]: col\n      }),\n      {}\n    );\n    const finalColumns = [];\n    const results = {\n      added: [],\n      modified: [],\n      removed: databaseColumns.\n      map((col) => col.column_name).\n      filter((col) => !databaseColumnNames.includes(col))\n    };\n    cols.forEach((col) => {\n      const currentCol = currentCols[col.column_name];\n      if (!currentCol) {\n        // new column\n        finalColumns.push({\n          id: shortid__WEBPACK_IMPORTED_MODULE_6___default().generate(),\n          column_name: col.column_name,\n          type: col.type,\n          groupby: true,\n          filterable: true,\n          is_dttm: col.is_dttm\n        });\n        results.added.push(col.column_name);\n      } else if (\n      currentCol.type !== col.type ||\n      !currentCol.is_dttm && col.is_dttm)\n      {\n        // modified column\n        finalColumns.push({\n          ...currentCol,\n          type: col.type,\n          is_dttm: currentCol.is_dttm || col.is_dttm\n        });\n        results.modified.push(col.column_name);\n      } else {\n        // unchanged\n        finalColumns.push(currentCol);\n      }\n    });\n    if (\n    results.added.length ||\n    results.modified.length ||\n    results.removed.length)\n    {\n      this.setColumns({ databaseColumns: finalColumns });\n    }\n    return results;\n  }\n\n  syncMetadata() {\n    const { datasource } = this.state;\n    const params = {\n      datasource_type: datasource.type || datasource.datasource_type,\n      database_name:\n      datasource.database.database_name || datasource.database.name,\n      schema_name: datasource.schema,\n      table_name: datasource.table_name ?\n      encodeURIComponent(datasource.table_name) :\n      datasource.table_name\n    };\n    Object.entries(params).forEach((_ref20) => {let [key, value] = _ref20;\n      // rison can't encode the undefined value\n      if (value === undefined) {\n        params[key] = null;\n      }\n    });\n    const endpoint = `/datasource/external_metadata_by_name/?q=${rison__WEBPACK_IMPORTED_MODULE_0___default().encode(\n      params\n    )}`;\n    this.setState({ metadataLoading: true });\n\n    _superset_ui_core__WEBPACK_IMPORTED_MODULE_34__[\"default\"].get({ endpoint }).\n    then((_ref21) => {let { json } = _ref21;\n      const results = this.updateColumns(json);\n      if (results.modified.length) {\n        this.props.addSuccessToast(\n          (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Modified columns: %s', results.modified.join(', '))\n        );\n      }\n      if (results.removed.length) {\n        this.props.addSuccessToast(\n          (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Removed columns: %s', results.removed.join(', '))\n        );\n      }\n      if (results.added.length) {\n        this.props.addSuccessToast(\n          (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('New columns added: %s', results.added.join(', '))\n        );\n      }\n      this.props.addSuccessToast((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Metadata has been synced'));\n      this.setState({ metadataLoading: false });\n    }).\n    catch((response) =>\n    (0,src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_18__.getClientErrorObject)(response).then((_ref22) => {let { error, statusText } = _ref22;\n      this.props.addDangerToast(\n        error || statusText || (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('An error has occurred')\n      );\n      this.setState({ metadataLoading: false });\n    })\n    );\n  }\n\n  findDuplicates(arr, accessor) {\n    const seen = {};\n    const dups = [];\n    arr.forEach((obj) => {\n      const item = accessor(obj);\n      if (item in seen) {\n        dups.push(item);\n      } else {\n        seen[item] = null;\n      }\n    });\n    return dups;\n  }\n\n  validate(callback) {\n    let errors = [];\n    let dups;\n    const { datasource } = this.state;\n\n    // Looking for duplicate column_name\n    dups = this.findDuplicates(datasource.columns, (obj) => obj.column_name);\n    errors = errors.concat(\n      dups.map((name) => (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Column name [%s] is duplicated', name))\n    );\n\n    // Looking for duplicate metric_name\n    dups = this.findDuplicates(datasource.metrics, (obj) => obj.metric_name);\n    errors = errors.concat(\n      dups.map((name) => (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Metric name [%s] is duplicated', name))\n    );\n\n    // Making sure calculatedColumns have an expression defined\n    const noFilterCalcCols = this.state.calculatedColumns.filter(\n      (col) => !col.expression && !col.json\n    );\n    errors = errors.concat(\n      noFilterCalcCols.map((col) =>\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Calculated column [%s] requires an expression', col.column_name)\n      )\n    );\n\n    // validate currency code\n    try {var _this$state$datasourc;\n      (_this$state$datasourc = this.state.datasource.metrics) == null ? void 0 : _this$state$datasourc.forEach(\n        (metric) => {var _metric$currency;return (\n            ((_metric$currency = metric.currency) == null ? void 0 : _metric$currency.symbol) &&\n            new Intl.NumberFormat('en-US', {\n              style: 'currency',\n              currency: metric.currency.symbol\n            }));}\n      );\n    } catch {\n      errors = errors.concat([(0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Invalid currency code in saved metrics')]);\n    }\n\n    this.setState({ errors }, callback);\n  }\n\n  handleTabSelect(activeTabKey) {\n    this.setState({ activeTabKey });\n  }\n\n  sortMetrics(metrics) {\n    return metrics.sort((_ref23, _ref24) => {let { id: a } = _ref23;let { id: b } = _ref24;return b - a;});\n  }\n\n  renderSettingsFieldset() {\n    const { datasource } = this.state;\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_27__[\"default\"], {\n        title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Basic'),\n        item: datasource,\n        onChange: this.onDatasourceChange },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"description\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Description'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n          language: \"markdown\",\n          offerEditInModal: false,\n          resize: \"vertical\" }\n        ) }\n\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"default_endpoint\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Default URL'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)(\n          'Default URL to redirect to when accessing from the dataset list page'\n        ),\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], { controlId: \"default_endpoint\" }) }\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        inline: true,\n        fieldKey: \"filter_select_enabled\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Autocomplete filters'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Whether to populate autocomplete filters options'),\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_19__[\"default\"], null) }\n      ),\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"fetch_values_predicate\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Autocomplete query predicate'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)(\n          'When using \"Autocomplete filters\", this can be used to improve performance ' +\n          'of the query fetching the values. Use this option to apply a ' +\n          'predicate (WHERE clause) to the query selecting the distinct ' +\n          'values from the table. Typically the intent would be to limit the scan ' +\n          'by applying a relative time filter on a partitioned or indexed time-related field.'\n        ),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n          language: \"sql\",\n          controlId: \"fetch_values_predicate\",\n          minLines: 5,\n          resize: \"vertical\" }\n        ) }\n\n      ),\n\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"extra\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Extra'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)(\n          'Extra data to specify table metadata. Currently supports ' +\n          'metadata of the format: `{ \"certification\": { \"certified_by\": ' +\n          '\"Data Platform Team\", \"details\": \"This table is the source of truth.\" ' +\n          '}, \"warning_markdown\": \"This is a warning.\" }`.'\n        ),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n          controlId: \"extra\",\n          language: \"json\",\n          offerEditInModal: false,\n          resize: \"vertical\" }\n        ) }\n\n      ),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(OwnersSelector, {\n        datasource: datasource,\n        onChange: (newOwners) => {\n          this.onDatasourceChange({ ...datasource, owners: newOwners });\n        } }\n      )\n      ));\n\n  }\n\n  renderAdvancedFieldset() {\n    const { datasource } = this.state;\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_27__[\"default\"], {\n        title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Advanced'),\n        item: datasource,\n        onChange: this.onDatasourceChange },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"cache_timeout\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Cache timeout'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)(\n          'The duration of time in seconds before the cache is invalidated. Set to -1 to bypass the cache.'\n        ),\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], { controlId: \"cache_timeout\" }) }\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"offset\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Hours offset'),\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], { controlId: \"offset\" }),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)(\n          'The number of hours, negative or positive, to shift the time column. This can be used to move UTC time to local time.'\n        ) }\n      ),\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"template_params\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Template parameters'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)(\n          'A set of parameters that become available in the query using Jinja templating syntax'\n        ),\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], { controlId: \"template_params\" }) }\n      )\n\n      ));\n\n  }\n\n  renderSpatialTab() {\n    const { datasource } = this.state;\n    const { spatials, all_cols: allCols } = datasource;\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_10__[\"default\"].TabPane, {\n        tab: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(CollectionTabTitle, { collection: spatials, title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Spatial') }),\n        key: 4 },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_CollectionTable__WEBPACK_IMPORTED_MODULE_26__[\"default\"], {\n        tableColumns: ['name', 'config'],\n        onChange: this.onDatasourcePropChange.bind(this, 'spatials'),\n        itemGenerator: () => ({\n          name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('<new spatial>'),\n          type: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('<no type>'),\n          config: null\n        }),\n        collection: spatials,\n        allowDeletes: true,\n        itemRenderers: {\n          name: (d, onChange) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_EditableTitle__WEBPACK_IMPORTED_MODULE_17__[\"default\"], { canEdit: true, title: d, onSaveTitle: onChange }),\n\n          config: (v, onChange) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_SpatialControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], { value: v, onChange: onChange, choices: allCols })\n\n        } }\n      )\n      ));\n\n  }\n\n  renderSourceFieldset(theme) {var _datasource$database, _datasource$database2, _datasource$database3;\n    const { datasource } = this.state;\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"div\", null,\n      this.allowEditSource &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(EditLockContainer, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"span\", { role: \"button\", tabIndex: 0, onClick: this.onChangeEditMode },\n      this.state.isEditMode ?\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_25__[\"default\"].LockUnlocked, { iconColor: theme.colors.grayscale.base }) :\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_25__[\"default\"].LockLocked, { iconColor: theme.colors.grayscale.base })\n\n      ),\n      !this.state.isEditMode &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"div\", null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Click the lock to make changes.')),\n\n      this.state.isEditMode &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"div\", null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Click the lock to prevent further changes.'))\n\n      ),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"div\", { className: \"m-l-10 m-t-20 m-b-10\" },\n      DATASOURCE_TYPES_ARR.map((type) =>\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Radio__WEBPACK_IMPORTED_MODULE_2__.Radio, {\n        key: type.key,\n        value: type.key,\n        inline: true,\n        onChange: this.onDatasourceTypeChange.bind(this, type.key),\n        checked: this.state.datasourceType === type.key,\n        disabled: !this.state.isEditMode },\n\n      type.label\n      )\n      )\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"hr\", null),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_27__[\"default\"], { item: datasource, onChange: this.onDatasourceChange, compact: true },\n      this.state.datasourceType === DATASOURCE_TYPES.virtual.key &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"div\", null,\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_7__.Col, { xs: 24, md: 12 },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"databaseSelector\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('virtual'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"div\", { css: _ref25 },\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_DatabaseSelector__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n          db: datasource == null ? void 0 : datasource.database,\n          schema: datasource.schema,\n          onSchemaChange: (schema) =>\n          this.state.isEditMode &&\n          this.onDatasourcePropChange('schema', schema),\n\n          onDbChange: (database) =>\n          this.state.isEditMode &&\n          this.onDatasourcePropChange('database', database),\n\n          formMode: false,\n          handleError: this.props.addDangerToast,\n          readOnly: !this.state.isEditMode }\n        )\n        ) }\n\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"div\", { css: /*#__PURE__*/(0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.css)({ width: 'calc(100% - 34px)', marginTop: -16 },  false ? 0 : \";label:DatasourceEditor;\",  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"table_name\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Dataset name'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n          controlId: \"table_name\",\n          onChange: (table) => {\n            this.onDatasourcePropChange('table_name', table);\n          },\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Dataset name'),\n          disabled: !this.state.isEditMode }\n        ) }\n\n      )\n      )\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"sql\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('SQL'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)(\n          'When specifying SQL, the datasource acts as a view. ' +\n          'Superset will use this statement as a subquery while grouping and filtering ' +\n          'on the generated parent queries.'\n        ),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n          language: \"sql\",\n          offerEditInModal: false,\n          minLines: 20,\n          maxLines: 20,\n          readOnly: !this.state.isEditMode,\n          resize: \"both\" }\n        ) }\n\n      )\n      )\n\n      ),\n\n      this.state.datasourceType === DATASOURCE_TYPES.physical.key &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_7__.Col, { xs: 24, md: 12 },\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        fieldKey: \"tableSelector\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Physical'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"div\", { css: _ref26 },\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_TableSelector__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n          clearable: false,\n          database: {\n            ...datasource.database,\n            database_name:\n            ((_datasource$database = datasource.database) == null ? void 0 : _datasource$database.database_name) || ((_datasource$database2 =\n            datasource.database) == null ? void 0 : _datasource$database2.name)\n          },\n          dbId: (_datasource$database3 = datasource.database) == null ? void 0 : _datasource$database3.id,\n          handleError: this.props.addDangerToast,\n          schema: datasource.schema,\n          sqlLabMode: false,\n          tableValue: datasource.table_name,\n          onSchemaChange:\n          this.state.isEditMode ?\n          (schema) =>\n          this.onDatasourcePropChange('schema', schema) :\n          undefined,\n\n          onDbChange:\n          this.state.isEditMode ?\n          (database) =>\n          this.onDatasourcePropChange(\n            'database',\n            database\n          ) :\n          undefined,\n\n          onTableSelectChange:\n          this.state.isEditMode ?\n          (table) =>\n          this.onDatasourcePropChange('table_name', table) :\n          undefined,\n\n          readOnly: !this.state.isEditMode }\n        )\n        ),\n\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)(\n          'The pointer to a physical table (or view). Keep in mind that the chart is ' +\n          'associated to this Superset logical table, and this logical table points ' +\n          'the physical table referenced here.'\n        ) }\n      )\n\n      )\n\n      )\n      ));\n\n  }\n\n  renderErrors() {\n    if (this.state.errors.length > 0) {\n      return (\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Alert__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          css: (theme) => ({ marginBottom: theme.gridUnit * 4 }),\n          type: \"error\",\n          message:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,\n          this.state.errors.map((err) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"div\", { key: err }, err)\n          )\n          ) }\n\n        ));\n\n    }\n    return null;\n  }\n\n  renderMetricCollection() {\n    const { datasource } = this.state;\n    const { metrics } = datasource;\n    const sortedMetrics = metrics != null && metrics.length ? this.sortMetrics(metrics) : [];\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_CollectionTable__WEBPACK_IMPORTED_MODULE_26__[\"default\"], {\n        tableColumns: ['metric_name', 'verbose_name', 'expression'],\n        sortColumns: ['metric_name', 'verbose_name', 'expression'],\n        columnLabels: {\n          metric_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Metric Key'),\n          verbose_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Label'),\n          expression: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('SQL expression')\n        },\n        columnLabelTooltips: {\n          metric_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)(\n            'This field is used as a unique identifier to attach ' +\n            'the metric to charts. It is also used as the alias in the ' +\n            'SQL query.'\n          )\n        },\n        expandFieldset:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(FormContainer, null,\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_27__[\"default\"], { compact: true },\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n          fieldKey: \"description\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Description'),\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n            controlId: \"description\",\n            placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Description') }\n          ) }\n\n        ),\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n          fieldKey: \"d3format\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('D3 format'),\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], { controlId: \"d3format\", placeholder: \"%y/%m/%d\" }) }\n\n        ),\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n          fieldKey: \"currency\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Metric currency'),\n          control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(CurrencyControl, { currencies: this.currencies }) }\n        ),\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Certified by'),\n          fieldKey: \"certified_by\",\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)(\n            'Person or group that has certified this metric'\n          ),\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n            controlId: \"certified_by\",\n            placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Certified by') }\n          ) }\n\n        ),\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Certification details'),\n          fieldKey: \"certification_details\",\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Details of the certification'),\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n            controlId: \"certification_details\",\n            placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Certification details') }\n          ) }\n\n        ),\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Warning'),\n          fieldKey: \"warning_markdown\",\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Optional warning about use of this metric'),\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n            controlId: \"warning_markdown\",\n            language: \"markdown\",\n            offerEditInModal: false,\n            resize: \"vertical\" }\n          ) }\n\n        )\n        )\n        ),\n\n        collection: sortedMetrics,\n        allowAddItem: true,\n        onChange: this.onDatasourcePropChange.bind(this, 'metrics'),\n        itemGenerator: () => ({\n          metric_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('<new metric>'),\n          verbose_name: '',\n          expression: ''\n        }),\n        itemCellProps: {\n          expression: () => ({\n            width: '240px'\n          })\n        },\n        itemRenderers: {\n          metric_name: (v, onChange, _, record) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(FlexRowContainer, null,\n          record.is_certified &&\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n            certifiedBy: record.certified_by,\n            details: record.certification_details }\n          ),\n\n          record.warning_markdown &&\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_WarningIconWithTooltip__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n            warningMarkdown: record.warning_markdown }\n          ),\n\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_EditableTitle__WEBPACK_IMPORTED_MODULE_17__[\"default\"], { canEdit: true, title: v, onSaveTitle: onChange })\n          ),\n\n          verbose_name: (v, onChange) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], { canEdit: true, value: v, onChange: onChange }),\n\n          expression: (v, onChange) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n            canEdit: true,\n            initialValue: v,\n            onChange: onChange,\n            extraClasses: ['datasource-sql-expression'],\n            language: \"sql\",\n            offerEditInModal: false,\n            minLines: 5,\n            textAreaStyles: { minWidth: '200px', maxWidth: '450px' },\n            resize: \"both\" }\n          ),\n\n          description: (v, onChange, label) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(StackedField, {\n            label: label,\n            formElement: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], { value: v, onChange: onChange }) }\n          ),\n\n          d3format: (v, onChange, label) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(StackedField, {\n            label: label,\n            formElement: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_20__[\"default\"], { value: v, onChange: onChange }) }\n          )\n\n        },\n        allowDeletes: true,\n        stickyHeader: true }\n      ));\n\n  }\n\n  render() {\n    const { datasource, activeTabKey } = this.state;\n    const { metrics } = datasource;\n    const sortedMetrics = metrics != null && metrics.length ? this.sortMetrics(metrics) : [];\n    const { theme } = this.props;\n\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(DatasourceContainer, null,\n      this.renderErrors(),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Alert__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        css: (theme) => ({ marginBottom: theme.gridUnit * 4 }),\n        type: \"warning\",\n        message:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,\n        ' ',\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"strong\", null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Be careful.'), \" \"),\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)(\n          'Changing these settings will affect all charts using this dataset, including charts owned by other people.'\n        )\n        ) }\n\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(StyledTableTabs, {\n        fullWidth: false,\n        id: \"table-tabs\",\n        \"data-test\": \"edit-dataset-tabs\",\n        onChange: this.handleTabSelect,\n        defaultActiveKey: activeTabKey },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_10__[\"default\"].TabPane, { key: 0, tab: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Source') },\n      this.renderSourceFieldset(theme)\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_10__[\"default\"].TabPane, {\n        tab:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(CollectionTabTitle, {\n          collection: sortedMetrics,\n          title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Metrics') }\n        ),\n\n        key: 1 },\n\n      this.renderMetricCollection()\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_10__[\"default\"].TabPane, {\n        tab:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(CollectionTabTitle, {\n          collection: this.state.databaseColumns,\n          title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Columns') }\n        ),\n\n        key: 2 },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(StyledColumnsTabWrapper, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(ColumnButtonWrapper, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(StyledButtonWrapper, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n        buttonSize: \"small\",\n        buttonStyle: \"tertiary\",\n        onClick: this.syncMetadata,\n        className: \"sync-from-source\",\n        disabled: this.state.isEditMode },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(\"i\", { className: \"fa fa-database\" }), ' ',\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Sync columns from source')\n      )\n      )\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(ColumnCollectionTable, {\n        className: \"columns-table\",\n        columns: this.state.databaseColumns,\n        datasource: datasource,\n        onColumnsChange: (databaseColumns) =>\n        this.setColumns({ databaseColumns }),\n\n        onDatasourceChange: this.onDatasourceChange }\n      ),\n      this.state.metadataLoading && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Loading__WEBPACK_IMPORTED_MODULE_15__[\"default\"], null)\n      )\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_10__[\"default\"].TabPane, {\n        tab:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(CollectionTabTitle, {\n          collection: this.state.calculatedColumns,\n          title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Calculated columns') }\n        ),\n\n        key: 3 },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(StyledColumnsTabWrapper, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(ColumnCollectionTable, {\n        columns: this.state.calculatedColumns,\n        onColumnsChange: (calculatedColumns) =>\n        this.setColumns({ calculatedColumns }),\n\n        columnLabelTooltips: {\n          column_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)(\n            'This field is used as a unique identifier to attach ' +\n            'the calculated dimension to charts. It is also used ' +\n            'as the alias in the SQL query.'\n          )\n        },\n        onDatasourceChange: this.onDatasourceChange,\n        datasource: datasource,\n        editableColumnName: true,\n        showExpression: true,\n        allowAddItem: true,\n        allowEditDataType: true,\n        itemGenerator: () => ({\n          column_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('<new column>'),\n          filterable: true,\n          groupby: true,\n          expression: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('<enter SQL expression here>'),\n          __expanded: true\n        }) }\n      )\n      )\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_10__[\"default\"].TabPane, { key: 4, tab: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.t)('Settings') },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_7__.Row, { gutter: 16 },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_7__.Col, { xs: 24, md: 12 },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(FormContainer, null, this.renderSettingsFieldset())\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_7__.Col, { xs: 24, md: 12 },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_30__.jsx)(FormContainer, null, this.renderAdvancedFieldset())\n      )\n      )\n      )\n      )\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nDatasourceEditor.defaultProps = defaultProps;\nDatasourceEditor.propTypes = propTypes;\n\nconst DataSourceComponent = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_37__.b)(DatasourceEditor);const _default =\n\n(0,src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_23__[\"default\"])(DataSourceComponent);/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatasourceContainer, \"DatasourceContainer\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(FlexRowContainer, \"FlexRowContainer\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(StyledTableTabs, \"StyledTableTabs\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(StyledBadge, \"StyledBadge\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(EditLockContainer, \"EditLockContainer\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(ColumnButtonWrapper, \"ColumnButtonWrapper\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(StyledLabelWrapper, \"StyledLabelWrapper\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(StyledColumnsTabWrapper, \"StyledColumnsTabWrapper\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(StyledButtonWrapper, \"StyledButtonWrapper\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(checkboxGenerator, \"checkboxGenerator\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(DATA_TYPES, \"DATA_TYPES\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(CURRENCY_SYMBOL_POSITION, \"CURRENCY_SYMBOL_POSITION\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(DATASOURCE_TYPES_ARR, \"DATASOURCE_TYPES_ARR\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(DATASOURCE_TYPES, \"DATASOURCE_TYPES\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(CollectionTabTitle, \"CollectionTabTitle\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(ColumnCollectionTable, \"ColumnCollectionTable\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(StackedField, \"StackedField\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(FormContainer, \"FormContainer\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(OwnersSelector, \"OwnersSelector\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(CurrencyControlContainer, \"CurrencyControlContainer\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(CurrencyControl, \"CurrencyControl\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(DatasourceEditor, \"DatasourceEditor\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(DataSourceComponent, \"DataSourceComponent\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Datasource/DatasourceEditor.jsx\n");

/***/ }),

/***/ "./src/components/Datasource/utils.js":
/*!********************************************!*\
  !*** ./src/components/Datasource/utils.js ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   recurseReactClone: () => (/* binding */ recurseReactClone)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nfunction recurseReactClone(children, type, propExtender) {\n  /**\n   * Clones a React component's children, and injects new props\n   * where the type specified is matched.\n   */\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (child) => {\n    let newChild = child;\n    if (child && child.type.name === type.name) {\n      newChild = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, propExtender(child));\n    }\n    if (newChild && newChild.props.children) {\n      newChild = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(newChild, {\n        children: recurseReactClone(\n          newChild.props.children,\n          type,\n          propExtender\n        )\n      });\n    }\n    return newChild;\n  });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(recurseReactClone, \"recurseReactClone\", \"/app/superset-frontend/src/components/Datasource/utils.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9EYXRhc291cmNlL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3NyYy9jb21wb25lbnRzL0RhdGFzb3VyY2UvdXRpbHMuanM/MDJmZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVjdXJzZVJlYWN0Q2xvbmUoY2hpbGRyZW4sIHR5cGUsIHByb3BFeHRlbmRlcikge1xuICAvKipcbiAgICogQ2xvbmVzIGEgUmVhY3QgY29tcG9uZW50J3MgY2hpbGRyZW4sIGFuZCBpbmplY3RzIG5ldyBwcm9wc1xuICAgKiB3aGVyZSB0aGUgdHlwZSBzcGVjaWZpZWQgaXMgbWF0Y2hlZC5cbiAgICovXG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5tYXAoY2hpbGRyZW4sIGNoaWxkID0+IHtcbiAgICBsZXQgbmV3Q2hpbGQgPSBjaGlsZDtcbiAgICBpZiAoY2hpbGQgJiYgY2hpbGQudHlwZS5uYW1lID09PSB0eXBlLm5hbWUpIHtcbiAgICAgIG5ld0NoaWxkID0gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCBwcm9wRXh0ZW5kZXIoY2hpbGQpKTtcbiAgICB9XG4gICAgaWYgKG5ld0NoaWxkICYmIG5ld0NoaWxkLnByb3BzLmNoaWxkcmVuKSB7XG4gICAgICBuZXdDaGlsZCA9IFJlYWN0LmNsb25lRWxlbWVudChuZXdDaGlsZCwge1xuICAgICAgICBjaGlsZHJlbjogcmVjdXJzZVJlYWN0Q2xvbmUoXG4gICAgICAgICAgbmV3Q2hpbGQucHJvcHMuY2hpbGRyZW4sXG4gICAgICAgICAgdHlwZSxcbiAgICAgICAgICBwcm9wRXh0ZW5kZXIsXG4gICAgICAgICksXG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld0NoaWxkO1xuICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Datasource/utils.js\n");

/***/ }),

/***/ "./node_modules/history/esm/history.js":
/*!*********************************************!*\
  !*** ./node_modules/history/esm/history.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBrowserHistory: () => (/* binding */ createBrowserHistory),\n/* harmony export */   createHashHistory: () => (/* binding */ createHashHistory),\n/* harmony export */   createLocation: () => (/* binding */ createLocation),\n/* harmony export */   createMemoryHistory: () => (/* binding */ createMemoryHistory),\n/* harmony export */   createPath: () => (/* binding */ createPath),\n/* harmony export */   locationsAreEqual: () => (/* binding */ locationsAreEqual)\n/* harmony export */ });\n/* unused harmony export parsePath */\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var resolve_pathname__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! resolve-pathname */ \"./node_modules/resolve-pathname/esm/resolve-pathname.js\");\n/* harmony import */ var value_equal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! value-equal */ \"./node_modules/value-equal/esm/value-equal.js\");\n/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tiny-warning */ \"./node_modules/tiny-warning/dist/tiny-warning.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/tiny-invariant.esm.js\");\n\n\n\n\n\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = (0,resolve_pathname__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && (0,value_equal__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(prompt == null, 'A history supports only one prompt at a time') : 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n           true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'Browser history needs a DOM') : 0 : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction stripHash(url) {\n  var hashIndex = url.indexOf('#');\n  return hashIndex === -1 ? url : url.slice(0, hashIndex);\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(stripHash(window.location.href) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(false, 'Hash history needs a DOM') : 0 : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function locationsAreEqual$$1(a, b) {\n    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;\n  }\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    var baseTag = document.querySelector('base');\n    var href = '';\n\n    if (baseTag && baseTag.getAttribute('href')) {\n      href = stripHash(window.location.href);\n    }\n\n    return href + '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(state === undefined, 'Hash history cannot push state; it is ignored') : 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(state === undefined, 'Hash history cannot replace state; it is ignored') : 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/history/esm/history.js\n");

/***/ }),

/***/ "./node_modules/react-router-dom/esm/react-router-dom.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-router-dom/esm/react-router-dom.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserRouter: () => (/* binding */ BrowserRouter),\n/* harmony export */   Link: () => (/* binding */ Link)\n/* harmony export */ });\n/* unused harmony exports HashRouter, NavLink */\n/* harmony import */ var react_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-router */ \"./node_modules/react-router/esm/react-router.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var history__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! history */ \"./node_modules/history/esm/history.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tiny-warning */ \"./node_modules/tiny-warning/dist/tiny-warning.esm.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/tiny-invariant.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\n\nvar BrowserRouter = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(BrowserRouter, _React$Component);\n\n  function BrowserRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = (0,history__WEBPACK_IMPORTED_MODULE_2__.createBrowserHistory)(_this.props);\n    return _this;\n  }\n\n  var _proto = BrowserRouter.prototype;\n\n  _proto.render = function render() {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router__WEBPACK_IMPORTED_MODULE_3__.Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return BrowserRouter;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n\nif (true) {\n  BrowserRouter.propTypes = {\n    basename: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().string),\n    children: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().node),\n    forceRefresh: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),\n    getUserConfirmation: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func),\n    keyLength: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().number)\n  };\n\n  BrowserRouter.prototype.componentDidMount = function () {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!this.props.history, \"<BrowserRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\") : 0;\n  };\n}\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\n\nvar HashRouter = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(HashRouter, _React$Component);\n\n  function HashRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = (0,history__WEBPACK_IMPORTED_MODULE_2__.createHashHistory)(_this.props);\n    return _this;\n  }\n\n  var _proto = HashRouter.prototype;\n\n  _proto.render = function render() {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router__WEBPACK_IMPORTED_MODULE_3__.Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return HashRouter;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n\nif (true) {\n  HashRouter.propTypes = {\n    basename: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().string),\n    children: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().node),\n    getUserConfirmation: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func),\n    hashType: prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function () {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!this.props.history, \"<HashRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { HashRouter as Router }`.\") : 0;\n  };\n}\n\nvar resolveToLocation = function resolveToLocation(to, currentLocation) {\n  return typeof to === \"function\" ? to(currentLocation) : to;\n};\nvar normalizeToLocation = function normalizeToLocation(to, currentLocation) {\n  return typeof to === \"string\" ? (0,history__WEBPACK_IMPORTED_MODULE_2__.createLocation)(to, null, null, currentLocation) : to;\n};\n\nvar forwardRefShim = function forwardRefShim(C) {\n  return C;\n};\n\nvar forwardRef = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef;\n\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nvar LinkAnchor = forwardRef(function (_ref, forwardedRef) {\n  var innerRef = _ref.innerRef,\n      navigate = _ref.navigate,\n      _onClick = _ref.onClick,\n      rest = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_ref, [\"innerRef\", \"navigate\", \"onClick\"]);\n\n  var target = rest.target;\n\n  var props = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, rest, {\n    onClick: function onClick(event) {\n      try {\n        if (_onClick) _onClick(event);\n      } catch (ex) {\n        event.preventDefault();\n        throw ex;\n      }\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && ( // ignore everything but left clicks\n      !target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n          navigate();\n        }\n    }\n  }); // React 15 compat\n\n\n  if (forwardRefShim !== forwardRef) {\n    props.ref = forwardedRef || innerRef;\n  } else {\n    props.ref = innerRef;\n  }\n  /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", props);\n});\n\nif (true) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link = forwardRef(function (_ref2, forwardedRef) {\n  var _ref2$component = _ref2.component,\n      component = _ref2$component === void 0 ? LinkAnchor : _ref2$component,\n      replace = _ref2.replace,\n      to = _ref2.to,\n      innerRef = _ref2.innerRef,\n      rest = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_ref2, [\"component\", \"replace\", \"to\", \"innerRef\"]);\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router__WEBPACK_IMPORTED_MODULE_3__.__RouterContext.Consumer, null, function (context) {\n    !context ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"You should not use <Link> outside a <Router>\") : 0 : void 0;\n    var history = context.history;\n    var location = normalizeToLocation(resolveToLocation(to, context.location), context.location);\n    var href = location ? history.createHref(location) : \"\";\n\n    var props = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, rest, {\n      href: href,\n      navigate: function navigate() {\n        var location = resolveToLocation(to, context.location);\n        var isDuplicateNavigation = (0,history__WEBPACK_IMPORTED_MODULE_2__.createPath)(context.location) === (0,history__WEBPACK_IMPORTED_MODULE_2__.createPath)(normalizeToLocation(location));\n        var method = replace || isDuplicateNavigation ? history.replace : history.push;\n        method(location);\n      }\n    }); // React 15 compat\n\n\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.innerRef = innerRef;\n    }\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(component, props);\n  });\n});\n\nif (true) {\n  var toType = prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_4___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_4___default().object), (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func)]);\n  var refType = prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_4___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func), prop_types__WEBPACK_IMPORTED_MODULE_4___default().shape({\n    current: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().any)\n  })]);\n  Link.displayName = \"Link\";\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func),\n    replace: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),\n    target: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().string),\n    to: toType.isRequired\n  };\n}\n\nvar forwardRefShim$1 = function forwardRefShim(C) {\n  return C;\n};\n\nvar forwardRef$1 = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef;\n\nif (typeof forwardRef$1 === \"undefined\") {\n  forwardRef$1 = forwardRefShim$1;\n}\n\nfunction joinClassnames() {\n  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classnames[_key] = arguments[_key];\n  }\n\n  return classnames.filter(function (i) {\n    return i;\n  }).join(\" \");\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nvar NavLink = forwardRef$1(function (_ref, forwardedRef) {\n  var _ref$ariaCurrent = _ref[\"aria-current\"],\n      ariaCurrent = _ref$ariaCurrent === void 0 ? \"page\" : _ref$ariaCurrent,\n      _ref$activeClassName = _ref.activeClassName,\n      activeClassName = _ref$activeClassName === void 0 ? \"active\" : _ref$activeClassName,\n      activeStyle = _ref.activeStyle,\n      classNameProp = _ref.className,\n      exact = _ref.exact,\n      isActiveProp = _ref.isActive,\n      locationProp = _ref.location,\n      sensitive = _ref.sensitive,\n      strict = _ref.strict,\n      styleProp = _ref.style,\n      to = _ref.to,\n      innerRef = _ref.innerRef,\n      rest = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_ref, [\"aria-current\", \"activeClassName\", \"activeStyle\", \"className\", \"exact\", \"isActive\", \"location\", \"sensitive\", \"strict\", \"style\", \"to\", \"innerRef\"]);\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router__WEBPACK_IMPORTED_MODULE_3__.__RouterContext.Consumer, null, function (context) {\n    !context ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"You should not use <NavLink> outside a <Router>\") : 0 : void 0;\n    var currentLocation = locationProp || context.location;\n    var toLocation = normalizeToLocation(resolveToLocation(to, currentLocation), currentLocation);\n    var path = toLocation.pathname; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n\n    var escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n    var match = escapedPath ? (0,react_router__WEBPACK_IMPORTED_MODULE_3__.matchPath)(currentLocation.pathname, {\n      path: escapedPath,\n      exact: exact,\n      sensitive: sensitive,\n      strict: strict\n    }) : null;\n    var isActive = !!(isActiveProp ? isActiveProp(match, currentLocation) : match);\n    var className = typeof classNameProp === \"function\" ? classNameProp(isActive) : classNameProp;\n    var style = typeof styleProp === \"function\" ? styleProp(isActive) : styleProp;\n\n    if (isActive) {\n      className = joinClassnames(className, activeClassName);\n      style = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, style, activeStyle);\n    }\n\n    var props = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({\n      \"aria-current\": isActive && ariaCurrent || null,\n      className: className,\n      style: style,\n      to: toLocation\n    }, rest); // React 15 compat\n\n\n    if (forwardRefShim$1 !== forwardRef$1) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.innerRef = innerRef;\n    }\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Link, props);\n  });\n});\n\nif (true) {\n  NavLink.displayName = \"NavLink\";\n  var ariaCurrentType = prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf([\"page\", \"step\", \"location\", \"date\", \"time\", \"true\", \"false\"]);\n  NavLink.propTypes = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({}, Link.propTypes, {\n    \"aria-current\": ariaCurrentType,\n    activeClassName: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().string),\n    activeStyle: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().object),\n    className: prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_4___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func)]),\n    exact: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),\n    isActive: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func),\n    location: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().object),\n    sensitive: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),\n    strict: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),\n    style: prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_4___default().object), (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func)])\n  });\n}\n\n\n//# sourceMappingURL=react-router-dom.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-router-dom/esm/react-router-dom.js\n");

/***/ }),

/***/ "./node_modules/react-router/esm/react-router.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-router/esm/react-router.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Route: () => (/* binding */ Route),\n/* harmony export */   Router: () => (/* binding */ Router),\n/* harmony export */   Switch: () => (/* binding */ Switch),\n/* harmony export */   __RouterContext: () => (/* binding */ context),\n/* harmony export */   matchPath: () => (/* binding */ matchPath),\n/* harmony export */   useHistory: () => (/* binding */ useHistory),\n/* harmony export */   useLocation: () => (/* binding */ useLocation),\n/* harmony export */   useParams: () => (/* binding */ useParams),\n/* harmony export */   withRouter: () => (/* binding */ withRouter)\n/* harmony export */ });\n/* unused harmony exports MemoryRouter, Prompt, Redirect, StaticRouter, __HistoryContext, generatePath, useRouteMatch */\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var history__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! history */ \"./node_modules/history/esm/history.js\");\n/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tiny-warning */ \"./node_modules/tiny-warning/dist/tiny-warning.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/tiny-invariant.esm.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path-to-regexp */ \"./node_modules/react-router/node_modules/path-to-regexp/index.js\");\n/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path_to_regexp__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hoist-non-react-statics */ \"./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n\n\n\n\n\n\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823;\nvar commonjsGlobal = typeof globalThis !== \"undefined\" // 'global proper'\n? // eslint-disable-next-line no-undef\nglobalThis : typeof window !== \"undefined\" ? window // Browser\n: typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g // node.js\n: {};\n\nfunction getUniqueId() {\n  var key = \"__global_unique_id__\";\n  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;\n} // Inlined Object.is polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    // eslint-disable-next-line no-self-compare\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = \"__create-react-context-\" + getUniqueId() + \"__\";\n\n  var Provider = /*#__PURE__*/function (_React$Component) {\n    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Provider, _React$Component);\n\n    function Provider() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n      _this.emitter = createEventEmitter(_this.props.value);\n      return _this;\n    }\n\n    var _proto = Provider.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0; // No change\n        } else {\n          changedBits = typeof calculateChangedBits === \"function\" ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (true) {\n             true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, \"calculateChangedBits: Expected the return value to be a \" + \"31-bit integer. Instead received: \" + changedBits) : 0;\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    _proto.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object).isRequired, _Provider$childContex);\n\n  var Consumer = /*#__PURE__*/function (_React$Component2) {\n    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Consumer, _React$Component2);\n\n    function Consumer() {\n      var _this2;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = _React$Component2.call.apply(_React$Component2, [this].concat(args)) || this;\n      _this2.observedBits = void 0;\n      _this2.state = {\n        value: _this2.getValue()\n      };\n\n      _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      };\n\n      return _this2;\n    }\n\n    var _proto2 = Consumer.prototype;\n\n    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n      : observedBits;\n    };\n\n    _proto2.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n      : observedBits;\n    };\n\n    _proto2.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    _proto2.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    _proto2.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object), _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\n// MIT License\nvar createContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext || createReactContext;\n\n// TODO: Replace with React.createContext once we can assume React 16+\n\nvar createNamedContext = function createNamedContext(name) {\n  var context = createContext();\n  context.displayName = name;\n  return context;\n};\n\nvar historyContext = /*#__PURE__*/createNamedContext(\"Router-History\");\n\nvar context = /*#__PURE__*/createNamedContext(\"Router\");\n\n/**\n * The public API for putting history on context.\n */\n\nvar Router = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Router, _React$Component);\n\n  Router.computeRootMatch = function computeRootMatch(pathname) {\n    return {\n      path: \"/\",\n      url: \"/\",\n      params: {},\n      isExact: pathname === \"/\"\n    };\n  };\n\n  function Router(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      location: props.history.location\n    }; // This is a bit of a hack. We have to start listening for location\n    // changes here in the constructor in case there are any <Redirect>s\n    // on the initial render. If there are, they will replace/push when\n    // they mount and since cDM fires in children before parents, we may\n    // get a new location before the <Router> is mounted.\n\n    _this._isMounted = false;\n    _this._pendingLocation = null;\n\n    if (!props.staticContext) {\n      _this.unlisten = props.history.listen(function (location) {\n        _this._pendingLocation = location;\n      });\n    }\n\n    return _this;\n  }\n\n  var _proto = Router.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this._isMounted = true;\n\n    if (this.unlisten) {\n      // Any pre-mount location changes have been captured at\n      // this point, so unregister the listener.\n      this.unlisten();\n    }\n\n    if (!this.props.staticContext) {\n      this.unlisten = this.props.history.listen(function (location) {\n        if (_this2._isMounted) {\n          _this2.setState({\n            location: location\n          });\n        }\n      });\n    }\n\n    if (this._pendingLocation) {\n      this.setState({\n        location: this._pendingLocation\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.unlisten) {\n      this.unlisten();\n      this._isMounted = false;\n      this._pendingLocation = null;\n    }\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(context.Provider, {\n      value: {\n        history: this.props.history,\n        location: this.state.location,\n        match: Router.computeRootMatch(this.state.location.pathname),\n        staticContext: this.props.staticContext\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(historyContext.Provider, {\n      children: this.props.children || null,\n      value: this.props.history\n    }));\n  };\n\n  return Router;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n\nif (true) {\n  Router.propTypes = {\n    children: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().node),\n    history: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object).isRequired,\n    staticContext: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object)\n  };\n\n  Router.prototype.componentDidUpdate = function (prevProps) {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(prevProps.history === this.props.history, \"You cannot change <Router history>\") : 0;\n  };\n}\n\n/**\n * The public API for a <Router> that stores location in memory.\n */\n\nvar MemoryRouter = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(MemoryRouter, _React$Component);\n\n  function MemoryRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = (0,history__WEBPACK_IMPORTED_MODULE_7__.createMemoryHistory)(_this.props);\n    return _this;\n  }\n\n  var _proto = MemoryRouter.prototype;\n\n  _proto.render = function render() {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return MemoryRouter;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n\nif (true) {\n  MemoryRouter.propTypes = {\n    initialEntries: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().array),\n    initialIndex: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().number),\n    getUserConfirmation: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),\n    keyLength: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().number),\n    children: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().node)\n  };\n\n  MemoryRouter.prototype.componentDidMount = function () {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!this.props.history, \"<MemoryRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { MemoryRouter as Router }`.\") : 0;\n  };\n}\n\nvar Lifecycle = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Lifecycle, _React$Component);\n\n  function Lifecycle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Lifecycle.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.props.onMount) this.props.onMount.call(this, this);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.onUnmount) this.props.onUnmount.call(this, this);\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return Lifecycle;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n\n/**\n * The public API for prompting the user before navigating away from a screen.\n */\n\nfunction Prompt(_ref) {\n  var message = _ref.message,\n      _ref$when = _ref.when,\n      when = _ref$when === void 0 ? true : _ref$when;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(context.Consumer, null, function (context) {\n    !context ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"You should not use <Prompt> outside a <Router>\") : 0 : void 0;\n    if (!when || context.staticContext) return null;\n    var method = context.history.block;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Lifecycle, {\n      onMount: function onMount(self) {\n        self.release = method(message);\n      },\n      onUpdate: function onUpdate(self, prevProps) {\n        if (prevProps.message !== message) {\n          self.release();\n          self.release = method(message);\n        }\n      },\n      onUnmount: function onUnmount(self) {\n        self.release();\n      },\n      message: message\n    });\n  });\n}\n\nif (true) {\n  var messageType = prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_6___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string)]);\n  Prompt.propTypes = {\n    when: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),\n    message: messageType.isRequired\n  };\n}\n\nvar cache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nfunction compilePath(path) {\n  if (cache[path]) return cache[path];\n  var generator = path_to_regexp__WEBPACK_IMPORTED_MODULE_1___default().compile(path);\n\n  if (cacheCount < cacheLimit) {\n    cache[path] = generator;\n    cacheCount++;\n  }\n\n  return generator;\n}\n/**\n * Public API for generating a URL pathname from a path and parameters.\n */\n\n\nfunction generatePath(path, params) {\n  if (path === void 0) {\n    path = \"/\";\n  }\n\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path === \"/\" ? path : compilePath(path)(params, {\n    pretty: true\n  });\n}\n\n/**\n * The public API for navigating programmatically with a component.\n */\n\nfunction Redirect(_ref) {\n  var computedMatch = _ref.computedMatch,\n      to = _ref.to,\n      _ref$push = _ref.push,\n      push = _ref$push === void 0 ? false : _ref$push;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(context.Consumer, null, function (context) {\n    !context ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"You should not use <Redirect> outside a <Router>\") : 0 : void 0;\n    var history = context.history,\n        staticContext = context.staticContext;\n    var method = push ? history.push : history.replace;\n    var location = (0,history__WEBPACK_IMPORTED_MODULE_7__.createLocation)(computedMatch ? typeof to === \"string\" ? generatePath(to, computedMatch.params) : (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__[\"default\"])({}, to, {\n      pathname: generatePath(to.pathname, computedMatch.params)\n    }) : to); // When rendering in a static context,\n    // set the new location immediately.\n\n    if (staticContext) {\n      method(location);\n      return null;\n    }\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Lifecycle, {\n      onMount: function onMount() {\n        method(location);\n      },\n      onUpdate: function onUpdate(self, prevProps) {\n        var prevLocation = (0,history__WEBPACK_IMPORTED_MODULE_7__.createLocation)(prevProps.to);\n\n        if (!(0,history__WEBPACK_IMPORTED_MODULE_7__.locationsAreEqual)(prevLocation, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__[\"default\"])({}, location, {\n          key: prevLocation.key\n        }))) {\n          method(location);\n        }\n      },\n      to: to\n    });\n  });\n}\n\nif (true) {\n  Redirect.propTypes = {\n    push: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),\n    from: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),\n    to: prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_6___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object)]).isRequired\n  };\n}\n\nvar cache$1 = {};\nvar cacheLimit$1 = 10000;\nvar cacheCount$1 = 0;\n\nfunction compilePath$1(path, options) {\n  var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n  var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});\n  if (pathCache[path]) return pathCache[path];\n  var keys = [];\n  var regexp = path_to_regexp__WEBPACK_IMPORTED_MODULE_1___default()(path, keys, options);\n  var result = {\n    regexp: regexp,\n    keys: keys\n  };\n\n  if (cacheCount$1 < cacheLimit$1) {\n    pathCache[path] = result;\n    cacheCount$1++;\n  }\n\n  return result;\n}\n/**\n * Public API for matching a URL pathname to a path.\n */\n\n\nfunction matchPath(pathname, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (typeof options === \"string\" || Array.isArray(options)) {\n    options = {\n      path: options\n    };\n  }\n\n  var _options = options,\n      path = _options.path,\n      _options$exact = _options.exact,\n      exact = _options$exact === void 0 ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === void 0 ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === void 0 ? false : _options$sensitive;\n  var paths = [].concat(path);\n  return paths.reduce(function (matched, path) {\n    if (!path && path !== \"\") return null;\n    if (matched) return matched;\n\n    var _compilePath = compilePath$1(path, {\n      end: exact,\n      strict: strict,\n      sensitive: sensitive\n    }),\n        regexp = _compilePath.regexp,\n        keys = _compilePath.keys;\n\n    var match = regexp.exec(pathname);\n    if (!match) return null;\n    var url = match[0],\n        values = match.slice(1);\n    var isExact = pathname === url;\n    if (exact && !isExact) return null;\n    return {\n      path: path,\n      // the path used to match\n      url: path === \"/\" && url === \"\" ? \"/\" : url,\n      // the matched portion of the URL\n      isExact: isExact,\n      // whether or not we matched exactly\n      params: keys.reduce(function (memo, key, index) {\n        memo[key.name] = values[index];\n        return memo;\n      }, {})\n    };\n  }, null);\n}\n\nfunction isEmptyChildren(children) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children) === 0;\n}\n\nfunction evalChildrenDev(children, props, path) {\n  var value = children(props);\n   true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(value !== undefined, \"You returned `undefined` from the `children` function of \" + (\"<Route\" + (path ? \" path=\\\"\" + path + \"\\\"\" : \"\") + \">, but you \") + \"should have returned a React element or `null`\") : 0;\n  return value || null;\n}\n/**\n * The public API for matching a single path and rendering.\n */\n\n\nvar Route = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Route, _React$Component);\n\n  function Route() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Route.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(context.Consumer, null, function (context$1) {\n      !context$1 ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"You should not use <Route> outside a <Router>\") : 0 : void 0;\n      var location = _this.props.location || context$1.location;\n      var match = _this.props.computedMatch ? _this.props.computedMatch // <Switch> already computed the match for us\n      : _this.props.path ? matchPath(location.pathname, _this.props) : context$1.match;\n\n      var props = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__[\"default\"])({}, context$1, {\n        location: location,\n        match: match\n      });\n\n      var _this$props = _this.props,\n          children = _this$props.children,\n          component = _this$props.component,\n          render = _this$props.render; // Preact uses an empty array as children by\n      // default, so use null if that's the case.\n\n      if (Array.isArray(children) && isEmptyChildren(children)) {\n        children = null;\n      }\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(context.Provider, {\n        value: props\n      }, props.match ? children ? typeof children === \"function\" ?  true ? evalChildrenDev(children, props, _this.props.path) : 0 : children : component ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(component, props) : render ? render(props) : null : typeof children === \"function\" ?  true ? evalChildrenDev(children, props, _this.props.path) : 0 : null);\n    });\n  };\n\n  return Route;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n\nif (true) {\n  Route.propTypes = {\n    children: prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_6___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_6___default().node)]),\n    component: function component(props, propName) {\n      if (props[propName] && !(0,react_is__WEBPACK_IMPORTED_MODULE_2__.isValidElementType)(props[propName])) {\n        return new Error(\"Invalid prop 'component' supplied to 'Route': the prop is not a valid React component\");\n      }\n    },\n    exact: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),\n    location: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object),\n    path: prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_6___default().string), prop_types__WEBPACK_IMPORTED_MODULE_6___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_6___default().string))]),\n    render: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),\n    sensitive: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),\n    strict: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool)\n  };\n\n  Route.prototype.componentDidMount = function () {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.component), \"You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored\") : 0;\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.render), \"You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored\") : 0;\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!(this.props.component && this.props.render), \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\") : 0;\n  };\n\n  Route.prototype.componentDidUpdate = function (prevProps) {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!(this.props.location && !prevProps.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.') : 0;\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!(!this.props.location && prevProps.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.') : 0;\n  };\n}\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === \"/\" ? path : \"/\" + path;\n}\n\nfunction addBasename(basename, location) {\n  if (!basename) return location;\n  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__[\"default\"])({}, location, {\n    pathname: addLeadingSlash(basename) + location.pathname\n  });\n}\n\nfunction stripBasename(basename, location) {\n  if (!basename) return location;\n  var base = addLeadingSlash(basename);\n  if (location.pathname.indexOf(base) !== 0) return location;\n  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__[\"default\"])({}, location, {\n    pathname: location.pathname.substr(base.length)\n  });\n}\n\nfunction createURL(location) {\n  return typeof location === \"string\" ? location : (0,history__WEBPACK_IMPORTED_MODULE_7__.createPath)(location);\n}\n\nfunction staticHandler(methodName) {\n  return function () {\n      true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"You cannot %s with <StaticRouter>\", methodName) : 0 ;\n  };\n}\n\nfunction noop() {}\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\n\n\nvar StaticRouter = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(StaticRouter, _React$Component);\n\n  function StaticRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handlePush = function (location) {\n      return _this.navigateTo(location, \"PUSH\");\n    };\n\n    _this.handleReplace = function (location) {\n      return _this.navigateTo(location, \"REPLACE\");\n    };\n\n    _this.handleListen = function () {\n      return noop;\n    };\n\n    _this.handleBlock = function () {\n      return noop;\n    };\n\n    return _this;\n  }\n\n  var _proto = StaticRouter.prototype;\n\n  _proto.navigateTo = function navigateTo(location, action) {\n    var _this$props = this.props,\n        _this$props$basename = _this$props.basename,\n        basename = _this$props$basename === void 0 ? \"\" : _this$props$basename,\n        _this$props$context = _this$props.context,\n        context = _this$props$context === void 0 ? {} : _this$props$context;\n    context.action = action;\n    context.location = addBasename(basename, (0,history__WEBPACK_IMPORTED_MODULE_7__.createLocation)(location));\n    context.url = createURL(context.location);\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        _this$props2$basename = _this$props2.basename,\n        basename = _this$props2$basename === void 0 ? \"\" : _this$props2$basename,\n        _this$props2$context = _this$props2.context,\n        context = _this$props2$context === void 0 ? {} : _this$props2$context,\n        _this$props2$location = _this$props2.location,\n        location = _this$props2$location === void 0 ? \"/\" : _this$props2$location,\n        rest = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(_this$props2, [\"basename\", \"context\", \"location\"]);\n\n    var history = {\n      createHref: function createHref(path) {\n        return addLeadingSlash(basename + createURL(path));\n      },\n      action: \"POP\",\n      location: stripBasename(basename, (0,history__WEBPACK_IMPORTED_MODULE_7__.createLocation)(location)),\n      push: this.handlePush,\n      replace: this.handleReplace,\n      go: staticHandler(\"go\"),\n      goBack: staticHandler(\"goBack\"),\n      goForward: staticHandler(\"goForward\"),\n      listen: this.handleListen,\n      block: this.handleBlock\n    };\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Router, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__[\"default\"])({}, rest, {\n      history: history,\n      staticContext: context\n    }));\n  };\n\n  return StaticRouter;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n\nif (true) {\n  StaticRouter.propTypes = {\n    basename: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),\n    context: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object),\n    location: prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_6___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object)])\n  };\n\n  StaticRouter.prototype.componentDidMount = function () {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!this.props.history, \"<StaticRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { StaticRouter as Router }`.\") : 0;\n  };\n}\n\n/**\n * The public API for rendering the first <Route> that matches.\n */\n\nvar Switch = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Switch, _React$Component);\n\n  function Switch() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Switch.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(context.Consumer, null, function (context) {\n      !context ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"You should not use <Switch> outside a <Router>\") : 0 : void 0;\n      var location = _this.props.location || context.location;\n      var element, match; // We use React.Children.forEach instead of React.Children.toArray().find()\n      // here because toArray adds keys to all child elements and we do not want\n      // to trigger an unmount/remount for two <Route>s that render the same\n      // component at different URLs.\n\n      react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(_this.props.children, function (child) {\n        if (match == null && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(child)) {\n          element = child;\n          var path = child.props.path || child.props.from;\n          match = path ? matchPath(location.pathname, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__[\"default\"])({}, child.props, {\n            path: path\n          })) : context.match;\n        }\n      });\n      return match ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(element, {\n        location: location,\n        computedMatch: match\n      }) : null;\n    });\n  };\n\n  return Switch;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n\nif (true) {\n  Switch.propTypes = {\n    children: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().node),\n    location: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object)\n  };\n\n  Switch.prototype.componentDidUpdate = function (prevProps) {\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!(this.props.location && !prevProps.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.') : 0;\n     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!(!this.props.location && prevProps.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.') : 0;\n  };\n}\n\n/**\n * A public higher-order component to access the imperative API\n */\n\nfunction withRouter(Component) {\n  var displayName = \"withRouter(\" + (Component.displayName || Component.name) + \")\";\n\n  var C = function C(props) {\n    var wrappedComponentRef = props.wrappedComponentRef,\n        remainingProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(props, [\"wrappedComponentRef\"]);\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(context.Consumer, null, function (context) {\n      !context ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"You should not use <\" + displayName + \" /> outside a <Router>\") : 0 : void 0;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_9__[\"default\"])({}, remainingProps, context, {\n        ref: wrappedComponentRef\n      }));\n    });\n  };\n\n  C.displayName = displayName;\n  C.WrappedComponent = Component;\n\n  if (true) {\n    C.propTypes = {\n      wrappedComponentRef: prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_6___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object)])\n    };\n  }\n\n  return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_3___default()(C, Component);\n}\n\nvar useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext;\nfunction useHistory() {\n  if (true) {\n    !(typeof useContext === \"function\") ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"You must use React >= 16.8 in order to use useHistory()\") : 0 : void 0;\n  }\n\n  return useContext(historyContext);\n}\nfunction useLocation() {\n  if (true) {\n    !(typeof useContext === \"function\") ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"You must use React >= 16.8 in order to use useLocation()\") : 0 : void 0;\n  }\n\n  return useContext(context).location;\n}\nfunction useParams() {\n  if (true) {\n    !(typeof useContext === \"function\") ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"You must use React >= 16.8 in order to use useParams()\") : 0 : void 0;\n  }\n\n  var match = useContext(context).match;\n  return match ? match.params : {};\n}\nfunction useRouteMatch(path) {\n  if (true) {\n    !(typeof useContext === \"function\") ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"You must use React >= 16.8 in order to use useRouteMatch()\") : 0 : void 0;\n  }\n\n  var location = useLocation();\n  var match = useContext(context).match;\n  return path ? matchPath(location.pathname, path) : match;\n}\n\nif (true) {\n  if (typeof window !== \"undefined\") {\n    var global$1 = window;\n    var key = \"__react_router_build__\";\n    var buildNames = {\n      cjs: \"CommonJS\",\n      esm: \"ES modules\",\n      umd: \"UMD\"\n    };\n\n    if (global$1[key] && global$1[key] !== \"esm\") {\n      var initialBuildName = buildNames[global$1[key]];\n      var secondaryBuildName = buildNames[\"esm\"]; // TODO: Add link to article that explains in detail how to avoid\n      // loading 2 different builds.\n\n      throw new Error(\"You are loading the \" + secondaryBuildName + \" build of React Router \" + (\"on a page that is already running the \" + initialBuildName + \" \") + \"build, so things won't work right.\");\n    }\n\n    global$1[key] = \"esm\";\n  }\n}\n\n\n//# sourceMappingURL=react-router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-router/esm/react-router.js\n");

/***/ }),

/***/ "./node_modules/react-router/node_modules/isarray/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-router/node_modules/isarray/index.js ***!
  \*****************************************************************/
/***/ ((module) => {

eval("module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL25vZGVfbW9kdWxlcy9pc2FycmF5L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcz9lZDA3Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoYXJyKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJyKSA9PSAnW29iamVjdCBBcnJheV0nO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-router/node_modules/isarray/index.js\n");

/***/ }),

/***/ "./node_modules/react-router/node_modules/path-to-regexp/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/react-router/node_modules/path-to-regexp/index.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var isarray = __webpack_require__(/*! isarray */ \"./node_modules/react-router/node_modules/isarray/index.js\")\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-router/node_modules/path-to-regexp/index.js\n");

/***/ }),

/***/ "./node_modules/resolve-pathname/esm/resolve-pathname.js":
/*!***************************************************************!*\
  !*** ./node_modules/resolve-pathname/esm/resolve-pathname.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n\n  var toParts = (to && to.split('/')) || [];\n  var fromParts = (from && from.split('/')) || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');\n\n  if (\n    mustEndAbs &&\n    fromParts[0] !== '' &&\n    (!fromParts[0] || !isAbsolute(fromParts[0]))\n  )\n    fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (resolvePathname);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1wYXRobmFtZS9lc20vcmVzb2x2ZS1wYXRobmFtZS5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9yZXNvbHZlLXBhdGhuYW1lL2VzbS9yZXNvbHZlLXBhdGhuYW1lLmpzPzk0MjEiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XG59XG5cbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICB9XG5cbiAgbGlzdC5wb3AoKTtcbn1cblxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZSh0bywgZnJvbSkge1xuICBpZiAoZnJvbSA9PT0gdW5kZWZpbmVkKSBmcm9tID0gJyc7XG5cbiAgdmFyIHRvUGFydHMgPSAodG8gJiYgdG8uc3BsaXQoJy8nKSkgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSAoZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2g7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XG5cbiAgaWYgKFxuICAgIG11c3RFbmRBYnMgJiZcbiAgICBmcm9tUGFydHNbMF0gIT09ICcnICYmXG4gICAgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSlcbiAgKVxuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/resolve-pathname/esm/resolve-pathname.js\n");

/***/ }),

/***/ "./packages/superset-ui-core/src/currency-format/CurrencyFormatter.ts":
/*!****************************************************************************!*\
  !*** ./packages/superset-ui-core/src/currency-format/CurrencyFormatter.ts ***!
  \****************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getCurrencySymbol: () => (/* binding */ getCurrencySymbol)\n/* harmony export */ });\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models */ \"./packages/superset-ui-core/src/models/ExtensibleFunction.ts\");\n/* harmony import */ var _number_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../number-format */ \"./packages/superset-ui-core/src/number-format/NumberFormats.ts\");\n/* harmony import */ var _number_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../number-format */ \"./packages/superset-ui-core/src/number-format/NumberFormatterRegistrySingleton.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nconst getCurrencySymbol = (currency) => {var _Intl$NumberFormat$fo;return (_Intl$NumberFormat$fo = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: currency.symbol\n  }).\n  formatToParts(1).\n  find((x) => x.type === 'currency')) == null ? void 0 : _Intl$NumberFormat$fo.value;};\nclass CurrencyFormatter extends _models__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n\n\n  constructor(config) {\n    super((value) => this.format(value));this.d3Format = void 0;this.locale = void 0;this.currency = void 0;\n    this.d3Format = config.d3Format || _number_format__WEBPACK_IMPORTED_MODULE_1__[\"default\"].SMART_NUMBER;\n    this.currency = config.currency;\n    this.locale = config.locale || 'en-US';\n  }\n  hasValidCurrency() {var _this$currency;\n    return Boolean((_this$currency = this.currency) == null ? void 0 : _this$currency.symbol);\n  }\n  getNormalizedD3Format() {\n    return this.d3Format.replace(/\\$|%/g, '');\n  }\n  format(value) {\n    const formattedValue = (0,_number_format__WEBPACK_IMPORTED_MODULE_2__.getNumberFormatter)(this.getNormalizedD3Format())(value);\n    if (!this.hasValidCurrency()) {\n      return formattedValue;\n    }\n    if (this.currency.symbolPosition === 'prefix') {\n      return `${getCurrencySymbol(this.currency)} ${formattedValue}`;\n    }\n    return `${formattedValue} ${getCurrencySymbol(this.currency)}`;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}const _default = CurrencyFormatter;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getCurrencySymbol, \"getCurrencySymbol\", \"/app/superset-frontend/packages/superset-ui-core/src/currency-format/CurrencyFormatter.ts\");reactHotLoader.register(CurrencyFormatter, \"CurrencyFormatter\", \"/app/superset-frontend/packages/superset-ui-core/src/currency-format/CurrencyFormatter.ts\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/packages/superset-ui-core/src/currency-format/CurrencyFormatter.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9zdXBlcnNldC11aS1jb3JlL3NyYy9jdXJyZW5jeS1mb3JtYXQvQ3VycmVuY3lGb3JtYXR0ZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJBO0FBQ0E7QUFhQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFHQTtBQUNBOztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUFBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3BhY2thZ2VzL3N1cGVyc2V0LXVpLWNvcmUvc3JjL2N1cnJlbmN5LWZvcm1hdC9DdXJyZW5jeUZvcm1hdHRlci50cz8zODU1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgRXh0ZW5zaWJsZUZ1bmN0aW9uIH0gZnJvbSAnLi4vbW9kZWxzJztcbmltcG9ydCB7IGdldE51bWJlckZvcm1hdHRlciwgTnVtYmVyRm9ybWF0cyB9IGZyb20gJy4uL251bWJlci1mb3JtYXQnO1xuaW1wb3J0IHsgQ3VycmVuY3kgfSBmcm9tICcuLi9xdWVyeSc7XG5cbmludGVyZmFjZSBDdXJyZW5jeUZvcm1hdHRlckNvbmZpZyB7XG4gIGQzRm9ybWF0Pzogc3RyaW5nO1xuICBjdXJyZW5jeTogQ3VycmVuY3k7XG4gIGxvY2FsZT86IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIEN1cnJlbmN5Rm9ybWF0dGVyIHtcbiAgKHZhbHVlOiBudW1iZXIgfCBudWxsIHwgdW5kZWZpbmVkKTogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0Q3VycmVuY3lTeW1ib2wgPSAoY3VycmVuY3k6IEN1cnJlbmN5KSA9PlxuICBuZXcgSW50bC5OdW1iZXJGb3JtYXQoJ2VuLVVTJywge1xuICAgIHN0eWxlOiAnY3VycmVuY3knLFxuICAgIGN1cnJlbmN5OiBjdXJyZW5jeS5zeW1ib2wsXG4gIH0pXG4gICAgLmZvcm1hdFRvUGFydHMoMSlcbiAgICAuZmluZCh4ID0+IHgudHlwZSA9PT0gJ2N1cnJlbmN5Jyk/LnZhbHVlO1xuXG5jbGFzcyBDdXJyZW5jeUZvcm1hdHRlciBleHRlbmRzIEV4dGVuc2libGVGdW5jdGlvbiB7XG4gIGQzRm9ybWF0OiBzdHJpbmc7XG5cbiAgbG9jYWxlOiBzdHJpbmc7XG5cbiAgY3VycmVuY3k6IEN1cnJlbmN5O1xuXG4gIGNvbnN0cnVjdG9yKGNvbmZpZzogQ3VycmVuY3lGb3JtYXR0ZXJDb25maWcpIHtcbiAgICBzdXBlcigodmFsdWU6IG51bWJlcikgPT4gdGhpcy5mb3JtYXQodmFsdWUpKTtcbiAgICB0aGlzLmQzRm9ybWF0ID0gY29uZmlnLmQzRm9ybWF0IHx8IE51bWJlckZvcm1hdHMuU01BUlRfTlVNQkVSO1xuICAgIHRoaXMuY3VycmVuY3kgPSBjb25maWcuY3VycmVuY3k7XG4gICAgdGhpcy5sb2NhbGUgPSBjb25maWcubG9jYWxlIHx8ICdlbi1VUyc7XG4gIH1cblxuICBoYXNWYWxpZEN1cnJlbmN5KCkge1xuICAgIHJldHVybiBCb29sZWFuKHRoaXMuY3VycmVuY3k/LnN5bWJvbCk7XG4gIH1cblxuICBnZXROb3JtYWxpemVkRDNGb3JtYXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZDNGb3JtYXQucmVwbGFjZSgvXFwkfCUvZywgJycpO1xuICB9XG5cbiAgZm9ybWF0KHZhbHVlOiBudW1iZXIpIHtcbiAgICBjb25zdCBmb3JtYXR0ZWRWYWx1ZSA9IGdldE51bWJlckZvcm1hdHRlcih0aGlzLmdldE5vcm1hbGl6ZWREM0Zvcm1hdCgpKShcbiAgICAgIHZhbHVlLFxuICAgICk7XG4gICAgaWYgKCF0aGlzLmhhc1ZhbGlkQ3VycmVuY3koKSkge1xuICAgICAgcmV0dXJuIGZvcm1hdHRlZFZhbHVlIGFzIHN0cmluZztcbiAgICB9XG5cbiAgICBpZiAodGhpcy5jdXJyZW5jeS5zeW1ib2xQb3NpdGlvbiA9PT0gJ3ByZWZpeCcpIHtcbiAgICAgIHJldHVybiBgJHtnZXRDdXJyZW5jeVN5bWJvbCh0aGlzLmN1cnJlbmN5KX0gJHtmb3JtYXR0ZWRWYWx1ZX1gO1xuICAgIH1cbiAgICByZXR1cm4gYCR7Zm9ybWF0dGVkVmFsdWV9ICR7Z2V0Q3VycmVuY3lTeW1ib2wodGhpcy5jdXJyZW5jeSl9YDtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDdXJyZW5jeUZvcm1hdHRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/superset-ui-core/src/currency-format/CurrencyFormatter.ts\n");

/***/ }),

/***/ "./src/components/Badge/index.tsx":
/*!****************************************!*\
  !*** ./src/components/Badge/index.tsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime-corejs3/helpers/extends */ \"./node_modules/@babel/runtime-corejs3/helpers/esm/extends.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! antd */ \"./node_modules/antd/es/badge/index.js\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\nconst Badge = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_1__.styled)((\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_ref) => {let { textColor, color, text, ...props } = _ref;return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__.jsx)(antd__WEBPACK_IMPORTED_MODULE_3__[\"default\"], (0,_babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({ text: text, color: text ? color : undefined }, props));})`\n  & > sup {\n    padding: 0 ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 2;}}px;\n    background: ${(_ref3) => {let { theme, color } = _ref3;return color || theme.colors.primary.base;}};\n    color: ${(_ref4) => {let { theme, textColor } = _ref4;return textColor || theme.colors.grayscale.light5;}};\n  }\n`;const _default =\nBadge;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Badge, \"Badge\", \"/app/superset-frontend/src/components/Badge/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/Badge/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9CYWRnZS9pbmRleC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTtBQUNBO0FBQ0E7QUFPQTtBQUVBO0FBQUE7O0FBS0E7QUFDQTtBQUNBOztBQUdBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3NyYy9jb21wb25lbnRzL0JhZGdlL2luZGV4LnRzeD9jMzhiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBzdHlsZWQgfSBmcm9tICdAc3VwZXJzZXQtdWkvY29yZSc7XG5pbXBvcnQgeyBCYWRnZSBhcyBBbnRkQmFkZ2UgfSBmcm9tICdhbnRkJztcbmltcG9ydCB7IEJhZGdlUHJvcHMgYXMgQW50ZEJhZGdlUHJvcHMgfSBmcm9tICdhbnRkL2xpYi9iYWRnZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmFkZ2VQcm9wcyBleHRlbmRzIEFudGRCYWRnZVByb3BzIHtcbiAgdGV4dENvbG9yPzogc3RyaW5nO1xufVxuXG5jb25zdCBCYWRnZSA9IHN0eWxlZChcbiAgKFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbiAgICB7IHRleHRDb2xvciwgY29sb3IsIHRleHQsIC4uLnByb3BzIH06IEJhZGdlUHJvcHMsXG4gICkgPT4gPEFudGRCYWRnZSB0ZXh0PXt0ZXh0fSBjb2xvcj17dGV4dCA/IGNvbG9yIDogdW5kZWZpbmVkfSB7Li4ucHJvcHN9IC8+LFxuKWBcbiAgJiA+IHN1cCB7XG4gICAgcGFkZGluZzogMCAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0ICogMn1weDtcbiAgICBiYWNrZ3JvdW5kOiAkeyh7IHRoZW1lLCBjb2xvciB9KSA9PiBjb2xvciB8fCB0aGVtZS5jb2xvcnMucHJpbWFyeS5iYXNlfTtcbiAgICBjb2xvcjogJHsoeyB0aGVtZSwgdGV4dENvbG9yIH0pID0+XG4gICAgICB0ZXh0Q29sb3IgfHwgdGhlbWUuY29sb3JzLmdyYXlzY2FsZS5saWdodDV9O1xuICB9XG5gO1xuXG5leHBvcnQgZGVmYXVsdCBCYWRnZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Badge/index.tsx\n");

/***/ }),

/***/ "./src/components/Card/index.tsx":
/*!***************************************!*\
  !*** ./src/components/Card/index.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime-corejs3/helpers/extends */ \"./node_modules/@babel/runtime-corejs3/helpers/esm/extends.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var antd_lib_card__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd/lib/card */ \"./node_modules/antd/lib/card/index.js\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nconst Card = (_ref) => {let { padded, ...props } = _ref;return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_1__.jsx)(antd_lib_card__WEBPACK_IMPORTED_MODULE_2__[\"default\"], (0,_babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, props, { css: (theme) => ({\n      backgroundColor: theme.colors.grayscale.light4,\n      borderRadius: theme.borderRadius,\n      '.ant-card-body': {\n        padding: padded ? theme.gridUnit * 4 : theme.gridUnit\n      }\n    }) }));};const _default =\nCard;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Card, \"Card\", \"/app/superset-frontend/src/components/Card/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/Card/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9DYXJkL2luZGV4LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7QUFFQTtBQU1BO0FBSUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFJQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vc3JjL2NvbXBvbmVudHMvQ2FyZC9pbmRleC50c3g/OGU3MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU3VwZXJzZXRUaGVtZSB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcbmltcG9ydCBBbnRkQ2FyZCwgeyBDYXJkUHJvcHMgYXMgQW50ZENhcmRQcm9wcyB9IGZyb20gJ2FudGQvbGliL2NhcmQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIENhcmRQcm9wcyBleHRlbmRzIEFudGRDYXJkUHJvcHMge1xuICBwYWRkZWQ/OiBib29sZWFuO1xufVxuXG5jb25zdCBDYXJkID0gKHsgcGFkZGVkLCAuLi5wcm9wcyB9OiBDYXJkUHJvcHMpID0+IChcbiAgPEFudGRDYXJkXG4gICAgey4uLnByb3BzfVxuICAgIGNzcz17KHRoZW1lOiBTdXBlcnNldFRoZW1lKSA9PiAoe1xuICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmxpZ2h0NCxcbiAgICAgIGJvcmRlclJhZGl1czogdGhlbWUuYm9yZGVyUmFkaXVzLFxuICAgICAgJy5hbnQtY2FyZC1ib2R5Jzoge1xuICAgICAgICBwYWRkaW5nOiBwYWRkZWQgPyB0aGVtZS5ncmlkVW5pdCAqIDQgOiB0aGVtZS5ncmlkVW5pdCxcbiAgICAgIH0sXG4gICAgfSl9XG4gIC8+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBDYXJkO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/Card/index.tsx\n");

/***/ }),

/***/ "./src/components/CertifiedBadge/index.tsx":
/*!*************************************************!*\
  !*** ./src/components/CertifiedBadge/index.tsx ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var src_components_Tooltip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Tooltip */ \"./src/components/Tooltip/index.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\nfunction CertifiedBadge(_ref) {let { certifiedBy, details, size = 'l' } = _ref;\n  const theme = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.useTheme)();\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(src_components_Tooltip__WEBPACK_IMPORTED_MODULE_2__.Tooltip, { id: \"certified-details-tooltip\", title: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n    certifiedBy && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"strong\", null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.t)('Certified by %s', certifiedBy))\n    ),\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", null, details)\n    ) },\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Certified, { iconColor: theme.colors.primary.base, iconSize: size })\n  );\n}__signature__(CertifiedBadge, \"useTheme{theme}\", () => [_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.useTheme]);const _default =\nCertifiedBadge;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CertifiedBadge, \"CertifiedBadge\", \"/app/superset-frontend/src/components/CertifiedBadge/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/CertifiedBadge/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9DZXJ0aWZpZWRCYWRnZS9pbmRleC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUtBO0FBRUE7QUFLQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBR0E7QUFDQTtBQUVBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3NyYy9jb21wb25lbnRzL0NlcnRpZmllZEJhZGdlL2luZGV4LnRzeD9hZTU3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB0LCB1c2VUaGVtZSB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcbmltcG9ydCBJY29ucywgeyBJY29uVHlwZSB9IGZyb20gJ3NyYy9jb21wb25lbnRzL0ljb25zJztcbmltcG9ydCB7IFRvb2x0aXAgfSBmcm9tICdzcmMvY29tcG9uZW50cy9Ub29sdGlwJztcblxuZXhwb3J0IGludGVyZmFjZSBDZXJ0aWZpZWRCYWRnZVByb3BzIHtcbiAgY2VydGlmaWVkQnk/OiBzdHJpbmc7XG4gIGRldGFpbHM/OiBzdHJpbmc7XG4gIHNpemU/OiBJY29uVHlwZVsnaWNvblNpemUnXTtcbn1cblxuZnVuY3Rpb24gQ2VydGlmaWVkQmFkZ2Uoe1xuICBjZXJ0aWZpZWRCeSxcbiAgZGV0YWlscyxcbiAgc2l6ZSA9ICdsJyxcbn06IENlcnRpZmllZEJhZGdlUHJvcHMpIHtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuXG4gIHJldHVybiAoXG4gICAgPFRvb2x0aXBcbiAgICAgIGlkPVwiY2VydGlmaWVkLWRldGFpbHMtdG9vbHRpcFwiXG4gICAgICB0aXRsZT17XG4gICAgICAgIDw+XG4gICAgICAgICAge2NlcnRpZmllZEJ5ICYmIChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIDxzdHJvbmc+e3QoJ0NlcnRpZmllZCBieSAlcycsIGNlcnRpZmllZEJ5KX08L3N0cm9uZz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICl9XG4gICAgICAgICAgPGRpdj57ZGV0YWlsc308L2Rpdj5cbiAgICAgICAgPC8+XG4gICAgICB9XG4gICAgPlxuICAgICAgPEljb25zLkNlcnRpZmllZCBpY29uQ29sb3I9e3RoZW1lLmNvbG9ycy5wcmltYXJ5LmJhc2V9IGljb25TaXplPXtzaXplfSAvPlxuICAgIDwvVG9vbHRpcD5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgQ2VydGlmaWVkQmFkZ2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/CertifiedBadge/index.tsx\n");

/***/ }),

/***/ "./src/components/DatabaseSelector/index.tsx":
/*!***************************************************!*\
  !*** ./src/components/DatabaseSelector/index.tsx ***!
  \***************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DatabaseSelector)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/connection/SupersetClient.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rison */ \"./node_modules/rison/js/rison.js\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rison__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var src_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components */ \"./src/components/index.ts\");\n/* harmony import */ var src_components_Label__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/Label */ \"./src/components/Label/index.tsx\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* harmony import */ var src_components_RefreshLabel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/RefreshLabel */ \"./src/components/RefreshLabel/index.tsx\");\n/* harmony import */ var src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/components/MessageToasts/withToasts */ \"./src/components/MessageToasts/withToasts.tsx\");\n/* harmony import */ var src_hooks_apiResources__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/hooks/apiResources */ \"./src/hooks/apiResources/index.ts\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\n\n\n\nconst DatabaseSelectorWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_8__.styled.div`\n  ${(_ref) => {let { theme } = _ref;return `\n    .refresh {\n      display: flex;\n      align-items: center;\n      width: 30px;\n      margin-left: ${theme.gridUnit}px;\n      margin-top: ${theme.gridUnit * 5}px;\n    }\n\n    .section {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n    }\n\n    .select {\n      width: calc(100% - 30px - ${theme.gridUnit}px);\n      flex: 1;\n    }\n\n    & > div {\n      margin-bottom: ${theme.gridUnit * 4}px;\n    }\n  `;}}\n`;\nconst LabelStyle = _superset_ui_core__WEBPACK_IMPORTED_MODULE_8__.styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit - 2;}}px;\n\n  .backend {\n    overflow: visible;\n  }\n\n  .name {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\nconst SelectLabel = (_ref3) => {let { backend, databaseName } = _ref3;return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(LabelStyle, null,\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components_Label__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { className: \"backend\" }, backend),\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"span\", { className: \"name\", title: databaseName },\n  databaseName\n  )\n  );};\nconst EMPTY_SCHEMA_OPTIONS = [];\nfunction DatabaseSelector(_ref4) {let { db, formMode = false, emptyState, getDbList, handleError, isDatabaseSelectEnabled = true, onDbChange, onEmptyResults, onSchemaChange, readOnly = false, schema, sqlLabMode = false } = _ref4;\n  const [currentDb, setCurrentDb] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  const [currentSchema, setCurrentSchema] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(schema ? { label: schema, value: schema, title: schema } : undefined);\n  const { addSuccessToast } = (0,src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_6__.useToasts)();\n  const loadDatabases = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => async (search, page, pageSize) => {\n    const queryParams = rison__WEBPACK_IMPORTED_MODULE_1___default().encode({\n      order_columns: 'database_name',\n      order_direction: 'asc',\n      page,\n      page_size: pageSize,\n      ...(formMode || !sqlLabMode ?\n      { filters: [{ col: 'database_name', opr: 'ct', value: search }] } :\n      {\n        filters: [\n        { col: 'database_name', opr: 'ct', value: search },\n        {\n          col: 'expose_in_sqllab',\n          opr: 'eq',\n          value: true\n        }]\n\n      })\n    });\n    const endpoint = `/api/v1/database/?q=${queryParams}`;\n    return _superset_ui_core__WEBPACK_IMPORTED_MODULE_10__[\"default\"].get({ endpoint }).then((_ref5) => {let { json } = _ref5;\n      const { result } = json;\n      if (getDbList) {\n        getDbList(result);\n      }\n      if (result.length === 0) {\n        if (onEmptyResults)\n        onEmptyResults(search);\n      }\n      const options = result.map((row) => ({\n        label: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(SelectLabel, { backend: row.backend, databaseName: row.database_name }),\n        value: row.id,\n        id: row.id,\n        database_name: row.database_name,\n        backend: row.backend\n      }));\n      return {\n        data: options,\n        totalCount: options.length\n      };\n    });\n  }, [formMode, getDbList, sqlLabMode]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    setCurrentDb((current) => (current == null ? void 0 : current.id) !== (db == null ? void 0 : db.id) ?\n    db ?\n    {\n      label: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(SelectLabel, { backend: db.backend, databaseName: db.database_name }),\n      value: db.id,\n      ...db\n    } :\n    undefined :\n    current);\n  }, [db]);\n  function changeSchema(schema) {\n    setCurrentSchema(schema);\n    if (onSchemaChange) {\n      onSchemaChange(schema == null ? void 0 : schema.value);\n    }\n  }\n  const { data, isFetching: loadingSchemas, refetch } = (0,src_hooks_apiResources__WEBPACK_IMPORTED_MODULE_7__.useSchemas)({\n    dbId: currentDb == null ? void 0 : currentDb.value,\n    onSuccess: (schemas, isFetched) => {\n      if (schemas.length === 1) {\n        changeSchema(schemas[0]);\n      } else\n      if (!schemas.find((schemaOption) => schema === schemaOption.value)) {\n        changeSchema(undefined);\n      }\n      if (isFetched) {\n        addSuccessToast('List refreshed');\n      }\n    },\n    onError: () => handleError((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('There was an error loading the schemas'))\n  });\n  const schemaOptions = data || EMPTY_SCHEMA_OPTIONS;\n  function changeDataBase(value, database) {\n    setCurrentDb(database);\n    setCurrentSchema(undefined);\n    if (onDbChange) {\n      onDbChange(database);\n    }\n    if (onSchemaChange) {\n      onSchemaChange(undefined);\n    }\n  }\n  function renderSelectRow(select, refreshBtn) {\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"div\", { className: \"section\" },\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"span\", { className: \"select\" }, select),\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"span\", { className: \"refresh\" }, refreshBtn)\n    );\n  }\n  function renderDatabaseSelect() {\n    return renderSelectRow((0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_2__.AsyncSelect, { ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('Select database or type to search databases'), optionFilterProps: ['database_name', 'value'], \"data-test\": \"select-database\", header: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_4__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('Database')), lazyLoading: false, notFoundContent: emptyState, onChange: changeDataBase, value: currentDb, placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('Select database or type to search databases'), disabled: !isDatabaseSelectEnabled || readOnly, options: loadDatabases }), null);\n  }\n  function renderSchemaSelect() {\n    const refreshIcon = !readOnly && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components_RefreshLabel__WEBPACK_IMPORTED_MODULE_5__[\"default\"], { onClick: () => refetch(), tooltipContent: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('Force refresh schema list') });\n    return renderSelectRow((0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_2__.Select, { ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('Select schema or type to search schemas'), disabled: !currentDb || readOnly, header: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_4__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('Schema')), labelInValue: true, loading: loadingSchemas, name: \"select-schema\", notFoundContent: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('No compatible schema found'), placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('Select schema or type to search schemas'), onChange: (item) => changeSchema(item), options: schemaOptions, showSearch: true, value: currentSchema }), refreshIcon);\n  }\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(DatabaseSelectorWrapper, { \"data-test\": \"DatabaseSelector\" },\n  renderDatabaseSelect(),\n  renderSchemaSelect()\n  );\n}__signature__(DatabaseSelector, \"useState{[currentDb, setCurrentDb]}\\nuseState{[currentSchema, setCurrentSchema](schema ? { label: schema, value: schema, title: schema } : undefined)}\\nuseToasts{{ addSuccessToast }}\\nuseMemo{loadDatabases}\\nuseEffect{}\\nuseSchemas{{ data, isFetching: loadingSchemas, refetch, }}\", () => [src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_6__.useToasts, src_hooks_apiResources__WEBPACK_IMPORTED_MODULE_7__.useSchemas]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatabaseSelectorWrapper, \"DatabaseSelectorWrapper\", \"/app/superset-frontend/src/components/DatabaseSelector/index.tsx\");reactHotLoader.register(LabelStyle, \"LabelStyle\", \"/app/superset-frontend/src/components/DatabaseSelector/index.tsx\");reactHotLoader.register(SelectLabel, \"SelectLabel\", \"/app/superset-frontend/src/components/DatabaseSelector/index.tsx\");reactHotLoader.register(EMPTY_SCHEMA_OPTIONS, \"EMPTY_SCHEMA_OPTIONS\", \"/app/superset-frontend/src/components/DatabaseSelector/index.tsx\");reactHotLoader.register(DatabaseSelector, \"DatabaseSelector\", \"/app/superset-frontend/src/components/DatabaseSelector/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/DatabaseSelector/index.tsx\n");

/***/ }),

/***/ "./src/components/Datasource/CollectionTable.tsx":
/*!*******************************************************!*\
  !*** ./src/components/Datasource/CollectionTable.tsx ***!
  \*******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CRUDCollection)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @babel/runtime-corejs3/helpers/extends */ \"./node_modules/@babel/runtime-corejs3/helpers/esm/extends.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! shortid */ \"./node_modules/shortid/index.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(shortid__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _superset_ui_chart_controls__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @superset-ui/chart-controls */ \"./packages/superset-ui-chart-controls/src/components/InfoTooltipWithTrigger.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var src_components_Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Button */ \"./src/components/Button/index.tsx\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var _Fieldset__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Fieldset */ \"./src/components/Datasource/Fieldset.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ \"./src/components/Datasource/utils.js\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\n\n\nvar SortOrder;\n(function (SortOrder) {\n  SortOrder[SortOrder[\"asc\"] = 1] = \"asc\";\n  SortOrder[SortOrder[\"desc\"] = 2] = \"desc\";\n  SortOrder[SortOrder[\"unsort\"] = 0] = \"unsort\";\n})(SortOrder || (SortOrder = {}));\nfunction createCollectionArray(collection) {\n  return Object.keys(collection).map((k) => collection[k]);\n}\nfunction createKeyedCollection(arr) {\n  const collectionArray = arr.map((o) => ({\n    ...o,\n    id: o.id || shortid__WEBPACK_IMPORTED_MODULE_1___default().generate()\n  }));\n  const collection = {};\n  collectionArray.forEach((o) => {\n    collection[o.id] = o;\n  });\n  return {\n    collection,\n    collectionArray\n  };\n}\nconst CrudTableWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_6__.styled.div`\n  ${(_ref) => {let { stickyHeader } = _ref;return stickyHeader &&\n  `\n      height: 350px;\n      overflow-y: auto;\n      overflow-x: auto;\n\n      .table {\n        min-width: 800px;\n      }\n      thead th {\n        background: #fff;\n        position: sticky;\n        top: 0;\n        z-index: 9;\n        min\n      }\n    `;}}\n  ${(_ref2) => {let { theme } = _ref2;return `\n    th span {\n      vertical-align: ${theme.gridUnit * -2}px;\n    }\n    .text-right {\n      text-align: right;\n    }\n    .empty-collection {\n      padding: ${theme.gridUnit * 2 + 2}px;\n    }\n    .tiny-cell {\n      width: ${theme.gridUnit + 1}px;\n    }\n    i.fa-caret-down,\n    i.fa-caret-up {\n      width: ${theme.gridUnit + 1}px;\n    }\n    td.expanded {\n      border-top: 0;\n      padding: 0;\n    }\n  `;}}\n`;\nconst CrudButtonWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_6__.styled.div`\n  text-align: right;\n  ${(_ref3) => {let { theme } = _ref3;return `margin-bottom: ${theme.gridUnit * 2}px`;}}\n`;\nconst StyledButtonWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_6__.styled.span`\n  ${(_ref4) => {let { theme } = _ref4;return `\n    margin-top: ${theme.gridUnit * 3}px;\n    margin-left: ${theme.gridUnit * 3}px;\n  `;}}\n`;\nclass CRUDCollection extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n  constructor(props) {\n    super(props);\n    const { collection, collectionArray } = createKeyedCollection(props.collection);\n    this.state = {\n      expandedColumns: {},\n      collection,\n      collectionArray,\n      sortColumn: '',\n      sort: 0\n    };\n    this.renderItem = this.renderItem.bind(this);\n    this.onAddItem = this.onAddItem.bind(this);\n    this.renderExpandableSection = this.renderExpandableSection.bind(this);\n    this.getLabel = this.getLabel.bind(this);\n    this.onFieldsetChange = this.onFieldsetChange.bind(this);\n    this.renderTableBody = this.renderTableBody.bind(this);\n    this.changeCollection = this.changeCollection.bind(this);\n    this.sortColumn = this.sortColumn.bind(this);\n    this.renderSortIcon = this.renderSortIcon.bind(this);\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.collection !== this.props.collection) {\n      const { collection, collectionArray } = createKeyedCollection(nextProps.collection);\n      this.setState({\n        collection,\n        collectionArray\n      });\n    }\n  }\n  onCellChange(id, col, val) {\n    this.changeCollection({\n      ...this.state.collection,\n      [id]: {\n        ...this.state.collection[id],\n        [col]: val\n      }\n    });\n  }\n  onAddItem() {\n    if (this.props.itemGenerator) {\n      let newItem = this.props.itemGenerator();\n      if (!newItem.id) {\n        newItem = { ...newItem, id: shortid__WEBPACK_IMPORTED_MODULE_1___default().generate() };\n      }\n      this.changeCollection(this.state.collection, newItem);\n    }\n  }\n  onFieldsetChange(item) {\n    this.changeCollection({\n      ...this.state.collection,\n      [item.id]: item\n    });\n  }\n  getLabel(col) {\n    const { columnLabels } = this.props;\n    let label = columnLabels != null && columnLabels[col] ? columnLabels[col] : col;\n    if (label.startsWith('__')) {\n      // special label-free columns (ie: caret for expand, delete cross)\n      label = '';\n    }\n    return label;\n  }\n  getTooltip(col) {\n    const { columnLabelTooltips } = this.props;\n    return columnLabelTooltips == null ? void 0 : columnLabelTooltips[col];\n  }\n  changeCollection(collection, newItem) {\n    this.setState({ collection });\n    if (this.props.onChange) {\n      const collectionArray = this.state.collectionArray.\n      map((c) => collection[c.id])\n      // filter out removed items\n      .filter((c) => c !== undefined);\n      if (newItem) {\n        collectionArray.unshift(newItem);\n      }\n      this.props.onChange(collectionArray);\n    }\n  }\n  deleteItem(id) {\n    const newColl = { ...this.state.collection };\n    delete newColl[id];\n    this.changeCollection(newColl);\n  }\n  effectiveTableColumns() {\n    const { tableColumns, allowDeletes, expandFieldset } = this.props;\n    const cols = allowDeletes ?\n    tableColumns.concat(['__actions']) :\n    tableColumns;\n    return expandFieldset ? ['__expand'].concat(cols) : cols;\n  }\n  toggleExpand(id) {\n    this.onCellChange(id, '__expanded', false);\n    this.setState((prevState) => ({\n      expandedColumns: {\n        ...prevState.expandedColumns,\n        [id]: !prevState.expandedColumns[id]\n      }\n    }));\n  }\n  sortColumn(col, sort) {if (sort === void 0) {sort = SortOrder.unsort;}\n    const { sortColumns } = this.props;\n    // default sort logic sorting string, boolean and number\n    const compareSort = (m, n) => {\n      if (typeof m === 'string') {\n        return (m || ' ').localeCompare(n);\n      }\n      return m - n;\n    };\n    return () => {\n      if (sortColumns != null && sortColumns.includes(col)) {\n        // display in unsorted order if no sort specified\n        if (sort === SortOrder.unsort) {\n          const { collection } = createKeyedCollection(this.props.collection);\n          const collectionArray = createCollectionArray(collection);\n          this.setState({\n            collectionArray,\n            sortColumn: '',\n            sort\n          });\n          return;\n        }\n        // newly ordered collection\n        const sorted = [...this.state.collectionArray].sort((a, b) => compareSort(a[col], b[col]));\n        const newCollection = sort === SortOrder.asc ? sorted : sorted.reverse();\n        this.setState((prevState) => ({\n          ...prevState,\n          collectionArray: newCollection,\n          sortColumn: col,\n          sort\n        }));\n      }\n    };\n  }\n  renderSortIcon(col) {\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.asc) {\n      return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_3__[\"default\"].SortAsc, { onClick: this.sortColumn(col, 2) });\n    }\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.desc) {\n      return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_3__[\"default\"].SortDesc, { onClick: this.sortColumn(col, 0) });\n    }\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Sort, { onClick: this.sortColumn(col, 1) });\n  }\n  renderTH(col, sortColumns) {\n    const tooltip = this.getTooltip(col);\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"th\", { key: col, className: \"no-wrap\" },\n    this.getLabel(col),\n    tooltip && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n    ' ',\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(_superset_ui_chart_controls__WEBPACK_IMPORTED_MODULE_8__.InfoTooltipWithTrigger, { label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_9__.t)('description'), tooltip: tooltip })\n    ),\n    (sortColumns == null ? void 0 : sortColumns.includes(col)) && this.renderSortIcon(col)\n    );\n  }\n  renderHeaderRow() {\n    const cols = this.effectiveTableColumns();\n    const { allowDeletes, expandFieldset, extraButtons, sortColumns } = this.props;\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"thead\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"tr\", null,\n    expandFieldset && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"th\", { \"aria-label\": \"Expand\", className: \"tiny-cell\" }),\n    cols.map((col) => this.renderTH(col, sortColumns)),\n    extraButtons,\n    allowDeletes && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"th\", { key: \"delete-item\", \"aria-label\": \"Delete\", className: \"tiny-cell\" })\n    )\n    );\n  }\n  renderExpandableSection(item) {\n    const propsGenerator = () => ({ item, onChange: this.onFieldsetChange });\n    return (0,_utils__WEBPACK_IMPORTED_MODULE_5__.recurseReactClone)(this.props.expandFieldset, _Fieldset__WEBPACK_IMPORTED_MODULE_4__[\"default\"], propsGenerator);\n  }\n  getCellProps(record, col) {var _this$props$itemCellP;\n    const cellPropsFn = (_this$props$itemCellP = this.props.itemCellProps) == null ? void 0 : _this$props$itemCellP[col];\n    const val = record[col];\n    return cellPropsFn ? cellPropsFn(val, this.getLabel(col), record) : {};\n  }\n  renderCell(record, col) {var _this$props$itemRende;\n    const renderer = (_this$props$itemRende = this.props.itemRenderers) == null ? void 0 : _this$props$itemRende[col];\n    const val = record[col];\n    const onChange = this.onCellChange.bind(this, record.id, col);\n    return renderer ? renderer(val, onChange, this.getLabel(col), record) : val;\n  }\n  renderItem(record) {\n    const { allowAddItem, allowDeletes, expandFieldset, tableColumns } = this.props;\n    /* eslint-disable no-underscore-dangle */\n    const isExpanded = !!this.state.expandedColumns[record.id] || record.__expanded;\n    let tds = [];\n    if (expandFieldset) {\n      tds.push((0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"td\", { key: \"__expand\", className: \"expand\" },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"i\", { role: \"button\", \"aria-label\": \"Toggle expand\", tabIndex: 0, className: `fa fa-caret-${isExpanded ? 'down' : 'right'} text-primary pointer`, onClick: this.toggleExpand.bind(this, record.id) })\n      ));\n    }\n    tds = tds.concat(tableColumns.map((col) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"td\", (0,_babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_10__[\"default\"])({}, this.getCellProps(record, col), { key: col }),\n    this.renderCell(record, col)\n    )));\n    if (allowAddItem) {\n      tds.push((0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"td\", { key: \"add\" }));\n    }\n    if (allowDeletes) {\n      tds.push((0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"td\", { key: \"__actions\", \"data-test\": \"crud-delete-option\", className: \"text-primary\" },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Trash, { \"aria-label\": \"Delete item\", className: \"pointer\", \"data-test\": \"crud-delete-icon\", role: \"button\", tabIndex: 0, onClick: this.deleteItem.bind(this, record.id) })\n      ));\n    }\n    const trs = [\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"tr\", { 'data-test': 'table-row', className: \"row\", key: record.id },\n    tds\n    )];\n\n    if (isExpanded) {\n      trs.push((0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"tr\", { className: \"exp\", key: `exp__${record.id}` },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"td\", { colSpan: this.effectiveTableColumns().length, className: \"expanded\" },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"div\", null, this.renderExpandableSection(record))\n      )\n      ));\n    }\n    return trs;\n  }\n  renderEmptyCell() {\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"tr\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"td\", { className: \"empty-collection\" }, this.props.emptyMessage)\n    );\n  }\n  renderTableBody() {\n    const data = this.state.collectionArray;\n    const content = data.length ?\n    data.map((d) => this.renderItem(d)) :\n    this.renderEmptyCell();\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"tbody\", { \"data-test\": \"table-content-rows\" }, content);\n  }\n  render() {\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(CrudButtonWrapper, null,\n    this.props.allowAddItem && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(StyledButtonWrapper, null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_2__[\"default\"], { buttonSize: \"small\", buttonStyle: \"tertiary\", onClick: this.onAddItem, \"data-test\": \"add-item-button\" },\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"i\", { \"data-test\": \"crud-add-table-item\", className: \"fa fa-plus\" }), ' ',\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_9__.t)('Add item')\n    )\n    )\n    ),\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(CrudTableWrapper, { className: \"CRUD\", stickyHeader: this.props.stickyHeader },\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_7__.jsx)(\"table\", { \"data-test\": \"crud-table\", className: \"table\" },\n    this.renderHeaderRow(),\n    this.renderTableBody()\n    )\n    )\n    );\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SortOrder, \"SortOrder\", \"/app/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(createCollectionArray, \"createCollectionArray\", \"/app/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(createKeyedCollection, \"createKeyedCollection\", \"/app/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(CrudTableWrapper, \"CrudTableWrapper\", \"/app/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(CrudButtonWrapper, \"CrudButtonWrapper\", \"/app/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(StyledButtonWrapper, \"StyledButtonWrapper\", \"/app/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(CRUDCollection, \"CRUDCollection\", \"/app/superset-frontend/src/components/Datasource/CollectionTable.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Datasource/CollectionTable.tsx\n");

/***/ }),

/***/ "./src/components/Datasource/Field.tsx":
/*!*********************************************!*\
  !*** ./src/components/Datasource/Field.tsx ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Field)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* harmony import */ var src_components_Tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/Tooltip */ \"./src/components/Tooltip/index.tsx\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\nconst formItemInlineCss = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.css)`\n  .ant-form-item-control-input-content {\n    display: flex;\n    flex-direction: row;\n  }\n`;\nfunction Field(_ref) {let { fieldKey, value, label, description = null, control, onChange = () => {}, compact = false, inline } = _ref;\n  const onControlChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((newValue) => {\n    onChange(fieldKey, newValue);\n  }, [onChange, fieldKey]);\n  const hookedControl = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(control, {\n    value,\n    onChange: onControlChange\n  });\n  return (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_2__.FormItem, { label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_2__.FormLabel, { className: \"m-r-5\" },\n    label || fieldKey,\n    compact && description && (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Tooltip__WEBPACK_IMPORTED_MODULE_1__.Tooltip, { id: \"field-descr\", placement: \"right\", title: description },\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"i\", { className: \"fa fa-info-circle m-l-5\" })\n    )\n    ), css: inline && formItemInlineCss },\n  hookedControl,\n  !compact && description && (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"div\", { css: (theme) => ({\n      color: theme.colors.grayscale.base,\n      [inline ? 'marginLeft' : 'marginTop']: theme.gridUnit\n    }) },\n  description\n  )\n  );\n}__signature__(Field, \"useCallback{onControlChange}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(formItemInlineCss, \"formItemInlineCss\", \"/app/superset-frontend/src/components/Datasource/Field.tsx\");reactHotLoader.register(Field, \"Field\", \"/app/superset-frontend/src/components/Datasource/Field.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9EYXRhc291cmNlL0ZpZWxkLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7QUFLQTtBQWFBO0FBVUE7QUFFQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFJQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3NyYy9jb21wb25lbnRzL0RhdGFzb3VyY2UvRmllbGQudHN4P2IwNTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzLCBTdXBlcnNldFRoZW1lIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuaW1wb3J0IHsgVG9vbHRpcCB9IGZyb20gJ3NyYy9jb21wb25lbnRzL1Rvb2x0aXAnO1xuaW1wb3J0IHsgRm9ybUl0ZW0sIEZvcm1MYWJlbCB9IGZyb20gJ3NyYy9jb21wb25lbnRzL0Zvcm0nO1xuXG5jb25zdCBmb3JtSXRlbUlubGluZUNzcyA9IGNzc2BcbiAgLmFudC1mb3JtLWl0ZW0tY29udHJvbC1pbnB1dC1jb250ZW50IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cbmA7XG5cbmludGVyZmFjZSBGaWVsZFByb3BzPFY+IHtcbiAgZmllbGRLZXk6IHN0cmluZztcbiAgdmFsdWU/OiBWO1xuICBsYWJlbDogc3RyaW5nO1xuICBkZXNjcmlwdGlvbj86IFJlYWN0LlJlYWN0Tm9kZTtcbiAgY29udHJvbDogUmVhY3QuUmVhY3RFbGVtZW50O1xuICBvbkNoYW5nZTogKGZpZWxkS2V5OiBzdHJpbmcsIG5ld1ZhbHVlOiBWKSA9PiB2b2lkO1xuICBjb21wYWN0OiBib29sZWFuO1xuICBpbmxpbmU6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEZpZWxkPFY+KHtcbiAgZmllbGRLZXksXG4gIHZhbHVlLFxuICBsYWJlbCxcbiAgZGVzY3JpcHRpb24gPSBudWxsLFxuICBjb250cm9sLFxuICBvbkNoYW5nZSA9ICgpID0+IHt9LFxuICBjb21wYWN0ID0gZmFsc2UsXG4gIGlubGluZSxcbn06IEZpZWxkUHJvcHM8Vj4pIHtcbiAgY29uc3Qgb25Db250cm9sQ2hhbmdlID0gdXNlQ2FsbGJhY2soXG4gICAgbmV3VmFsdWUgPT4ge1xuICAgICAgb25DaGFuZ2UoZmllbGRLZXksIG5ld1ZhbHVlKTtcbiAgICB9LFxuICAgIFtvbkNoYW5nZSwgZmllbGRLZXldLFxuICApO1xuXG4gIGNvbnN0IGhvb2tlZENvbnRyb2wgPSBSZWFjdC5jbG9uZUVsZW1lbnQoY29udHJvbCwge1xuICAgIHZhbHVlLFxuICAgIG9uQ2hhbmdlOiBvbkNvbnRyb2xDaGFuZ2UsXG4gIH0pO1xuICByZXR1cm4gKFxuICAgIDxGb3JtSXRlbVxuICAgICAgbGFiZWw9e1xuICAgICAgICA8Rm9ybUxhYmVsIGNsYXNzTmFtZT1cIm0tci01XCI+XG4gICAgICAgICAge2xhYmVsIHx8IGZpZWxkS2V5fVxuICAgICAgICAgIHtjb21wYWN0ICYmIGRlc2NyaXB0aW9uICYmIChcbiAgICAgICAgICAgIDxUb29sdGlwIGlkPVwiZmllbGQtZGVzY3JcIiBwbGFjZW1lbnQ9XCJyaWdodFwiIHRpdGxlPXtkZXNjcmlwdGlvbn0+XG4gICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWluZm8tY2lyY2xlIG0tbC01XCIgLz5cbiAgICAgICAgICAgIDwvVG9vbHRpcD5cbiAgICAgICAgICApfVxuICAgICAgICA8L0Zvcm1MYWJlbD5cbiAgICAgIH1cbiAgICAgIGNzcz17aW5saW5lICYmIGZvcm1JdGVtSW5saW5lQ3NzfVxuICAgID5cbiAgICAgIHtob29rZWRDb250cm9sfVxuICAgICAgeyFjb21wYWN0ICYmIGRlc2NyaXB0aW9uICYmIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17KHRoZW1lOiBTdXBlcnNldFRoZW1lKSA9PiAoe1xuICAgICAgICAgICAgY29sb3I6IHRoZW1lLmNvbG9ycy5ncmF5c2NhbGUuYmFzZSxcbiAgICAgICAgICAgIFtpbmxpbmUgPyAnbWFyZ2luTGVmdCcgOiAnbWFyZ2luVG9wJ106IHRoZW1lLmdyaWRVbml0LFxuICAgICAgICAgIH0pfVxuICAgICAgICA+XG4gICAgICAgICAge2Rlc2NyaXB0aW9ufVxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgPC9Gb3JtSXRlbT5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Datasource/Field.tsx\n");

/***/ }),

/***/ "./src/components/Datasource/Fieldset.tsx":
/*!************************************************!*\
  !*** ./src/components/Datasource/Fieldset.tsx ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Fieldset)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./src/components/Datasource/utils.js\");\n/* harmony import */ var _Field__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Field */ \"./src/components/Datasource/Field.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\nclass Fieldset extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n\n\n\n\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n  onChange(fieldKey, val) {\n    return this.props.onChange({\n      ...this.props.item,\n      [fieldKey]: val\n    });\n  }\n  render() {\n    const { title } = this.props;\n    const propExtender = (field) => ({\n      onChange: this.onChange,\n      value: this.props.item[field.props.fieldKey],\n      compact: this.props.compact\n    });\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_1__.Form, { className: \"CRUD\", layout: \"vertical\" },\n    title && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"legend\", null, title),\n    (0,_utils__WEBPACK_IMPORTED_MODULE_2__.recurseReactClone)(this.props.children, _Field__WEBPACK_IMPORTED_MODULE_3__[\"default\"], propExtender)\n    );\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}Fieldset.defaultProps = { compact: false, title: null };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Fieldset, \"Fieldset\", \"/app/superset-frontend/src/components/Datasource/Fieldset.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9EYXRhc291cmNlL0ZpZWxkc2V0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBO0FBQ0E7QUFFQTtBQUNBO0FBWUE7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9zcmMvY29tcG9uZW50cy9EYXRhc291cmNlL0ZpZWxkc2V0LnRzeD85MGI0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBGb3JtIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvRm9ybSc7XG5cbmltcG9ydCB7IHJlY3Vyc2VSZWFjdENsb25lIH0gZnJvbSAnLi91dGlscyc7XG5pbXBvcnQgRmllbGQgZnJvbSAnLi9GaWVsZCc7XG5cbmludGVyZmFjZSBGaWVsZHNldFByb3BzIHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbiAgb25DaGFuZ2U6IEZ1bmN0aW9uO1xuICBpdGVtOiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xuICB0aXRsZTogUmVhY3QuUmVhY3ROb2RlO1xuICBjb21wYWN0OiBib29sZWFuO1xufVxuXG50eXBlIGZpZWxkS2V5VHlwZSA9IHN0cmluZyB8IG51bWJlcjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRmllbGRzZXQgZXh0ZW5kcyBSZWFjdC5QdXJlQ29tcG9uZW50PEZpZWxkc2V0UHJvcHM+IHtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBjb21wYWN0OiBmYWxzZSxcbiAgICB0aXRsZTogbnVsbCxcbiAgfTtcblxuICBjb25zdHJ1Y3Rvcihwcm9wczogRmllbGRzZXRQcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgb25DaGFuZ2UoZmllbGRLZXk6IGZpZWxkS2V5VHlwZSwgdmFsOiBhbnkpIHtcbiAgICByZXR1cm4gdGhpcy5wcm9wcy5vbkNoYW5nZSh7XG4gICAgICAuLi50aGlzLnByb3BzLml0ZW0sXG4gICAgICBbZmllbGRLZXldOiB2YWwsXG4gICAgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyB0aXRsZSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBwcm9wRXh0ZW5kZXIgPSAoZmllbGQ6IHsgcHJvcHM6IHsgZmllbGRLZXk6IGZpZWxkS2V5VHlwZSB9IH0pID0+ICh7XG4gICAgICBvbkNoYW5nZTogdGhpcy5vbkNoYW5nZSxcbiAgICAgIHZhbHVlOiB0aGlzLnByb3BzLml0ZW1bZmllbGQucHJvcHMuZmllbGRLZXldLFxuICAgICAgY29tcGFjdDogdGhpcy5wcm9wcy5jb21wYWN0LFxuICAgIH0pO1xuICAgIHJldHVybiAoXG4gICAgICA8Rm9ybSBjbGFzc05hbWU9XCJDUlVEXCIgbGF5b3V0PVwidmVydGljYWxcIj5cbiAgICAgICAge3RpdGxlICYmIDxsZWdlbmQ+e3RpdGxlfTwvbGVnZW5kPn1cbiAgICAgICAge3JlY3Vyc2VSZWFjdENsb25lKHRoaXMucHJvcHMuY2hpbGRyZW4sIEZpZWxkLCBwcm9wRXh0ZW5kZXIpfVxuICAgICAgPC9Gb3JtPlxuICAgICk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Datasource/Fieldset.tsx\n");

/***/ }),

/***/ "./src/components/EditableTitle/index.tsx":
/*!************************************************!*\
  !*** ./src/components/EditableTitle/index.tsx ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EditableTitle)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babel/runtime-corejs3/helpers/extends */ \"./node_modules/@babel/runtime-corejs3/helpers/esm/extends.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router-dom/esm/react-router-dom.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* harmony import */ var src_components_Tooltip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Tooltip */ \"./src/components/Tooltip/index.tsx\");\n/* harmony import */ var _CertifiedBadge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../CertifiedBadge */ \"./src/components/CertifiedBadge/index.tsx\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\nconst StyledCertifiedBadge = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_4__.styled)((0,_CertifiedBadge__WEBPACK_IMPORTED_MODULE_3__[\"default\"]))`\n  vertical-align: middle;\n`;\nfunction EditableTitle(_ref)\n\n{let { canEdit = false, editing = false, extraClasses, multiLine = false, noPermitTooltip, onSaveTitle, showTooltip = true, style, title = '', defaultTitle = '', placeholder = '', certifiedBy, certificationDetails, url, // rest is related to title tooltip\n    ...rest } = _ref;const [isEditing, setIsEditing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(editing);\n  const [currentTitle, setCurrentTitle] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(title);\n  const [lastTitle, setLastTitle] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(title);\n  const [contentBoundingRect, setContentBoundingRect] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  // Used so we can access the DOM element if a user clicks on this component.\n  const contentRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (title !== currentTitle) {\n      setLastTitle(currentTitle);\n      setCurrentTitle(title);\n    }\n  }, [title]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (isEditing) {\n      contentRef.current.focus();\n      // move cursor and scroll to the end\n      if (contentRef.current.setSelectionRange) {\n        const { length } = contentRef.current.value;\n        contentRef.current.setSelectionRange(length, length);\n        contentRef.current.scrollLeft = contentRef.current.scrollWidth;\n        contentRef.current.scrollTop = contentRef.current.scrollHeight;\n      }\n    }\n  }, [isEditing]);\n  function handleClick() {\n    if (!canEdit || isEditing) {\n      return;\n    }\n    // For multi-line values, save the actual rendered size of the displayed text.\n    // Later, if a textarea is constructed for editing the value, we'll need this.\n    const contentBounding = contentRef.current ?\n    contentRef.current.getBoundingClientRect() :\n    null;\n    setIsEditing(true);\n    setContentBoundingRect(contentBounding);\n  }\n  function handleBlur() {\n    const formattedTitle = currentTitle.trim();\n    if (!canEdit) {\n      return;\n    }\n    setIsEditing(false);\n    if (!formattedTitle.length) {\n      setCurrentTitle(lastTitle);\n      return;\n    }\n    if (lastTitle !== formattedTitle) {\n      setLastTitle(formattedTitle);\n    }\n    if (title !== formattedTitle) {\n      onSaveTitle(formattedTitle);\n    }\n  }\n  // tl;dr when a EditableTitle is being edited, typically the Tab that wraps it has been\n  // clicked and is focused/active. For accessibility, when the focused tab anchor intercepts\n  // the ' ' key (among others, including all arrows) the onChange() doesn't fire. Somehow\n  // keydown is still called so we can detect this and manually add a ' ' to the current title\n  function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.stopPropagation();\n    }\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleBlur();\n    }\n  }\n  function handleChange(ev) {\n    if (!canEdit) {\n      return;\n    }\n    setCurrentTitle(ev.target.value);\n  }\n  function handleKeyPress(ev) {\n    if (ev.key === 'Enter') {\n      ev.preventDefault();\n      handleBlur();\n    }\n  }\n  let value;\n  value = currentTitle;\n  if (!isEditing && !currentTitle) {\n    value = defaultTitle || title;\n  }\n  // Construct an inline style based on previously-saved height of the rendered label. Only\n  // used in multi-line contexts.\n  const editStyle = isEditing && contentBoundingRect ?\n  { height: `${contentBoundingRect.height}px` } :\n  undefined;\n  // Create a textarea when we're editing a multi-line value, otherwise create an input (which may\n  // be text or a button).\n  let titleComponent = multiLine && isEditing ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"textarea\", { \"data-test\": \"editable-title-input\", ref: contentRef, value: value, className: !title ? 'text-muted' : undefined, onKeyDown: handleKeyDown, onChange: handleChange, onBlur: handleBlur, onClick: handleClick, onKeyPress: handleKeyPress, placeholder: placeholder, style: editStyle }) : (0,_emotion_react__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"input\", { \"data-test\": \"editable-title-input\", ref: contentRef, type: isEditing ? 'text' : 'button', value: value, className: !title ? 'text-muted' : undefined, onKeyDown: handleKeyDown, onChange: handleChange, onBlur: handleBlur, onClick: handleClick, onKeyPress: handleKeyPress, placeholder: placeholder });\n  if (showTooltip && !isEditing) {\n    titleComponent = (0,_emotion_react__WEBPACK_IMPORTED_MODULE_5__.jsx)(src_components_Tooltip__WEBPACK_IMPORTED_MODULE_2__.Tooltip, { id: \"title-tooltip\", title: canEdit ?\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_6__.t)('Click to edit') :\n      noPermitTooltip ||\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_6__.t)(\"You don't have the rights to alter this title.\") },\n    titleComponent\n    );\n  }\n  if (!canEdit) {\n    // don't actually want an input in this case\n    titleComponent = url ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_7__.Link, { to: url, \"data-test\": \"editable-title-input\", css: (theme) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_5__.css)`\n          color: ${theme.colors.grayscale.dark1};\n          text-decoration: none;\n          :hover {\n            text-decoration: underline;\n          }\n        ` },\n    value\n    ) : (0,_emotion_react__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"span\", { \"data-test\": \"editable-title-input\" }, value);\n  }\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_5__.jsx)(\"span\", (0,_babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_8__[\"default\"])({ \"data-test\": \"editable-title\", className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('editable-title', extraClasses, canEdit && 'editable-title--editable', isEditing && 'editable-title--editing'), style: style }, rest),\n  certifiedBy && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_5__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_5__.jsx)(StyledCertifiedBadge, { certifiedBy: certifiedBy, details: certificationDetails, size: \"xl\" }), ' '\n  ),\n  titleComponent\n  );\n}__signature__(EditableTitle, \"useState{[isEditing, setIsEditing](editing)}\\nuseState{[currentTitle, setCurrentTitle](title)}\\nuseState{[lastTitle, setLastTitle](title)}\\nuseState{[contentBoundingRect, setContentBoundingRect](null)}\\nuseRef{contentRef}\\nuseEffect{}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledCertifiedBadge, \"StyledCertifiedBadge\", \"/app/superset-frontend/src/components/EditableTitle/index.tsx\");reactHotLoader.register(EditableTitle, \"EditableTitle\", \"/app/superset-frontend/src/components/EditableTitle/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/EditableTitle/index.tsx\n");

/***/ }),

/***/ "./src/components/RefreshLabel/index.tsx":
/*!***********************************************!*\
  !*** ./src/components/RefreshLabel/index.tsx ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var src_components_Tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/Tooltip */ \"./src/components/Tooltip/index.tsx\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\nconst RefreshLabel = (_ref) => {let { onClick, tooltipContent } = _ref;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const IconWithoutRef = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Refresh, props));\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Tooltip__WEBPACK_IMPORTED_MODULE_1__.Tooltip, { title: tooltipContent },\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_3__.jsx)(IconWithoutRef, { role: \"button\", onClick: onClick, css: (theme) => ({\n      cursor: 'pointer',\n      color: theme.colors.grayscale.base,\n      '&:hover': { color: theme.colors.primary.base }\n    }) })\n  );\n};const _default =\nRefreshLabel;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RefreshLabel, \"RefreshLabel\", \"/app/superset-frontend/src/components/RefreshLabel/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/RefreshLabel/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9SZWZyZXNoTGFiZWwvaW5kZXgudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTtBQUVBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFJQTtBQUVBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3NyYy9jb21wb25lbnRzL1JlZnJlc2hMYWJlbC9pbmRleC50c3g/YjI2OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgUmVhY3QsIHsgTW91c2VFdmVudEhhbmRsZXIsIGZvcndhcmRSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTdXBlcnNldFRoZW1lIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuaW1wb3J0IHsgVG9vbHRpcCB9IGZyb20gJ3NyYy9jb21wb25lbnRzL1Rvb2x0aXAnO1xuaW1wb3J0IEljb25zLCB7IEljb25UeXBlIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvSWNvbnMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlZnJlc2hMYWJlbFByb3BzIHtcbiAgb25DbGljazogTW91c2VFdmVudEhhbmRsZXI8SFRNTFNwYW5FbGVtZW50PjtcbiAgdG9vbHRpcENvbnRlbnQ6IHN0cmluZztcbn1cblxuY29uc3QgUmVmcmVzaExhYmVsID0gKHsgb25DbGljaywgdG9vbHRpcENvbnRlbnQgfTogUmVmcmVzaExhYmVsUHJvcHMpID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICBjb25zdCBJY29uV2l0aG91dFJlZiA9IGZvcndhcmRSZWYoKHByb3BzOiBJY29uVHlwZSwgcmVmOiBhbnkpID0+IChcbiAgICA8SWNvbnMuUmVmcmVzaCB7Li4ucHJvcHN9IC8+XG4gICkpO1xuXG4gIHJldHVybiAoXG4gICAgPFRvb2x0aXAgdGl0bGU9e3Rvb2x0aXBDb250ZW50fT5cbiAgICAgIDxJY29uV2l0aG91dFJlZlxuICAgICAgICByb2xlPVwiYnV0dG9uXCJcbiAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgY3NzPXsodGhlbWU6IFN1cGVyc2V0VGhlbWUpID0+ICh7XG4gICAgICAgICAgY3Vyc29yOiAncG9pbnRlcicsXG4gICAgICAgICAgY29sb3I6IHRoZW1lLmNvbG9ycy5ncmF5c2NhbGUuYmFzZSxcbiAgICAgICAgICAnJjpob3Zlcic6IHsgY29sb3I6IHRoZW1lLmNvbG9ycy5wcmltYXJ5LmJhc2UgfSxcbiAgICAgICAgfSl9XG4gICAgICAvPlxuICAgIDwvVG9vbHRpcD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJlZnJlc2hMYWJlbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/RefreshLabel/index.tsx\n");

/***/ }),

/***/ "./src/components/TableSelector/index.tsx":
/*!************************************************!*\
  !*** ./src/components/TableSelector/index.tsx ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TableOption: () => (/* binding */ TableOption),\n/* harmony export */   TableSelectorMultiple: () => (/* binding */ TableSelectorMultiple),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @babel/runtime-corejs3/helpers/extends */ \"./node_modules/@babel/runtime-corejs3/helpers/esm/extends.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components */ \"./src/components/index.ts\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var src_components_DatabaseSelector__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/DatabaseSelector */ \"./src/components/DatabaseSelector/index.tsx\");\n/* harmony import */ var src_components_RefreshLabel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/RefreshLabel */ \"./src/components/RefreshLabel/index.tsx\");\n/* harmony import */ var src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/components/CertifiedBadge */ \"./src/components/CertifiedBadge/index.tsx\");\n/* harmony import */ var src_components_WarningIconWithTooltip__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/components/WarningIconWithTooltip */ \"./src/components/WarningIconWithTooltip/index.tsx\");\n/* harmony import */ var src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/components/MessageToasts/withToasts */ \"./src/components/MessageToasts/withToasts.tsx\");\n/* harmony import */ var src_hooks_apiResources__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/hooks/apiResources */ \"./src/hooks/apiResources/index.ts\");\n/* harmony import */ var src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/utils/getClientErrorObject */ \"./src/utils/getClientErrorObject.ts\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\nconst REFRESH_WIDTH = 30;\nconst TableSelectorWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.styled.div`\n  ${(_ref) => {let { theme } = _ref;return `\n    .refresh {\n      display: flex;\n      align-items: center;\n      width: ${REFRESH_WIDTH}px;\n      margin-left: ${theme.gridUnit}px;\n      margin-top: ${theme.gridUnit * 5}px;\n    }\n\n    .section {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n    }\n\n    .divider {\n      border-bottom: 1px solid ${theme.colors.secondary.light5};\n      margin: 15px 0;\n    }\n\n    .table-length {\n      color: ${theme.colors.grayscale.light1};\n    }\n\n    .select {\n      flex: 1;\n      max-width: calc(100% - ${theme.gridUnit + REFRESH_WIDTH}px)\n    }\n  `;}}\n`;\nconst TableLabel = _superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.styled.span`\n  align-items: center;\n  display: flex;\n  white-space: nowrap;\n\n  svg,\n  small {\n    margin-right: ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit;}}px;\n  }\n`;\nconst TableOption = (_ref3) => {let { table } = _ref3;\n  const { value, type, extra } = table;\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(TableLabel, { title: value },\n  type === 'view' ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Eye, { iconSize: \"m\" }) : (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Table, { iconSize: \"m\" }),\n  (extra == null ? void 0 : extra.certification) && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { certifiedBy: extra.certification.certified_by, details: extra.certification.details, size: \"l\" }),\n  (extra == null ? void 0 : extra.warning_markdown) && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(src_components_WarningIconWithTooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { warningMarkdown: extra.warning_markdown, size: \"l\" }),\n  value\n  );\n};\nfunction renderSelectRow(select, refreshBtn) {\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(\"div\", { className: \"section\" },\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(\"span\", { className: \"select\" }, select),\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(\"span\", { className: \"refresh\" }, refreshBtn)\n  );\n}\nconst TableSelector = (_ref4) => {let { database, emptyState, formMode = false, getDbList, handleError, isDatabaseSelectEnabled = true, onDbChange, onSchemaChange, readOnly = false, onEmptyResults, schema, sqlLabMode = true, tableSelectMode = 'single', tableValue = undefined, onTableSelectChange } = _ref4;\n  const { addSuccessToast } = (0,src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_8__.useToasts)();\n  const [currentSchema, setCurrentSchema] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(schema);\n  const [tableSelectValue, setTableSelectValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(undefined);\n  const { data, isFetching: loadingTables, refetch } = (0,src_hooks_apiResources__WEBPACK_IMPORTED_MODULE_9__.useTables)({\n    dbId: database == null ? void 0 : database.id,\n    schema: currentSchema,\n    onSuccess: (data, isFetched) => {\n      if (isFetched) {\n        addSuccessToast((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.t)('List updated'));\n      }\n    },\n    onError: (err) => {\n      (0,src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_10__.getClientErrorObject)(err).then((clientError) => {\n        handleError((0,src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_10__.getClientErrorMessage)((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.t)('There was an error loading the tables'), clientError));\n      });\n    }\n  });\n  const tableOptions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => data ?\n  data.options.map((table) => ({\n    value: table.value,\n    label: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(TableOption, { table: table }),\n    text: table.value\n  })) :\n  [], [data]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    // reset selections\n    if (database === undefined) {\n      setCurrentSchema(undefined);\n      setTableSelectValue(undefined);\n    }\n  }, [database, tableSelectMode]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (tableSelectMode === 'single') {\n      setTableSelectValue(tableOptions.find((option) => option.value === tableValue));\n    } else\n    {\n      setTableSelectValue((tableOptions == null ? void 0 : tableOptions.filter((option) => option && (tableValue == null ? void 0 : tableValue.includes(option.value)))) || []);\n    }\n  }, [tableOptions, tableValue, tableSelectMode]);\n  const internalTableChange = (selectedOptions) => {\n    if (currentSchema) {\n      onTableSelectChange == null ? void 0 : onTableSelectChange(Array.isArray(selectedOptions) ?\n      selectedOptions.map((option) => option == null ? void 0 : option.value) :\n      selectedOptions == null ? void 0 : selectedOptions.value, currentSchema);\n    } else\n    {\n      setTableSelectValue(selectedOptions);\n    }\n  };\n  const internalDbChange = (db) => {\n    if (onDbChange) {\n      onDbChange(db);\n    }\n  };\n  const internalSchemaChange = (schema) => {\n    setCurrentSchema(schema);\n    if (onSchemaChange) {\n      onSchemaChange(schema);\n    }\n    const value = tableSelectMode === 'single' ? undefined : [];\n    internalTableChange(value);\n  };\n  const handleFilterOption = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (search, option) => {\n    const searchValue = search.trim().toLowerCase();\n    const { value } = option;\n    return value.toLowerCase().includes(searchValue);\n  }, []);\n  function renderTableSelect() {\n    const disabled = currentSchema && !formMode && readOnly || !currentSchema;\n    const header = sqlLabMode ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_2__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.t)('See table schema')) : (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_2__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.t)('Table'));\n    const select = (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_1__.Select, { ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.t)('Select table or type to search tables'), disabled: disabled, filterOption: handleFilterOption, header: header, labelInValue: true, loading: loadingTables, name: \"select-table\", onChange: (options) => internalTableChange(options), options: tableOptions, placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.t)('Select table or type to search tables'), showSearch: true, mode: tableSelectMode, value: tableSelectValue, allowClear: tableSelectMode === 'multiple', allowSelectAll: false });\n    const refreshLabel = !readOnly && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(src_components_RefreshLabel__WEBPACK_IMPORTED_MODULE_5__[\"default\"], { onClick: () => refetch(), tooltipContent: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.t)('Force refresh table list') });\n    return renderSelectRow(select, refreshLabel);\n  }\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(TableSelectorWrapper, null,\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(src_components_DatabaseSelector__WEBPACK_IMPORTED_MODULE_4__[\"default\"], { db: database, emptyState: emptyState, formMode: formMode, getDbList: getDbList, handleError: handleError, onDbChange: readOnly ? undefined : internalDbChange, onEmptyResults: onEmptyResults, onSchemaChange: readOnly ? undefined : internalSchemaChange, schema: currentSchema, sqlLabMode: sqlLabMode, isDatabaseSelectEnabled: isDatabaseSelectEnabled && !readOnly, readOnly: readOnly }),\n  sqlLabMode && !formMode && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(\"div\", { className: \"divider\" }),\n  renderTableSelect()\n  );\n};__signature__(TableSelector, \"useToasts{{ addSuccessToast }}\\nuseState{[currentSchema, setCurrentSchema](schema)}\\nuseState{[tableSelectValue, setTableSelectValue](undefined)}\\nuseTables{{ data, isFetching: loadingTables, refetch, }}\\nuseMemo{tableOptions}\\nuseEffect{}\\nuseEffect{}\\nuseMemo{handleFilterOption}\", () => [src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_8__.useToasts, src_hooks_apiResources__WEBPACK_IMPORTED_MODULE_9__.useTables]);\nconst TableSelectorMultiple = (props) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_12__.jsx)(TableSelector, (0,_babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_14__[\"default\"])({ tableSelectMode: \"multiple\" }, props));const _default =\nTableSelector;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(REFRESH_WIDTH, \"REFRESH_WIDTH\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");reactHotLoader.register(TableSelectorWrapper, \"TableSelectorWrapper\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");reactHotLoader.register(TableLabel, \"TableLabel\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");reactHotLoader.register(TableOption, \"TableOption\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");reactHotLoader.register(renderSelectRow, \"renderSelectRow\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");reactHotLoader.register(TableSelector, \"TableSelector\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");reactHotLoader.register(TableSelectorMultiple, \"TableSelectorMultiple\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/TableSelector/index.tsx\n");

/***/ }),

/***/ "./src/hooks/apiResources/charts.ts":
/*!******************************************!*\
  !*** ./src/hooks/apiResources/charts.ts ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useChartOwnerNames: () => (/* binding */ useChartOwnerNames)\n/* harmony export */ });\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rison */ \"./node_modules/rison/js/rison.js\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rison__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _apiResources__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apiResources */ \"./src/hooks/apiResources/apiResources.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nfunction extractOwnerNames(_ref) {let { owners } = _ref;\n  if (!owners)\n  return null;\n  return owners.map((owner) => `${owner.first_name} ${owner.last_name}`);\n}\nconst ownerNamesQuery = rison__WEBPACK_IMPORTED_MODULE_0___default().encode({\n  columns: ['owners.first_name', 'owners.last_name'],\n  keys: ['none']\n});\nfunction useChartOwnerNames(chartId) {\n  return (0,_apiResources__WEBPACK_IMPORTED_MODULE_1__.useTransformedResource)((0,_apiResources__WEBPACK_IMPORTED_MODULE_1__.useApiV1Resource)(`/api/v1/chart/${chartId}?q=${ownerNamesQuery}`), extractOwnerNames);\n}__signature__(useChartOwnerNames, \"useTransformedResource{}\\nuseApiV1Resource{}\", () => [_apiResources__WEBPACK_IMPORTED_MODULE_1__.useTransformedResource, _apiResources__WEBPACK_IMPORTED_MODULE_1__.useApiV1Resource]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(extractOwnerNames, \"extractOwnerNames\", \"/app/superset-frontend/src/hooks/apiResources/charts.ts\");reactHotLoader.register(ownerNamesQuery, \"ownerNamesQuery\", \"/app/superset-frontend/src/hooks/apiResources/charts.ts\");reactHotLoader.register(useChartOwnerNames, \"useChartOwnerNames\", \"/app/superset-frontend/src/hooks/apiResources/charts.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaG9va3MvYXBpUmVzb3VyY2VzL2NoYXJ0cy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQTtBQUVBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUlBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9zcmMvaG9va3MvYXBpUmVzb3VyY2VzL2NoYXJ0cy50cz85ZGMwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHJpc29uIGZyb20gJ3Jpc29uJztcbmltcG9ydCBDaGFydCBmcm9tICdzcmMvdHlwZXMvQ2hhcnQnO1xuaW1wb3J0IHsgdXNlQXBpVjFSZXNvdXJjZSwgdXNlVHJhbnNmb3JtZWRSZXNvdXJjZSB9IGZyb20gJy4vYXBpUmVzb3VyY2VzJztcblxuZnVuY3Rpb24gZXh0cmFjdE93bmVyTmFtZXMoeyBvd25lcnMgfTogQ2hhcnQpIHtcbiAgaWYgKCFvd25lcnMpIHJldHVybiBudWxsO1xuICByZXR1cm4gb3duZXJzLm1hcChvd25lciA9PiBgJHtvd25lci5maXJzdF9uYW1lfSAke293bmVyLmxhc3RfbmFtZX1gKTtcbn1cblxuY29uc3Qgb3duZXJOYW1lc1F1ZXJ5ID0gcmlzb24uZW5jb2RlKHtcbiAgY29sdW1uczogWydvd25lcnMuZmlyc3RfbmFtZScsICdvd25lcnMubGFzdF9uYW1lJ10sXG4gIGtleXM6IFsnbm9uZSddLFxufSk7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VDaGFydE93bmVyTmFtZXMoY2hhcnRJZDogc3RyaW5nKSB7XG4gIHJldHVybiB1c2VUcmFuc2Zvcm1lZFJlc291cmNlKFxuICAgIHVzZUFwaVYxUmVzb3VyY2U8Q2hhcnQ+KGAvYXBpL3YxL2NoYXJ0LyR7Y2hhcnRJZH0/cT0ke293bmVyTmFtZXNRdWVyeX1gKSxcbiAgICBleHRyYWN0T3duZXJOYW1lcyxcbiAgKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/hooks/apiResources/charts.ts\n");

/***/ }),

/***/ "./src/hooks/apiResources/dashboards.ts":
/*!**********************************************!*\
  !*** ./src/hooks/apiResources/dashboards.ts ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useDashboard: () => (/* binding */ useDashboard),\n/* harmony export */   useDashboardCharts: () => (/* binding */ useDashboardCharts),\n/* harmony export */   useDashboardDatasets: () => (/* binding */ useDashboardDatasets)\n/* harmony export */ });\n/* unused harmony export useEmbeddedDashboard */\n/* harmony import */ var _apiResources__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apiResources */ \"./src/hooks/apiResources/apiResources.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst useDashboard = (idOrSlug) => (0,_apiResources__WEBPACK_IMPORTED_MODULE_0__.useTransformedResource)((0,_apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource)(`/api/v1/dashboard/${idOrSlug}`), (dashboard) => ({\n  ...dashboard,\n  // TODO: load these at the API level\n  metadata: dashboard.json_metadata && JSON.parse(dashboard.json_metadata) || {},\n  position_data: dashboard.position_json && JSON.parse(dashboard.position_json)\n}));\n// gets the chart definitions for a dashboard\n__signature__(useDashboard, \"useTransformedResource{}\\nuseApiV1Resource{}\", () => [_apiResources__WEBPACK_IMPORTED_MODULE_0__.useTransformedResource, _apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource]);const useDashboardCharts = (idOrSlug) => (0,_apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource)(`/api/v1/dashboard/${idOrSlug}/charts`);\n// gets the datasets for a dashboard\n// important: this endpoint only returns the fields in the dataset\n// that are necessary for rendering the given dashboard\n__signature__(useDashboardCharts, \"useApiV1Resource{}\", () => [_apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource]);const useDashboardDatasets = (idOrSlug) => (0,_apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource)(`/api/v1/dashboard/${idOrSlug}/datasets`);__signature__(useDashboardDatasets, \"useApiV1Resource{}\", () => [_apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource]);\nconst useEmbeddedDashboard = (idOrSlug) => (0,_apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource)(`/api/v1/dashboard/${idOrSlug}/embedded`);__signature__(useEmbeddedDashboard, \"useApiV1Resource{}\", () => [_apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useDashboard, \"useDashboard\", \"/app/superset-frontend/src/hooks/apiResources/dashboards.ts\");reactHotLoader.register(useDashboardCharts, \"useDashboardCharts\", \"/app/superset-frontend/src/hooks/apiResources/dashboards.ts\");reactHotLoader.register(useDashboardDatasets, \"useDashboardDatasets\", \"/app/superset-frontend/src/hooks/apiResources/dashboards.ts\");reactHotLoader.register(useEmbeddedDashboard, \"useEmbeddedDashboard\", \"/app/superset-frontend/src/hooks/apiResources/dashboards.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaG9va3MvYXBpUmVzb3VyY2VzL2Rhc2hib2FyZHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJBO0FBRUE7QUFJQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBR0E7QUFBQTtBQUlBO0FBQ0E7QUFDQTtBQUFBO0FBSUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3NyYy9ob29rcy9hcGlSZXNvdXJjZXMvZGFzaGJvYXJkcy50cz9iYzE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgRGFzaGJvYXJkLCBEYXRhc291cmNlLCBFbWJlZGRlZERhc2hib2FyZCB9IGZyb20gJ3NyYy9kYXNoYm9hcmQvdHlwZXMnO1xuaW1wb3J0IHsgQ2hhcnQgfSBmcm9tICdzcmMvdHlwZXMvQ2hhcnQnO1xuaW1wb3J0IHsgdXNlQXBpVjFSZXNvdXJjZSwgdXNlVHJhbnNmb3JtZWRSZXNvdXJjZSB9IGZyb20gJy4vYXBpUmVzb3VyY2VzJztcblxuZXhwb3J0IGNvbnN0IHVzZURhc2hib2FyZCA9IChpZE9yU2x1Zzogc3RyaW5nIHwgbnVtYmVyKSA9PlxuICB1c2VUcmFuc2Zvcm1lZFJlc291cmNlKFxuICAgIHVzZUFwaVYxUmVzb3VyY2U8RGFzaGJvYXJkPihgL2FwaS92MS9kYXNoYm9hcmQvJHtpZE9yU2x1Z31gKSxcbiAgICBkYXNoYm9hcmQgPT4gKHtcbiAgICAgIC4uLmRhc2hib2FyZCxcbiAgICAgIC8vIFRPRE86IGxvYWQgdGhlc2UgYXQgdGhlIEFQSSBsZXZlbFxuICAgICAgbWV0YWRhdGE6XG4gICAgICAgIChkYXNoYm9hcmQuanNvbl9tZXRhZGF0YSAmJiBKU09OLnBhcnNlKGRhc2hib2FyZC5qc29uX21ldGFkYXRhKSkgfHwge30sXG4gICAgICBwb3NpdGlvbl9kYXRhOlxuICAgICAgICBkYXNoYm9hcmQucG9zaXRpb25fanNvbiAmJiBKU09OLnBhcnNlKGRhc2hib2FyZC5wb3NpdGlvbl9qc29uKSxcbiAgICB9KSxcbiAgKTtcblxuLy8gZ2V0cyB0aGUgY2hhcnQgZGVmaW5pdGlvbnMgZm9yIGEgZGFzaGJvYXJkXG5leHBvcnQgY29uc3QgdXNlRGFzaGJvYXJkQ2hhcnRzID0gKGlkT3JTbHVnOiBzdHJpbmcgfCBudW1iZXIpID0+XG4gIHVzZUFwaVYxUmVzb3VyY2U8Q2hhcnRbXT4oYC9hcGkvdjEvZGFzaGJvYXJkLyR7aWRPclNsdWd9L2NoYXJ0c2ApO1xuXG4vLyBnZXRzIHRoZSBkYXRhc2V0cyBmb3IgYSBkYXNoYm9hcmRcbi8vIGltcG9ydGFudDogdGhpcyBlbmRwb2ludCBvbmx5IHJldHVybnMgdGhlIGZpZWxkcyBpbiB0aGUgZGF0YXNldFxuLy8gdGhhdCBhcmUgbmVjZXNzYXJ5IGZvciByZW5kZXJpbmcgdGhlIGdpdmVuIGRhc2hib2FyZFxuZXhwb3J0IGNvbnN0IHVzZURhc2hib2FyZERhdGFzZXRzID0gKGlkT3JTbHVnOiBzdHJpbmcgfCBudW1iZXIpID0+XG4gIHVzZUFwaVYxUmVzb3VyY2U8RGF0YXNvdXJjZVtdPihgL2FwaS92MS9kYXNoYm9hcmQvJHtpZE9yU2x1Z30vZGF0YXNldHNgKTtcblxuZXhwb3J0IGNvbnN0IHVzZUVtYmVkZGVkRGFzaGJvYXJkID0gKGlkT3JTbHVnOiBzdHJpbmcgfCBudW1iZXIpID0+XG4gIHVzZUFwaVYxUmVzb3VyY2U8RW1iZWRkZWREYXNoYm9hcmQ+KGAvYXBpL3YxL2Rhc2hib2FyZC8ke2lkT3JTbHVnfS9lbWJlZGRlZGApO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/hooks/apiResources/dashboards.ts\n");

/***/ }),

/***/ "./src/hooks/apiResources/index.ts":
/*!*****************************************!*\
  !*** ./src/hooks/apiResources/index.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   skipToken: () => (/* reexport safe */ _reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_0__.skipToken),\n/* harmony export */   tableEndpoints: () => (/* reexport safe */ _tables__WEBPACK_IMPORTED_MODULE_4__.tableEndpoints),\n/* harmony export */   useChartOwnerNames: () => (/* reexport safe */ _charts__WEBPACK_IMPORTED_MODULE_2__.useChartOwnerNames),\n/* harmony export */   useDashboard: () => (/* reexport safe */ _dashboards__WEBPACK_IMPORTED_MODULE_3__.useDashboard),\n/* harmony export */   useDashboardCharts: () => (/* reexport safe */ _dashboards__WEBPACK_IMPORTED_MODULE_3__.useDashboardCharts),\n/* harmony export */   useDashboardDatasets: () => (/* reexport safe */ _dashboards__WEBPACK_IMPORTED_MODULE_3__.useDashboardDatasets),\n/* harmony export */   useQueryValidationsQuery: () => (/* reexport safe */ _queryValidations__WEBPACK_IMPORTED_MODULE_6__.useQueryValidationsQuery),\n/* harmony export */   useSchemas: () => (/* reexport safe */ _schemas__WEBPACK_IMPORTED_MODULE_5__.useSchemas),\n/* harmony export */   useTableExtendedMetadataQuery: () => (/* reexport safe */ _tables__WEBPACK_IMPORTED_MODULE_4__.useTableExtendedMetadataQuery),\n/* harmony export */   useTableMetadataQuery: () => (/* reexport safe */ _tables__WEBPACK_IMPORTED_MODULE_4__.useTableMetadataQuery),\n/* harmony export */   useTables: () => (/* reexport safe */ _tables__WEBPACK_IMPORTED_MODULE_4__.useTables)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit_query_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit/query/react */ \"./node_modules/@reduxjs/toolkit/dist/query/rtk-query.esm.js\");\n/* harmony import */ var _apiResources__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apiResources */ \"./src/hooks/apiResources/apiResources.ts\");\n/* harmony import */ var _charts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./charts */ \"./src/hooks/apiResources/charts.ts\");\n/* harmony import */ var _dashboards__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dashboards */ \"./src/hooks/apiResources/dashboards.ts\");\n/* harmony import */ var _tables__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tables */ \"./src/hooks/apiResources/tables.ts\");\n/* harmony import */ var _schemas__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./schemas */ \"./src/hooks/apiResources/schemas.ts\");\n/* harmony import */ var _queryValidations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./queryValidations */ \"./src/hooks/apiResources/queryValidations.ts\");\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n// A central catalog of API Resource hooks.\n// Add new API hooks here, organized under\n// different files for different resource types.\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaG9va3MvYXBpUmVzb3VyY2VzL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3NyYy9ob29rcy9hcGlSZXNvdXJjZXMvaW5kZXgudHM/YTBkMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5leHBvcnQgeyBza2lwVG9rZW4gfSBmcm9tICdAcmVkdXhqcy90b29sa2l0L3F1ZXJ5L3JlYWN0JztcbmV4cG9ydCB7XG4gIHVzZUFwaVJlc291cmNlRnVsbEJvZHksXG4gIHVzZUFwaVYxUmVzb3VyY2UsXG4gIHVzZVRyYW5zZm9ybWVkUmVzb3VyY2UsXG59IGZyb20gJy4vYXBpUmVzb3VyY2VzJztcblxuLy8gQSBjZW50cmFsIGNhdGFsb2cgb2YgQVBJIFJlc291cmNlIGhvb2tzLlxuLy8gQWRkIG5ldyBBUEkgaG9va3MgaGVyZSwgb3JnYW5pemVkIHVuZGVyXG4vLyBkaWZmZXJlbnQgZmlsZXMgZm9yIGRpZmZlcmVudCByZXNvdXJjZSB0eXBlcy5cbmV4cG9ydCAqIGZyb20gJy4vY2hhcnRzJztcbmV4cG9ydCAqIGZyb20gJy4vZGFzaGJvYXJkcyc7XG5leHBvcnQgKiBmcm9tICcuL3RhYmxlcyc7XG5leHBvcnQgKiBmcm9tICcuL3NjaGVtYXMnO1xuZXhwb3J0ICogZnJvbSAnLi9xdWVyeVZhbGlkYXRpb25zJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/hooks/apiResources/index.ts\n");

/***/ }),

/***/ "./src/hooks/apiResources/queryValidations.ts":
/*!****************************************************!*\
  !*** ./src/hooks/apiResources/queryValidations.ts ***!
  \****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useQueryValidationsQuery: () => (/* binding */ useQueryValidationsQuery)\n/* harmony export */ });\n/* harmony import */ var _queryApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryApi */ \"./src/hooks/apiResources/queryApi.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst queryValidationApi = _queryApi__WEBPACK_IMPORTED_MODULE_0__.api.injectEndpoints({\n  endpoints: (builder) => ({\n    queryValidations: builder.query({\n      providesTags: ['QueryValidations'],\n      query: (_ref) => {let { dbId, schema, sql, templateParams } = _ref;\n        let template_params = templateParams;\n        try {\n          template_params = JSON.parse(templateParams || '');\n        }\n        catch (e) {\n          template_params = undefined;\n        }\n        const postPayload = {\n          schema,\n          sql,\n          ...(template_params && { template_params })\n        };\n        return {\n          method: 'post',\n          endpoint: `/api/v1/database/${dbId}/validate_sql/`,\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(postPayload),\n          transformResponse: (_ref2) => {let { json } = _ref2;return json.result;}\n        };\n      }\n    })\n  })\n});\nconst { useQueryValidationsQuery } = queryValidationApi;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(queryValidationApi, \"queryValidationApi\", \"/app/superset-frontend/src/hooks/apiResources/queryValidations.ts\");reactHotLoader.register(useQueryValidationsQuery, \"useQueryValidationsQuery\", \"/app/superset-frontend/src/hooks/apiResources/queryValidations.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaG9va3MvYXBpUmVzb3VyY2VzL3F1ZXJ5VmFsaWRhdGlvbnMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBO0FBZ0JBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9zcmMvaG9va3MvYXBpUmVzb3VyY2VzL3F1ZXJ5VmFsaWRhdGlvbnMudHM/OGE3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBhcGksIEpzb25SZXNwb25zZSB9IGZyb20gJy4vcXVlcnlBcGknO1xuXG5leHBvcnQgdHlwZSBGZXRjaFZhbGlkYXRpb25RdWVyeVBhcmFtcyA9IHtcbiAgZGJJZD86IHN0cmluZyB8IG51bWJlcjtcbiAgc2NoZW1hPzogc3RyaW5nO1xuICBzcWw6IHN0cmluZztcbiAgdGVtcGxhdGVQYXJhbXM/OiBzdHJpbmc7XG59O1xuXG50eXBlIFZhbGlkYXRpb25SZXN1bHQgPSB7XG4gIGVuZF9jb2x1bW46IG51bWJlciB8IG51bGw7XG4gIGxpbmVfbnVtYmVyOiBudW1iZXIgfCBudWxsO1xuICBtZXNzYWdlOiBzdHJpbmcgfCBudWxsO1xuICBzdGFydF9jb2x1bW46IG51bWJlciB8IG51bGw7XG59O1xuXG5jb25zdCBxdWVyeVZhbGlkYXRpb25BcGkgPSBhcGkuaW5qZWN0RW5kcG9pbnRzKHtcbiAgZW5kcG9pbnRzOiBidWlsZGVyID0+ICh7XG4gICAgcXVlcnlWYWxpZGF0aW9uczogYnVpbGRlci5xdWVyeTxcbiAgICAgIFZhbGlkYXRpb25SZXN1bHRbXSxcbiAgICAgIEZldGNoVmFsaWRhdGlvblF1ZXJ5UGFyYW1zXG4gICAgPih7XG4gICAgICBwcm92aWRlc1RhZ3M6IFsnUXVlcnlWYWxpZGF0aW9ucyddLFxuICAgICAgcXVlcnk6ICh7IGRiSWQsIHNjaGVtYSwgc3FsLCB0ZW1wbGF0ZVBhcmFtcyB9KSA9PiB7XG4gICAgICAgIGxldCB0ZW1wbGF0ZV9wYXJhbXMgPSB0ZW1wbGF0ZVBhcmFtcztcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB0ZW1wbGF0ZV9wYXJhbXMgPSBKU09OLnBhcnNlKHRlbXBsYXRlUGFyYW1zIHx8ICcnKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIHRlbXBsYXRlX3BhcmFtcyA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwb3N0UGF5bG9hZCA9IHtcbiAgICAgICAgICBzY2hlbWEsXG4gICAgICAgICAgc3FsLFxuICAgICAgICAgIC4uLih0ZW1wbGF0ZV9wYXJhbXMgJiYgeyB0ZW1wbGF0ZV9wYXJhbXMgfSksXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgbWV0aG9kOiAncG9zdCcsXG4gICAgICAgICAgZW5kcG9pbnQ6IGAvYXBpL3YxL2RhdGFiYXNlLyR7ZGJJZH0vdmFsaWRhdGVfc3FsL2AsXG4gICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocG9zdFBheWxvYWQpLFxuICAgICAgICAgIHRyYW5zZm9ybVJlc3BvbnNlOiAoeyBqc29uIH06IEpzb25SZXNwb25zZSkgPT4ganNvbi5yZXN1bHQsXG4gICAgICAgIH07XG4gICAgICB9LFxuICAgIH0pLFxuICB9KSxcbn0pO1xuXG5leHBvcnQgY29uc3QgeyB1c2VRdWVyeVZhbGlkYXRpb25zUXVlcnkgfSA9IHF1ZXJ5VmFsaWRhdGlvbkFwaTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/hooks/apiResources/queryValidations.ts\n");

/***/ }),

/***/ "./src/hooks/apiResources/schemas.ts":
/*!*******************************************!*\
  !*** ./src/hooks/apiResources/schemas.ts ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSchemas: () => (/* binding */ useSchemas)\n/* harmony export */ });\n/* unused harmony exports useLazySchemasQuery, useSchemasQuery */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var src_hooks_useEffectEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/hooks/useEffectEvent */ \"./src/hooks/useEffectEvent.ts\");\n/* harmony import */ var _queryApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queryApi */ \"./src/hooks/apiResources/queryApi.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\nconst schemaApi = _queryApi__WEBPACK_IMPORTED_MODULE_2__.api.injectEndpoints({\n  endpoints: (builder) => ({\n    schemas: builder.query({\n      providesTags: [{ type: 'Schemas', id: 'LIST' }],\n      query: (_ref) => {let { dbId, forceRefresh } = _ref;return {\n          endpoint: `/api/v1/database/${dbId}/schemas/`,\n          // TODO: Would be nice to add pagination in a follow-up. Needs endpoint changes.\n          urlParams: {\n            force: forceRefresh\n          },\n          transformResponse: (_ref2) => {let { json } = _ref2;return json.result.map((value) => ({\n              value,\n              label: value,\n              title: value\n            }));}\n        };},\n      serializeQueryArgs: (_ref3) => {let { queryArgs: { dbId } } = _ref3;return {\n          dbId\n        };}\n    })\n  })\n});\nconst { useLazySchemasQuery, useSchemasQuery } = schemaApi;\nconst EMPTY_SCHEMAS = [];\nfunction useSchemas(options) {\n  const isMountedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  const { dbId, onSuccess, onError } = options || {};\n  const [trigger] = useLazySchemasQuery();\n  const result = useSchemasQuery({ dbId, forceRefresh: false }, {\n    skip: !dbId\n  });\n  const handleOnSuccess = (0,src_hooks_useEffectEvent__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((data, isRefetched) => {\n    onSuccess == null ? void 0 : onSuccess(data, isRefetched);\n  });\n  const handleOnError = (0,src_hooks_useEffectEvent__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(() => {\n    onError == null ? void 0 : onError();\n  });\n  const refetch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    if (dbId) {\n      trigger({ dbId, forceRefresh: true }).then((_ref4) => {let { isSuccess, isError, data } = _ref4;\n        if (isSuccess) {\n          handleOnSuccess(data || EMPTY_SCHEMAS, true);\n        }\n        if (isError) {\n          handleOnError();\n        }\n      });\n    }\n  }, [dbId, handleOnError, handleOnSuccess, trigger]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (isMountedRef.current) {\n      const { requestId, isSuccess, isError, isFetching, data, originalArgs } = result;\n      if (!(originalArgs != null && originalArgs.forceRefresh) && requestId && !isFetching) {\n        if (isSuccess) {\n          handleOnSuccess(data || EMPTY_SCHEMAS, false);\n        }\n        if (isError) {\n          handleOnError();\n        }\n      }\n    } else\n    {\n      isMountedRef.current = true;\n    }\n  }, [result, handleOnSuccess, handleOnError]);\n  return {\n    ...result,\n    refetch\n  };\n}__signature__(useSchemas, \"useRef{isMountedRef}\\nuseLazySchemasQuery{[trigger]}\\nuseSchemasQuery{result}\\nuseEffectEvent{handleOnSuccess}\\nuseEffectEvent{handleOnError}\\nuseCallback{refetch}\\nuseEffect{}\", () => [useLazySchemasQuery, useSchemasQuery, src_hooks_useEffectEvent__WEBPACK_IMPORTED_MODULE_1__[\"default\"], src_hooks_useEffectEvent__WEBPACK_IMPORTED_MODULE_1__[\"default\"]]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(schemaApi, \"schemaApi\", \"/app/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(useLazySchemasQuery, \"useLazySchemasQuery\", \"/app/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(useSchemasQuery, \"useSchemasQuery\", \"/app/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(EMPTY_SCHEMAS, \"EMPTY_SCHEMAS\", \"/app/superset-frontend/src/hooks/apiResources/schemas.ts\");reactHotLoader.register(useSchemas, \"useSchemas\", \"/app/superset-frontend/src/hooks/apiResources/schemas.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaG9va3MvYXBpUmVzb3VyY2VzL3NjaGVtYXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBO0FBQ0E7QUFDQTtBQWlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUdBO0FBRUE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFHQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUFBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9zcmMvaG9va3MvYXBpUmVzb3VyY2VzL3NjaGVtYXMudHM/ZDliNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlRWZmZWN0RXZlbnQgZnJvbSAnc3JjL2hvb2tzL3VzZUVmZmVjdEV2ZW50JztcbmltcG9ydCB7IGFwaSwgSnNvblJlc3BvbnNlIH0gZnJvbSAnLi9xdWVyeUFwaSc7XG5cbmV4cG9ydCB0eXBlIFNjaGVtYU9wdGlvbiA9IHtcbiAgdmFsdWU6IHN0cmluZztcbiAgbGFiZWw6IHN0cmluZztcbiAgdGl0bGU6IHN0cmluZztcbn07XG5cbmV4cG9ydCB0eXBlIEZldGNoU2NoZW1hc1F1ZXJ5UGFyYW1zID0ge1xuICBkYklkPzogc3RyaW5nIHwgbnVtYmVyO1xuICBmb3JjZVJlZnJlc2g6IGJvb2xlYW47XG4gIG9uU3VjY2Vzcz86IChkYXRhOiBTY2hlbWFPcHRpb25bXSwgaXNSZWZldGNoZWQ6IGJvb2xlYW4pID0+IHZvaWQ7XG4gIG9uRXJyb3I/OiAoKSA9PiB2b2lkO1xufTtcblxudHlwZSBQYXJhbXMgPSBPbWl0PEZldGNoU2NoZW1hc1F1ZXJ5UGFyYW1zLCAnZm9yY2VSZWZyZXNoJz47XG5cbmNvbnN0IHNjaGVtYUFwaSA9IGFwaS5pbmplY3RFbmRwb2ludHMoe1xuICBlbmRwb2ludHM6IGJ1aWxkZXIgPT4gKHtcbiAgICBzY2hlbWFzOiBidWlsZGVyLnF1ZXJ5PFNjaGVtYU9wdGlvbltdLCBGZXRjaFNjaGVtYXNRdWVyeVBhcmFtcz4oe1xuICAgICAgcHJvdmlkZXNUYWdzOiBbeyB0eXBlOiAnU2NoZW1hcycsIGlkOiAnTElTVCcgfV0sXG4gICAgICBxdWVyeTogKHsgZGJJZCwgZm9yY2VSZWZyZXNoIH0pID0+ICh7XG4gICAgICAgIGVuZHBvaW50OiBgL2FwaS92MS9kYXRhYmFzZS8ke2RiSWR9L3NjaGVtYXMvYCxcbiAgICAgICAgLy8gVE9ETzogV291bGQgYmUgbmljZSB0byBhZGQgcGFnaW5hdGlvbiBpbiBhIGZvbGxvdy11cC4gTmVlZHMgZW5kcG9pbnQgY2hhbmdlcy5cbiAgICAgICAgdXJsUGFyYW1zOiB7XG4gICAgICAgICAgZm9yY2U6IGZvcmNlUmVmcmVzaCxcbiAgICAgICAgfSxcbiAgICAgICAgdHJhbnNmb3JtUmVzcG9uc2U6ICh7IGpzb24gfTogSnNvblJlc3BvbnNlKSA9PlxuICAgICAgICAgIGpzb24ucmVzdWx0Lm1hcCgodmFsdWU6IHN0cmluZykgPT4gKHtcbiAgICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgICAgbGFiZWw6IHZhbHVlLFxuICAgICAgICAgICAgdGl0bGU6IHZhbHVlLFxuICAgICAgICAgIH0pKSxcbiAgICAgIH0pLFxuICAgICAgc2VyaWFsaXplUXVlcnlBcmdzOiAoeyBxdWVyeUFyZ3M6IHsgZGJJZCB9IH0pID0+ICh7XG4gICAgICAgIGRiSWQsXG4gICAgICB9KSxcbiAgICB9KSxcbiAgfSksXG59KTtcblxuZXhwb3J0IGNvbnN0IHsgdXNlTGF6eVNjaGVtYXNRdWVyeSwgdXNlU2NoZW1hc1F1ZXJ5IH0gPSBzY2hlbWFBcGk7XG5cbmNvbnN0IEVNUFRZX1NDSEVNQVMgPSBbXSBhcyBTY2hlbWFPcHRpb25bXTtcblxuZXhwb3J0IGZ1bmN0aW9uIHVzZVNjaGVtYXMob3B0aW9uczogUGFyYW1zKSB7XG4gIGNvbnN0IGlzTW91bnRlZFJlZiA9IHVzZVJlZihmYWxzZSk7XG4gIGNvbnN0IHsgZGJJZCwgb25TdWNjZXNzLCBvbkVycm9yIH0gPSBvcHRpb25zIHx8IHt9O1xuICBjb25zdCBbdHJpZ2dlcl0gPSB1c2VMYXp5U2NoZW1hc1F1ZXJ5KCk7XG4gIGNvbnN0IHJlc3VsdCA9IHVzZVNjaGVtYXNRdWVyeShcbiAgICB7IGRiSWQsIGZvcmNlUmVmcmVzaDogZmFsc2UgfSxcbiAgICB7XG4gICAgICBza2lwOiAhZGJJZCxcbiAgICB9LFxuICApO1xuXG4gIGNvbnN0IGhhbmRsZU9uU3VjY2VzcyA9IHVzZUVmZmVjdEV2ZW50KFxuICAgIChkYXRhOiBTY2hlbWFPcHRpb25bXSwgaXNSZWZldGNoZWQ6IGJvb2xlYW4pID0+IHtcbiAgICAgIG9uU3VjY2Vzcz8uKGRhdGEsIGlzUmVmZXRjaGVkKTtcbiAgICB9LFxuICApO1xuXG4gIGNvbnN0IGhhbmRsZU9uRXJyb3IgPSB1c2VFZmZlY3RFdmVudCgoKSA9PiB7XG4gICAgb25FcnJvcj8uKCk7XG4gIH0pO1xuXG4gIGNvbnN0IHJlZmV0Y2ggPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKGRiSWQpIHtcbiAgICAgIHRyaWdnZXIoeyBkYklkLCBmb3JjZVJlZnJlc2g6IHRydWUgfSkudGhlbihcbiAgICAgICAgKHsgaXNTdWNjZXNzLCBpc0Vycm9yLCBkYXRhIH0pID0+IHtcbiAgICAgICAgICBpZiAoaXNTdWNjZXNzKSB7XG4gICAgICAgICAgICBoYW5kbGVPblN1Y2Nlc3MoZGF0YSB8fCBFTVBUWV9TQ0hFTUFTLCB0cnVlKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGlzRXJyb3IpIHtcbiAgICAgICAgICAgIGhhbmRsZU9uRXJyb3IoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICApO1xuICAgIH1cbiAgfSwgW2RiSWQsIGhhbmRsZU9uRXJyb3IsIGhhbmRsZU9uU3VjY2VzcywgdHJpZ2dlcl0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGlzTW91bnRlZFJlZi5jdXJyZW50KSB7XG4gICAgICBjb25zdCB7IHJlcXVlc3RJZCwgaXNTdWNjZXNzLCBpc0Vycm9yLCBpc0ZldGNoaW5nLCBkYXRhLCBvcmlnaW5hbEFyZ3MgfSA9XG4gICAgICAgIHJlc3VsdDtcbiAgICAgIGlmICghb3JpZ2luYWxBcmdzPy5mb3JjZVJlZnJlc2ggJiYgcmVxdWVzdElkICYmICFpc0ZldGNoaW5nKSB7XG4gICAgICAgIGlmIChpc1N1Y2Nlc3MpIHtcbiAgICAgICAgICBoYW5kbGVPblN1Y2Nlc3MoZGF0YSB8fCBFTVBUWV9TQ0hFTUFTLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzRXJyb3IpIHtcbiAgICAgICAgICBoYW5kbGVPbkVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaXNNb3VudGVkUmVmLmN1cnJlbnQgPSB0cnVlO1xuICAgIH1cbiAgfSwgW3Jlc3VsdCwgaGFuZGxlT25TdWNjZXNzLCBoYW5kbGVPbkVycm9yXSk7XG5cbiAgcmV0dXJuIHtcbiAgICAuLi5yZXN1bHQsXG4gICAgcmVmZXRjaCxcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/hooks/apiResources/schemas.ts\n");

/***/ }),

/***/ "./src/hooks/apiResources/tables.ts":
/*!******************************************!*\
  !*** ./src/hooks/apiResources/tables.ts ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tableEndpoints: () => (/* binding */ tableEndpoints),\n/* harmony export */   useTableExtendedMetadataQuery: () => (/* binding */ useTableExtendedMetadataQuery),\n/* harmony export */   useTableMetadataQuery: () => (/* binding */ useTableMetadataQuery),\n/* harmony export */   useTables: () => (/* binding */ useTables)\n/* harmony export */ });\n/* unused harmony exports useLazyTablesQuery, useTablesQuery */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var src_hooks_useEffectEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/hooks/useEffectEvent */ \"./src/hooks/useEffectEvent.ts\");\n/* harmony import */ var _queryApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queryApi */ \"./src/hooks/apiResources/queryApi.ts\");\n/* harmony import */ var _schemas__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./schemas */ \"./src/hooks/apiResources/schemas.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\nconst tableApi = _queryApi__WEBPACK_IMPORTED_MODULE_2__.api.injectEndpoints({\n  endpoints: (builder) => ({\n    tables: builder.query({\n      providesTags: ['Tables'],\n      query: (_ref) => {let { dbId, schema, forceRefresh } = _ref;return {\n          endpoint: `/api/v1/database/${dbId != null ? dbId : 'undefined'}/tables/`,\n          // TODO: Would be nice to add pagination in a follow-up. Needs endpoint changes.\n          urlParams: {\n            force: forceRefresh,\n            schema_name: schema ? encodeURIComponent(schema) : ''\n          },\n          transformResponse: (_ref2) => {let { json } = _ref2;return {\n              options: json.result,\n              hasMore: json.count > json.result.length\n            };}\n        };},\n      serializeQueryArgs: (_ref3) => {let { queryArgs: { dbId, schema } } = _ref3;return {\n          dbId,\n          schema\n        };}\n    }),\n    tableMetadata: builder.query({\n      query: (_ref4) => {let { dbId, schema, table } = _ref4;return {\n          endpoint: `/api/v1/database/${dbId}/table/${encodeURIComponent(table)}/${encodeURIComponent(schema)}/`,\n          transformResponse: (_ref5) => {let { json } = _ref5;return json;}\n        };}\n    }),\n    tableExtendedMetadata: builder.query({\n      query: (_ref6) => {let { dbId, schema, table } = _ref6;return {\n          endpoint: `/api/v1/database/${dbId}/table_extra/${encodeURIComponent(table)}/${encodeURIComponent(schema)}/`,\n          transformResponse: (_ref7) => {let { json } = _ref7;return json;}\n        };}\n    })\n  })\n});\nconst { useLazyTablesQuery, useTablesQuery, useTableMetadataQuery, useTableExtendedMetadataQuery, endpoints: tableEndpoints } = tableApi;\nfunction useTables(options) {\n  const isMountedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  const { data: schemaOptions, isFetching } = (0,_schemas__WEBPACK_IMPORTED_MODULE_3__.useSchemas)({\n    dbId: options.dbId\n  });\n  const schemaOptionsMap = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => new Set(schemaOptions == null ? void 0 : schemaOptions.map((_ref8) => {let { value } = _ref8;return value;})), [schemaOptions]);\n  const { dbId, schema, onSuccess, onError } = options || {};\n  const enabled = Boolean(dbId && schema && !isFetching && schemaOptionsMap.has(schema));\n  const result = useTablesQuery({ dbId, schema, forceRefresh: false }, {\n    skip: !enabled\n  });\n  const [trigger] = useLazyTablesQuery();\n  const handleOnSuccess = (0,src_hooks_useEffectEvent__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((data, isRefetched) => {\n    onSuccess == null ? void 0 : onSuccess(data, isRefetched);\n  });\n  const handleOnError = (0,src_hooks_useEffectEvent__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((error) => {\n    onError == null ? void 0 : onError(error);\n  });\n  const refetch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    if (enabled) {\n      trigger({ dbId, schema, forceRefresh: true }).then((_ref9) => {let { isSuccess, isError, data, error } = _ref9;\n        if (isSuccess && data) {\n          handleOnSuccess(data, true);\n        }\n        if (isError) {\n          handleOnError(error);\n        }\n      });\n    }\n  }, [dbId, schema, enabled, handleOnSuccess, handleOnError, trigger]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (isMountedRef.current) {\n      const { requestId, isSuccess, isError, isFetching, data, error, originalArgs } = result;\n      if (!(originalArgs != null && originalArgs.forceRefresh) && requestId && !isFetching) {\n        if (isSuccess && data) {\n          handleOnSuccess(data, false);\n        }\n        if (isError) {\n          handleOnError(error);\n        }\n      }\n    } else\n    {\n      isMountedRef.current = true;\n    }\n  }, [result, handleOnSuccess, handleOnError]);\n  return {\n    ...result,\n    refetch\n  };\n}__signature__(useTables, \"useRef{isMountedRef}\\nuseSchemas{{ data: schemaOptions, isFetching }}\\nuseMemo{schemaOptionsMap}\\nuseTablesQuery{result}\\nuseLazyTablesQuery{[trigger]}\\nuseEffectEvent{handleOnSuccess}\\nuseEffectEvent{handleOnError}\\nuseCallback{refetch}\\nuseEffect{}\", () => [_schemas__WEBPACK_IMPORTED_MODULE_3__.useSchemas, useTablesQuery, useLazyTablesQuery, src_hooks_useEffectEvent__WEBPACK_IMPORTED_MODULE_1__[\"default\"], src_hooks_useEffectEvent__WEBPACK_IMPORTED_MODULE_1__[\"default\"]]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(tableApi, \"tableApi\", \"/app/superset-frontend/src/hooks/apiResources/tables.ts\");reactHotLoader.register(useLazyTablesQuery, \"useLazyTablesQuery\", \"/app/superset-frontend/src/hooks/apiResources/tables.ts\");reactHotLoader.register(useTablesQuery, \"useTablesQuery\", \"/app/superset-frontend/src/hooks/apiResources/tables.ts\");reactHotLoader.register(useTableMetadataQuery, \"useTableMetadataQuery\", \"/app/superset-frontend/src/hooks/apiResources/tables.ts\");reactHotLoader.register(useTableExtendedMetadataQuery, \"useTableExtendedMetadataQuery\", \"/app/superset-frontend/src/hooks/apiResources/tables.ts\");reactHotLoader.register(tableEndpoints, \"tableEndpoints\", \"/app/superset-frontend/src/hooks/apiResources/tables.ts\");reactHotLoader.register(useTables, \"useTables\", \"/app/superset-frontend/src/hooks/apiResources/tables.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/hooks/apiResources/tables.ts\n");

/***/ }),

/***/ "./src/hooks/useEffectEvent.ts":
/*!*************************************!*\
  !*** ./src/hooks/useEffectEvent.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useEffectEvent)\n/* harmony export */ });\n/* harmony import */ var use_event_callback__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! use-event-callback */ \"./node_modules/use-event-callback/lib/index.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// TODO: Replace to react-use-event-hook once https://github.com/facebook/react/pull/25881 is released\n\n/**\n * Similar to useCallback, with a few subtle differences:\n * @external\n * https://github.com/reactjs/rfcs/blob/useevent/text/0000-useevent.md#internal-implementation\n * @example\n * const onStateChanged = useEffectEvent((state: T) => log(['clicked', state]));\n *\n * useEffect(() => {\n *   onStateChanged(state);\n * }, [onStateChanged, state]);\n * // ^ onStateChanged is guaranteed to never change and always be up to date!\n */\nfunction useEffectEvent(fn) {\n  return (0,use_event_callback__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(fn);\n}__signature__(useEffectEvent, \"useEventCallback{}\", () => [use_event_callback__WEBPACK_IMPORTED_MODULE_0__[\"default\"]]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useEffectEvent, \"useEffectEvent\", \"/app/superset-frontend/src/hooks/useEffectEvent.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaG9va3MvdXNlRWZmZWN0RXZlbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBO0FBQ0E7QUFJQTs7Ozs7Ozs7Ozs7O0FBWUE7QUFHQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9zcmMvaG9va3MvdXNlRWZmZWN0RXZlbnQudHM/ZGM1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG4vLyBUT0RPOiBSZXBsYWNlIHRvIHJlYWN0LXVzZS1ldmVudC1ob29rIG9uY2UgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L3B1bGwvMjU4ODEgaXMgcmVsZWFzZWRcbmltcG9ydCB1c2VFdmVudENhbGxiYWNrIGZyb20gJ3VzZS1ldmVudC1jYWxsYmFjayc7XG5cbmRlY2xhcmUgdHlwZSBGbjxBUkdTIGV4dGVuZHMgYW55W10sIFI+ID0gKC4uLmFyZ3M6IEFSR1MpID0+IFI7XG5cbi8qKlxuICogU2ltaWxhciB0byB1c2VDYWxsYmFjaywgd2l0aCBhIGZldyBzdWJ0bGUgZGlmZmVyZW5jZXM6XG4gKiBAZXh0ZXJuYWxcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JmY3MvYmxvYi91c2VldmVudC90ZXh0LzAwMDAtdXNlZXZlbnQubWQjaW50ZXJuYWwtaW1wbGVtZW50YXRpb25cbiAqIEBleGFtcGxlXG4gKiBjb25zdCBvblN0YXRlQ2hhbmdlZCA9IHVzZUVmZmVjdEV2ZW50KChzdGF0ZTogVCkgPT4gbG9nKFsnY2xpY2tlZCcsIHN0YXRlXSkpO1xuICpcbiAqIHVzZUVmZmVjdCgoKSA9PiB7XG4gKiAgIG9uU3RhdGVDaGFuZ2VkKHN0YXRlKTtcbiAqIH0sIFtvblN0YXRlQ2hhbmdlZCwgc3RhdGVdKTtcbiAqIC8vIF4gb25TdGF0ZUNoYW5nZWQgaXMgZ3VhcmFudGVlZCB0byBuZXZlciBjaGFuZ2UgYW5kIGFsd2F5cyBiZSB1cCB0byBkYXRlIVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VFZmZlY3RFdmVudDxBIGV4dGVuZHMgYW55W10sIFI+KFxuICBmbjogRm48QSwgUj4sXG4pOiBGbjxBLCBSPiB7XG4gIHJldHVybiB1c2VFdmVudENhbGxiYWNrKGZuKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/hooks/useEffectEvent.ts\n");

/***/ }),

/***/ "./node_modules/tiny-invariant/dist/tiny-invariant.esm.js":
/*!****************************************************************!*\
  !*** ./node_modules/tiny-invariant/dist/tiny-invariant.esm.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar isProduction = \"development\" === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    throw new Error(prefix + \": \" + (message || ''));\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (invariant);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5lc20uanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy90aW55LWludmFyaWFudC9kaXN0L3RpbnktaW52YXJpYW50LmVzbS5qcz9mNTFmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xudmFyIHByZWZpeCA9ICdJbnZhcmlhbnQgZmFpbGVkJztcbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgICBpZiAoY29uZGl0aW9uKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4KTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCArIFwiOiBcIiArIChtZXNzYWdlIHx8ICcnKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js\n");

/***/ }),

/***/ "./node_modules/tiny-warning/dist/tiny-warning.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/tiny-warning/dist/tiny-warning.esm.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar isProduction = \"development\" === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (warning);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGlueS13YXJuaW5nL2Rpc3QvdGlueS13YXJuaW5nLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvdGlueS13YXJuaW5nL2Rpc3QvdGlueS13YXJuaW5nLmVzbS5qcz8yZDQ0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xuZnVuY3Rpb24gd2FybmluZyhjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgaWYgKCFpc1Byb2R1Y3Rpb24pIHtcbiAgICBpZiAoY29uZGl0aW9uKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHRleHQgPSBcIldhcm5pbmc6IFwiICsgbWVzc2FnZTtcblxuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUud2Fybih0ZXh0KTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgdGhyb3cgRXJyb3IodGV4dCk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB3YXJuaW5nO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/tiny-warning/dist/tiny-warning.esm.js\n");

/***/ }),

/***/ "./node_modules/use-event-callback/lib/index.js":
/*!******************************************************!*\
  !*** ./node_modules/use-event-callback/lib/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\r\nconst useEventCallback = (fn) => {\r\n    let ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(fn);\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\r\n        ref.current = fn;\r\n    });\r\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (...args) => {\r\n        const { current } = ref;\r\n        return current(...args);\r\n    }, []);\r\n};\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useEventCallback);\r\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXNlLWV2ZW50LWNhbGxiYWNrL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy91c2UtZXZlbnQtY2FsbGJhY2svbGliL2luZGV4LmpzPzU3NjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlTGF5b3V0RWZmZWN0LCB1c2VNZW1vLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XHJcbmNvbnN0IHVzZUV2ZW50Q2FsbGJhY2sgPSAoZm4pID0+IHtcclxuICAgIGxldCByZWYgPSB1c2VSZWYoZm4pO1xyXG4gICAgdXNlTGF5b3V0RWZmZWN0KCgpID0+IHtcclxuICAgICAgICByZWYuY3VycmVudCA9IGZuO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gdXNlTWVtbygoKSA9PiAoLi4uYXJncykgPT4ge1xyXG4gICAgICAgIGNvbnN0IHsgY3VycmVudCB9ID0gcmVmO1xyXG4gICAgICAgIHJldHVybiBjdXJyZW50KC4uLmFyZ3MpO1xyXG4gICAgfSwgW10pO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCB1c2VFdmVudENhbGxiYWNrO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/use-event-callback/lib/index.js\n");

/***/ }),

/***/ "./node_modules/value-equal/esm/value-equal.js":
/*!*****************************************************!*\
  !*** ./node_modules/value-equal/esm/value-equal.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction valueOf(obj) {\n  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);\n}\n\nfunction valueEqual(a, b) {\n  // Test for strict equality first.\n  if (a === b) return true;\n\n  // Otherwise, if either of them == null they are not equal.\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return (\n      Array.isArray(b) &&\n      a.length === b.length &&\n      a.every(function(item, index) {\n        return valueEqual(item, b[index]);\n      })\n    );\n  }\n\n  if (typeof a === 'object' || typeof b === 'object') {\n    var aValue = valueOf(a);\n    var bValue = valueOf(b);\n\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n\n    return Object.keys(Object.assign({}, a, b)).every(function(key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (valueEqual);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdmFsdWUtZXF1YWwvZXNtL3ZhbHVlLWVxdWFsLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL3ZhbHVlLWVxdWFsL2VzbS92YWx1ZS1lcXVhbC5qcz9jNjE5Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHZhbHVlT2Yob2JqKSB7XG4gIHJldHVybiBvYmoudmFsdWVPZiA/IG9iai52YWx1ZU9mKCkgOiBPYmplY3QucHJvdG90eXBlLnZhbHVlT2YuY2FsbChvYmopO1xufVxuXG5mdW5jdGlvbiB2YWx1ZUVxdWFsKGEsIGIpIHtcbiAgLy8gVGVzdCBmb3Igc3RyaWN0IGVxdWFsaXR5IGZpcnN0LlxuICBpZiAoYSA9PT0gYikgcmV0dXJuIHRydWU7XG5cbiAgLy8gT3RoZXJ3aXNlLCBpZiBlaXRoZXIgb2YgdGhlbSA9PSBudWxsIHRoZXkgYXJlIG5vdCBlcXVhbC5cbiAgaWYgKGEgPT0gbnVsbCB8fCBiID09IG51bGwpIHJldHVybiBmYWxzZTtcblxuICBpZiAoQXJyYXkuaXNBcnJheShhKSkge1xuICAgIHJldHVybiAoXG4gICAgICBBcnJheS5pc0FycmF5KGIpICYmXG4gICAgICBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiZcbiAgICAgIGEuZXZlcnkoZnVuY3Rpb24oaXRlbSwgaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoaXRlbSwgYltpbmRleF0pO1xuICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBhID09PSAnb2JqZWN0JyB8fCB0eXBlb2YgYiA9PT0gJ29iamVjdCcpIHtcbiAgICB2YXIgYVZhbHVlID0gdmFsdWVPZihhKTtcbiAgICB2YXIgYlZhbHVlID0gdmFsdWVPZihiKTtcblxuICAgIGlmIChhVmFsdWUgIT09IGEgfHwgYlZhbHVlICE9PSBiKSByZXR1cm4gdmFsdWVFcXVhbChhVmFsdWUsIGJWYWx1ZSk7XG5cbiAgICByZXR1cm4gT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgYSwgYikpLmV2ZXJ5KGZ1bmN0aW9uKGtleSkge1xuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoYVtrZXldLCBiW2tleV0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2YWx1ZUVxdWFsO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/value-equal/esm/value-equal.js\n");

/***/ })

}]);